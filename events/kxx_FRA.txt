add_namespace = kxxfrance
add_namespace = kxx.news
country_event = {	
	id = kxxfrance.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.1.t
	desc = kxxfrance.1.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.1.a
	FRA = {
		annex_country = { target = BEL  }
		annex_country = { target = WLL  }
	}
	
}
option = { 
	name = kxxfrance.1.b
	FRA = {
		create_wargoal = { target = BEL }
		create_wargoal = { target = WLL }
		country_event = kxxfrance.32
		
		
	}
	
}
}
country_event = {	
	id = kxxfrance.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.2.t
	desc = kxxfrance.2.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.2.a
}	
}	
country_event = {	
	id = kxxfrance.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.3.t
	desc = kxxfrance.3.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.3.a
	ai_chance = {
		factor = 100
	}
}	
option = { 
	name = kxxfrance.3.b
	ai_chance = {
		factor = 0
	}
	set_country_flag = PANEUROPE
	every_country = {
		limit = {
			NOT = {
				tag = FRA
			}
			capital_scope = { is_on_continent = europe }
			is_in_faction_with = FRA
		}
		country_event = kxxfrance.4
	}
}
}	
country_event = {	
	id = kxxfrance.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.4.t
	desc = kxxfrance.4.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.4.a
	ai_chance = {
		factor = 0
		
	}
}	
option = { 
	name = kxxfrance.4.b
	ai_chance = {
		factor = 100
		
	}
	FRA = {
		annex_country = { target = ROOT transfer_troops = yes }

	}
	every_unit_leader = {	
		set_nationality = FRA
	}
	every_state = {
		limit = {
			is_core_of = ROOT
		}
		FRA = { 
			add_state_core = PREV 
		}
	}
}
}
country_event = {	
	id = kxxfrance.5
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.5.t
	desc = kxxfrance.5.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.5.a
	create_faction =  "第三国际"
	every_country = {
		limit = {
			has_country_flag = PROBRITISH
		}
		ENG = {
			add_to_faction = PREV
		}

	}
}	
}	
country_event = {	
	id = kxxfrance.6
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.6.t
	desc = kxxfrance.6.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.6.a
	create_faction =  "地中海同盟"
}	
}	
country_event = {
	id = Frajocbin.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = Frajocbin.1.t
	desc = Frajocbin.1.d
is_triggered_only = yes
fire_only_once = yes
hidden = no
option = { 
	name = Frajocbin.1.a
	trigger = {
		always=yes
	}
	add_political_power = -50
	add_popularity = {
		ideology = totalist
		popularity = 0.04
	}
	add_ideas = FRA_farmer
	add_stability = -0.05
	
}
option = { 
	name = Frajocbin.1.b
	trigger = {
		always=yes
	}
	add_political_power = 20
}

}
country_event = {	
	id = kxxfrance.7
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.7.t
	desc = kxxfrance.7.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.7.a
	ai_chance = {
		factor = 34
	}
	set_country_flag = PROFRANCE
}
option = { 
	ai_chance = {
		factor = 33
	}
	name = kxxfrance.7.b
	set_country_flag = PROBRITISH
}	
option = { 
	ai_chance = {
		factor = 33
	}
	name = kxxfrance.7.c
	
}	
}
country_event = {	
	id = kxxfrance.8
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.8.t
	desc = kxxfrance.8.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.8.a
}	
}
country_event = {	
	id = kxxfrance.9
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.9.t
	desc = kxxfrance.9.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.9.a
	custom_effect_tooltip = "New Communal Elections will take place every 5 years!"
	hidden_effect = {
		country_event = { id = comfrance.1004 days = 1825 } # Repeat communal election every 5 years
	}
	
}	
option = { 
	name = kxxfrance.9.b
	if = {
		limit = {
			power_balance_value = {
				id = FRA_cachin_bop
				value < 0 
			}
		}
		hidden_effect = {
			country_event = {
				id = kxxfrance.10
				days = 2
			}
		}
		
	}else = {
		hidden_effect = {
			country_event = {
				id = kxxfrance.11
				days = 2
			}
		}
	}
	
}
}
country_event = {	
	id = kxxfrance.10
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.10.t
	desc = kxxfrance.10.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.10.a
	create_country_leader = {
		name = "马塞尔·加香"
		picture = "gfx/leaders/FRA/Portrait_France_Marcel_Cachin.png"
		expire = "1.1.1"
		ideology = broad_communism_subtype
	}
	set_politics = {
		ruling_party = totalist
	}	
	set_party_name = {
		ideology = totalist
		long_name = FRA_parti_communiste_long
		name = FRA_parti_communiste
	}
	set_party_name = {
		ideology = syndicalist
		long_name = "革命工团委员会"
		name = "革命工团委员会"
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = "联邦无政府主义者同盟"
		name = "联邦无政府主义者同盟"
	}
	set_party_name = {
		ideology = social_democrat
		long_name = "工农社会党"
		name = "工农社会党"
	}
	set_country_flag = FRA_cachin_bop_ends
	set_country_flag = FRA_mod_jac_sup
	complete_national_focus = FRA_towards_extreme_revolution
	remove_power_balance_modifier = {
		id = FRA_cachin_bop
		modifier = FRA_reactionaries_on_the_move
	}
}	
}
country_event = {	
	id = kxxfrance.11
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.11.t
	desc = kxxfrance.11.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.11.a
	create_country_leader = {
		name = "临时政务会议"
		picture = "gfx/leaders/FRA/Portrait_FRA_Conseil.png"
		expire = "1.1.1"
		ideology = syndicalist_subtype
	}
	remove_power_balance = {
		id = FRA_cachin_bop
	}
	remove_ideas = FRA_commie_syndie
	remove_ideas = FRA_commie_syndie2
	remove_ideas = FRA_commie_syndie3
	remove_ideas = FRA_commie_syndie4
	country_event = {
		id = kxxfrance.12
		days = 7
	}
}

}
country_event = {	
	id = kxxfrance.12
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.12.t
	desc = kxxfrance.12.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.12.a
	create_country_leader = {
		name = "马塞尔·戴亚"
		desc = "POLITICS_MARCEL_DEAT_DESC"
		picture = "gfx/leaders/FRA/Portrait_France_Marcel_Deat_Emergency.png"
		expire = "1.1.1"
		traits = { chairman_leader }
		ideology = neo_socialism_subtype
	}
	set_politics = {
		ruling_party = totalist
	}
	set_party_name = {
		ideology = totalist
		long_name = FRA_deat_start_long
		name = FRA_deat_start
	}
	set_cosmetic_tag = FRA_Deat	 
	hidden_effect = {	
		remove_ideas_with_trait = head_of_government
		add_ideas = FRA_Ernest_Lafont_hog_tot
		remove_ideas_with_trait = foreign_minister
		add_ideas = FRA_Adrien_Marquet_for_tot
		remove_ideas_with_trait = economy_minister
		add_ideas = FRA_Max_Hymans_eco_tot
		remove_ideas_with_trait = security_minister
		add_ideas = FRA_Max_Bonnafous_sec_tot
		add_popularity = {
		  ideology = totalist
		   popularity = 0.20
		 }
		complete_national_focus = FRA_Paris_en_ordre
		remove_ideas = FRA_valois_dead_idea
		remove_ideas = French_Revanchism_idea
		country_event = {
			id = comfrance.929
			days = 5
		}	 
	}
}	
option = { 
	name = kxxfrance.12.b
	set_politics = {
		ruling_party = social_democrat
		elections_allowed = no
	}

	add_popularity = {
		ideology = social_democrat
		popularity = 0.3
	}

	add_popularity = {
		ideology = totalist
		popularity = -0.3
	}


	create_country_leader = {
		name = "莫里斯·甘末林"
		desc = "POLITICS_GAMELIN_DESC"
		picture = "gfx/leaders/FRA/Portrait_France_Maurice_Gamelin_KR.png"
		expire = "1965.1.1"
		ideology = syndicalist_subtype
		traits = {marshal_leader}
	}

	create_country_leader = {
		name = "莫里斯·甘末林"
		desc = "POLITICS_GAMELIN_DESC"
		picture = "gfx/leaders/FRA/Portrait_France_Maurice_Gamelin_KR.png"
		expire = "1965.1.1"
		ideology = marechal_democracy_subtype
		traits = {marshal_leader}
	}

	create_country_leader = {
		name = "莫里斯·甘末林"
		desc = "POLITICS_GAMELIN_DESC"
		picture = "gfx/leaders/FRA/Portrait_France_Maurice_Gamelin_KR.png"
		expire = "1965.1.1"
		ideology = radical_socialist_subtype
		traits = {marshal_leader}
	}

	create_country_leader = {
		name = "乔治·瓦卢瓦"
		desc = "POLITICS_GEORGES_VALOIS_DESC"
		picture = "gfx/leaders/FRA/Portrait_France_Georges_Valois.png"
		expire = "1965.1.1"
		ideology = sorelianism_subtype
		traits = {}
	}

	remove_all_ministers = yes
	add_ideas = FRA_Leon_Blum_hog_rso
	add_ideas = FRA_Jean_Paul_Sartre_for_rso
	add_ideas = FRA_Daniel_Guerin_eco_rso
	add_ideas = FRA_Adrien_Tixier_sec_syn
		set_cosmetic_tag = FRA_Gamelin
	set_country_flag = LEADER_GUI_VISIBLE
	random_unit_leader = {
			limit = { has_id = 200 }
			remove_unit_leader = yes
		}
	set_country_flag = soc_dems_are_socialists
	set_country_flag = JACOBIN_BAN
		clr_country_flag = GAMELIN1
		clr_country_flag = GAMELIN2
		clr_country_flag = COMMUNIST_FRANCE
		set_country_flag = Maurice_Thorez_dead
		set_country_flag = Lucien_Midol_dead
		set_country_flag = Jean_Marie_Clamamus_dead
		set_country_flag = Claudine_Chomat_dead
		set_country_flag = Georges_Levy_dead
		set_country_flag = Jean_Jerome_dead
		set_country_flag = Waldeck_Rochet_dead
		set_country_flag = Gustave_Guehenneux_dead
		set_country_flag = Marcel_Gitton_dead
		set_country_flag = Marcel_Cachin_dead
		set_country_flag = Jacques_Duclos_dead
		set_country_flag = FRA_gamelins_coup

		if = {
			limit = {
				has_unit_leader = 200
			}
			random_unit_leader = {
				limit = { has_id = 200 }
				remove_unit_leader = yes
			}
		}
		if = {
			limit = {
				has_unit_leader = 201
			}
			random_unit_leader = {
				limit = { has_id = 201 }
				remove_unit_leader = yes
			}
		}

		set_party_name = {
			ideology = totalist
			long_name = FRA_sorelians
			name = FRA_sorelians
		}
		set_party_name = {
			ideology = social_democrat
			long_name = FRA_gamelin_party_long
			name = FRA_gamelin_party
		}
}
option = {
	name = kxxfrance.13.c
	add_stability = -0.1
	hidden_effect = {
		country_event = {
			id = kxxfrance.84
			days = 7
		}
	}
}
}
country_event = {	
	id = kxxfrance.13 #yay nap
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.13.t
	desc = kxxfrance.13.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.13.a
	create_country_leader = {
		name = "拿破仑六世"
		picture = "gfx/leaders/NFA/Portrait_NFA_Napoleon_VI.png"
		expire = "1.1.1"
		traits = { NFA_New_Eagle }
		ideology = radsoc_bonapartism_subtype
	}
	set_cosmetic_tag = FRA_rednap
	set_country_flag = KXX_LEADER_GUI_VISIBLE
	set_country_flag = FRA_Andre_Chaumet_VISIBLE
	
}

}
country_event = {	
	id = kxxfrance.14 #crown pope?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.14.t
	desc = kxxfrance.14.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.14.a
	ai_chance = {
		factor = 100
	}
	create_country_leader = {
		name = "利奥十四世"
		picture = "gfx/leaders/PAP/Portrait_Papal_State_Leo.png"
		expire = "1.1.1"
		ideology = christian_socialism_subtype
	}
	set_cosmetic_tag = FRA_pope
	set_country_flag = KXX_LEADER_GUI_VISIBLE
	set_country_flag = FRA_Simone_Weil_VISIBLE
	hidden_effect = {
		country_event = {
			id = kxxfrance.18
			days = 7
		}
		if = {
			limit = {
				PAP = {
					OR = {
						has_country_leader = {
							ruling_only = yes
							name = "利奥十四世"
						}
						has_country_leader = {
							ruling_only = yes
							name = "Leo XIV"
						}
						has_country_leader = {
							ruling_only = yes
							name = "若望二十三世"
						}
						has_country_leader = {
							ruling_only = yes
							name = "John XXIII"
						}
					}
				}
			}
			FRA = {
				annex_country = {
					target = PAP
					transfer_troops = yes
				}
			}
			PAP = {
				every_unit_leader = {
					set_nationality = FRA
				}
				KLY = { transfer_technology = yes }
			}
			every_state = {
				limit = {
					is_core_of = PAP
				}
				FRA = {
					add_state_core = PREV
				}
			}
		}
	}
}
option = { 
	name = kxxfrance.14.b
	set_cosmetic_tag = FRA_pope
	set_country_flag = KXX_LEADER_GUI_VISIBLE
	set_country_flag = FRA_Jesus_Weil_VISIBLE
	set_country_leader_ideology = radsoc_left_occultism_subtype
	hidden_effect = {
		every_state = {
			limit = { 
				OR = {
					is_core_of = GEO
					is_claimed_by = GEO
					is_core_of = ARM
					is_claimed_by = ARM
					is_on_continent = europe
					is_on_continent = north_america is_on_continent = central_america is_on_continent = south_america
				}
			}
			add_core_of = ROOT
			#national france
			458 = { add_core_of = ROOT }
			665 = { add_core_of = ROOT }
			513 = { add_core_of = ROOT }
			460 = { add_core_of = ROOT }
			459 = { add_core_of = ROOT }
			805 = { add_core_of = ROOT }
			514 = { add_core_of = ROOT }
			968 = { add_core_of = ROOT }
			557 = { add_core_of = ROOT }
			967 = { add_core_of = ROOT }
			#土耳其
			340 = { add_core_of = ROOT }
			339 = { add_core_of = ROOT }
			342 = { add_core_of = ROOT }
			164 = { add_core_of = ROOT }
			343 = { add_core_of = ROOT }
			346 = { add_core_of = ROOT }
			49 = { add_core_of = ROOT }
			356 = { add_core_of = ROOT }
			344 = { add_core_of = ROOT }
			345 = { add_core_of = ROOT }
			355 = { add_core_of = ROOT }
			354 = { add_core_of = ROOT }
			1001 = { add_core_of = ROOT }	
			#spain
			290 = { add_core_of = ROOT }
			699 = { add_core_of = ROOT }
			1318 = { add_core_of = ROOT }
			#morocco
			461 = { add_core_of = ROOT }
			462 = { add_core_of = ROOT }
			#ottoman empire
			273 = { add_core_of = ROOT }
			450 = { add_core_of = ROOT }
			448 = { add_core_of = ROOT }
			#cyrenica
			1009 = { add_core_of = ROOT }
			663 = { add_core_of = ROOT }
			451 = { add_core_of = ROOT }			   
			#沙姆
			677 = { add_core_of = ROOT }
			680 = { add_core_of = ROOT }
			995 = { add_core_of = ROOT }
			554 = { add_core_of = ROOT }
			553 = { add_core_of = ROOT }
			992 = { add_core_of = ROOT }
			455 = { add_core_of = ROOT }
			454 = { add_core_of = ROOT }
			350 = { add_core_of = ROOT }
			#密斯儿
			753 = { add_core_of = ROOT }
			452 = { add_core_of = ROOT }
			447 = { add_core_of = ROOT }
			446 = { add_core_of = ROOT }
			552 = { add_core_of = ROOT }
			1008 = { add_core_of = ROOT }
			457 = { add_core_of = ROOT }
			456 = { add_core_of = ROOT }
			453 = { add_core_of = ROOT }
			#群岛
			178 = { add_core_of = ROOT }
			702 = { add_core_of = ROOT }
			GER = { 
				add_timed_idea = {
					idea = yun_fatimah_punishment
					days = 730
				}			
			}
			CAN = { 
				add_timed_idea = {
					idea = yun_fatimah_punishment
					days = 730
				}			
			}
			NFA = { 
				add_timed_idea = {
					idea = yun_fatimah_punishment
					days = 730
				}			
			}
		}
	}
}
	option = { 
		name = kxxfrance.14.c
	}
}
country_event = {	
	id = kxxfrance.15 #fate of radsocs
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.15.t
	desc = kxxfrance.15.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #kill kill kill
	name = kxxfrance.15.a
	add_manpower = -1000
	add_popularity = {
		ideology = radical_socialist
		 popularity = -0.20
	}
	add_popularity = {
		ideology = social_democrat
		 popularity = -0.20
	}
}
option = { #spare
	name = kxxfrance.15.b
	add_stability = 0.1
	add_political_power = 100
}
}
country_event = {	
	id = kxxfrance.16 #elections?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.16.t
	desc = kxxfrance.16.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.16.a
	complete_national_focus = FRA_Restoring_Socialist_Order
}
option = { 
	name = kxxfrance.16.b
	country_event = {
		id = kxxfrance.17
		days = 7
	}
}
option = {
	name = kxxfrance.16.c
	add_stability = -0.1
	hidden_effect = {
		country_event = {
			id = kxxfrance.84
			days = 7
		}
	}
}
}
country_event = {	
	id = kxxfrance.17 #elections!
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.17.t
	desc = kxxfrance.17.d

	is_triggered_only = yes

option = { 
	name = kxxfrance.17.a #yay deat again
	ai_chance = {
		factor = 50
	}
	complete_national_focus = FRA_Restoring_Socialist_Order
}

option = { 
	name = kxxfrance.17.b #yay dorgeres
	ai_chance = {
		factor = 50
	}
	create_country_leader = {
		name = "亨利·多尔热"

		picture = "gfx/leaders/FRA/Portrait_FRA_Henri_Dorgeres.png"
		expire = "1.1.1"
		traits = { protector_of_farmers }
		ideology = agrarian_socialism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = FRA_dorgeres_party
		name = FRA_dorgeres_party
	}
	set_cosmetic_tag = FRA_dorgeres
	hidden_effect = {	
		remove_ideas_with_trait = head_of_government
		add_ideas = FRA_Henri_Dorgeres_hog_rso
		remove_ideas_with_trait = foreign_minister
		add_ideas = FRA_Jacques_Le_Roy_Ladurie_for_rso
		remove_ideas_with_trait = economy_minister
		add_ideas = FRA_Pierre_Caziot_eco_rso
		remove_ideas_with_trait = security_minister
		add_ideas = FRA_Pierre_Poujade_sec_rso
		add_popularity = {
		  ideology = radical_socialist
		   popularity = 0.20
		 }
		complete_national_focus = FRA_peasant_front
		remove_ideas = FRA_valois_dead_idea
		remove_ideas = French_Revanchism_idea
		 
	}
}
option = { 
	name = kxxfrance.17.c #yay herve
	ai_chance = {
		factor = 50
	}
	create_country_leader = {
		name = "古斯塔夫·爱尔威"

		picture = "gfx/leaders/FRA/Portrait_FRA_Gustaf_Herve.png"
		expire = "1.1.1"
		traits = { pacifist_millitarist }
		ideology = hervism_subtype
	}
	set_politics = {
		ruling_party = totalist
	}
	set_party_name = {
		ideology = totalist
		long_name = FRA_herve_party
		name = FRA_herve_party
	}
	set_cosmetic_tag = FRA_herve
	hidden_effect = {	
		remove_ideas_with_trait = head_of_government
		add_ideas = FRA_Gustaf_Herve_hog_tot
		remove_ideas_with_trait = foreign_minister
		add_ideas = FRA_Jean_Allemane_for_tot
		remove_ideas_with_trait = economy_minister
		add_ideas = FRA_Victor_Meric_eco_tot
		remove_ideas_with_trait = security_minister
		add_ideas = FRA_Alexandre_Zevaes_sec_tot
		add_popularity = {
		  ideology = totalist
		   popularity = 0.20
		 }
		complete_national_focus = FRA_herve_win
		remove_ideas = FRA_valois_dead_idea
		remove_ideas = French_Revanchism_idea
		 
	}
}
option = { 
	name = kxxfrance.17.f #ohhhhhh napoleon!!!!
	ai_chance = {
		factor = 50
	}
	create_country_leader = {
		name = "安德烈·肖梅"

		picture = "gfx/leaders/FRA/Portrait_FRA_Andre_Chaumet.png"
		expire = "1.1.1"
		ideology = radsoc_bonapartism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = FRA_nap_party
		name = FRA_nap_party
	}
	set_cosmetic_tag = FRA_consulat
	hidden_effect = {	
		remove_ideas_with_trait = head_of_government
		add_ideas = FRA_Andre_Chaumet_hog_rso
		remove_ideas_with_trait = foreign_minister
		add_ideas = FRA_Jean_FRAlais_for_rso
		remove_ideas_with_trait = economy_minister
		add_ideas = FRA_Paul_Cassagnac_eco_rso
		remove_ideas_with_trait = security_minister
		add_ideas = FRA_Joachim_Napoleon_sec_rso
		add_popularity = {
		  ideology = radical_socialist
		   popularity = 0.20
		 }
		complete_national_focus = FRA_red_bonaparte
		remove_ideas = FRA_valois_dead_idea
		remove_ideas = French_Revanchism_idea
		 
	}
}
option = { 
	name = kxxfrance.17.e #yay red flood garbage
	ai_chance = {
		factor = 50
	}
	create_country_leader = {
		name = "西蒙娜·威尔"

		picture = "gfx/leaders/FRA/Portrait_Simone_Weil.png"
		expire = "1.1.1"
		traits = { Devout }
		ideology = christian_socialism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = FRA_christsoc_party
		name = FRA_christsoc_party
	}
	set_cosmetic_tag = FRA_christsoc
	hidden_effect = {	
		remove_ideas_with_trait = head_of_government
		add_ideas = FRA_Simone_Weil_hog_rso
		remove_ideas_with_trait = foreign_minister
		add_ideas = FRA_Gaston_Tessier_for_rso
		remove_ideas_with_trait = economy_minister
		add_ideas = FRA_Pierre_Pascal_eco_rso
		remove_ideas_with_trait = security_minister
		add_ideas = FRA_Jules_Catoire_sec_rso
		add_popularity = {
		  ideology = radical_socialist
		   popularity = 0.20
		 }
		complete_national_focus = FRA_chrisitian_socialists
		remove_ideas = FRA_valois_dead_idea
		remove_ideas = French_Revanchism_idea
		 
	}
}
option = { 
	name = kxxfrance.30.a #who fucking cares just a cringe commie chad
	ai_chance = {
		factor = 50
	}
	country_event = {
		id = kxxfrance.30
	}
}
}

country_event = {	#戴亚选举第二部分
	id = kxxfrance.30
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.17.t
	desc = kxxfrance.17.d

	is_triggered_only = yes

	option = { 
		name = kxxfrance.17.g #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}
		create_country_leader = {
			name = "安德烈·洛吕奥"
	
			picture = "gfx/leaders/FRA/Portrait_FRA_Andre_Lorulot.png"
			expire = "1.1.1"
			traits = { anti_christ }
			ideology = militant_atheism_subtype
		}
		set_politics = {
			ruling_party = totalist
		}
		set_party_name = {
			ideology = totalist
			long_name = FRA_atheist_party
			name = FRA_atheist_party
		}
		set_cosmetic_tag = FRA_atheist
		hidden_effect = {	
			remove_ideas_with_trait = head_of_government
			add_ideas = FRA_Jacques_Duclos_hog_tot
			remove_ideas_with_trait = foreign_minister
			add_ideas = FRA_Marcel_Cachin_for_tot
			remove_ideas_with_trait = economy_minister
			add_ideas = FRA_Jean_Jerome_eco_tot
			remove_ideas_with_trait = security_minister
			add_ideas = FRA_Lucien_Midol_sec_tot
			add_popularity = {
			  ideology = totalist
			   popularity = 0.20
			 }
			complete_national_focus = FRA_millitant_godless
			remove_ideas = FRA_valois_dead_idea
			remove_ideas = French_Revanchism_idea
			 
		}
	}
	option = { 
		name = kxxfrance.17.h #red flood garbage again
		ai_chance = {
			factor = 50
		}
		create_country_leader = {
			name = "罗伯特·佩尔蒂埃"
	
			picture = "gfx/leaders/FRA/FRA_Robert_Pelletier.png"
			expire = "1.1.1"
			traits = { gaul_man }
			ideology = pan_celticism_subtype
		}
		set_politics = {
			ruling_party = radical_socialist
		}
		set_party_name = {
			ideology = radical_socialist
			long_name = FRA_celt_party
			name = FRA_celt_party
		}
		set_cosmetic_tag = FRA_celt
		hidden_effect = {	
			remove_ideas_with_trait = head_of_government
			add_ideas = FRA_Robert_Pelletier_hog_rso
			remove_ideas_with_trait = foreign_minister
			add_ideas = FRA_Phileas_Lebesgue_for_rso
			remove_ideas_with_trait = economy_minister
			add_ideas = FRA_Eugene_Figuiere_eco_rso
			remove_ideas_with_trait = security_minister
			add_ideas = FRA_Francois_Jaffrennou_sec_rso
			add_popularity = {
			  ideology = radical_socialist
			   popularity = 0.20
			 }
			complete_national_focus = FRA_reFRAn_to_past
			remove_ideas = FRA_valois_dead_idea
			remove_ideas = French_Revanchism_idea
			 
		}
	}
	option = { 
		name = kxxfrance.30.c #伊斯兰
		ai_chance = {
			factor = 50
		}
		create_country_leader = {
			name = "罗杰·加罗迪"
	
			picture = "gfx/leaders/FRA/Portrait_FRA_Roger_Gaurady.png"
			expire = "1.1.1"
			traits = {  }
			ideology = tot_islamic_socialism_subtype
		}
		set_politics = {
			ruling_party = totalist
		}
		set_party_name = {
			ideology = totalist
			long_name = "绿党-政治生态运动"
			name = "绿党"
		}
		set_party_name = {
			ideology = radical_socialist
			long_name = "绿党-政治生态运动"
			name = "绿党"
		}
		set_cosmetic_tag = FRA_islam
		hidden_effect = {	
			remove_ideas_with_trait = head_of_government
			add_ideas = FRA_Roger_Gaurady_hog_tot
			remove_ideas_with_trait = foreign_minister
			add_ideas = FRA_Paul_Rassinier_for_tot
			remove_ideas_with_trait = economy_minister
			add_ideas = FRA_Khalid_ibn_Hashim_eco_tot
			remove_ideas_with_trait = security_minister
			add_ideas = FRA_Abbe_Pierre_sec_tot
			add_popularity = {
			  ideology = totalist
			   popularity = 0.20
			}
			complete_national_focus = FRA_islamic_socialism
			remove_ideas = FRA_valois_dead_idea
			remove_ideas = French_Revanchism_idea
			 
		}
	}
	option = { 
		name = kxxfrance.30.e #dysutopia
		ai_chance = {
			factor = 50
		}
		create_country_leader = {
			name = "皮埃尔·普丘"
			picture = "gfx/leaders/FRP/Portrait_France_Pierre_Pucheu.png"
			expire = "1.1.1"
			traits = {  }
			ideology = radsoc_saint_simonianism_subtype
		}
		set_politics = {
			ruling_party = radical_socialist
		}
		
		set_party_name = {
			ideology = radical_socialist
			long_name = "共治帝国运动"
			name = "共治帝国运动"
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = "共治帝国运动"
			name = "共治帝国运动"
		}
		add_pataut_to_coalition = yes
		set_cosmetic_tag = FRA_sansimon
		hidden_effect = {	
			remove_ideas_with_trait = head_of_government
			add_ideas = FRA_Francois_Lehideux_hog_tot
			remove_ideas_with_trait = foreign_minister
			add_ideas = FRA_Jean_Coutrot_for_tot
			remove_ideas_with_trait = economy_minister
			add_ideas = FRA_Le_Corbusier_eco_tot
			remove_ideas_with_trait = security_minister
			add_ideas = FRA_Francis_Delaisi_sec_sde
			add_popularity = {
			  ideology = radical_socialist
			   popularity = 0.20
			}
			complete_national_focus = FRA_resurgent_of_sansimonism
			remove_ideas = FRA_valois_dead_idea
			remove_ideas = French_Revanchism_idea
			 
		}
	}
	option = { 
		name = kxxfrance.30.f #red flood again and again
		ai_chance = {
			factor = 50
		}
		create_country_leader = {
			name = "阿尔方斯·德·沙托布里昂"
			picture = "gfx/leaders/FRP/Portrait_France_Alphonse_de_Chateaubriant.png"
			expire = "1.1.1"
			traits = {  }
			ideology = popular_legionism
		}
		set_politics = {
			ruling_party = totalist
		}
		
		set_party_name = {
			ideology = totalist
			long_name = "民族革命阵线"
			name = "民族革命阵线"
		}
		set_cosmetic_tag = FRA_legionary
		hidden_effect = {	
			remove_ideas_with_trait = head_of_government
			add_ideas = FRA_Jean_Giono_hog_tot
			remove_ideas_with_trait = foreign_minister
			add_ideas = FRA_Paul_Morand_for_tot
			remove_ideas_with_trait = economy_minister
			add_ideas = FRA_Jean_Cocteau_eco_tot
			remove_ideas_with_trait = security_minister
			add_ideas = FRA_FRA_Marcel_Ayme_sec_tot
			add_popularity = {
			  ideology = totalist
			   popularity = 0.20
			}
			complete_national_focus = FRA_restore_calavry_spirits
			remove_ideas = FRA_valois_dead_idea
			remove_ideas = French_Revanchism_idea
			 
		}
	}
	option = { 
		name = kxxfrance.30.b #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}
		country_event = {
			id = kxxfrance.17
		}
	}
}
country_event = {	
	id = kxxfrance.18 #core italy
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.18.t
	desc = kxxfrance.18.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #cores!!!!
	name = kxxfrance.18.a
	ai_chance = {
		factor = 50
	}
	create_wargoal = {
		type = annex_everything
		target = SRI
	}
	create_wargoal = {
		type = annex_everything
		target = SIC
	}
	create_wargoal = {
		type = annex_everything
		target = ITA
	}
	create_wargoal = {
		type = annex_everything
		target = SRD
	}
	create_wargoal = {
		type = annex_everything
		target = PAP
	}
every_state = {
	limit = {
		is_core_of = ITA
	}
	FRA = { 
		add_state_core = PREV 
	}
}
every_state = {
	limit = {
		is_core_of = SRI
	}
	FRA = { 
		add_state_core = PREV 
	}
}
every_state = {
	limit = {
		is_core_of = SIC
	}
	FRA = { 
		add_state_core = PREV 
	}
}
every_state = {
	limit = {
		is_core_of = SRD
	}
	FRA = { 
		add_state_core = PREV 
	}
}
every_state = {
	limit = {
		is_core_of = PAP
	}
	FRA = { 
		add_state_core = PREV 
	}
}
}

}
country_event = {
	id = kxxfrance.19 #empire territory 
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.19.t
	desc = kxxfrance.19.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.19.a
	ai_chance = {
		factor = 50
	}
	set_country_flag = FRA_nap_puppet
			add_state_core = 42
			add_state_core = 781
			add_state_core = 8
			add_state_core = 741
			add_state_core = 34
			add_state_core = 6
			add_state_core = 979
			add_state_core = 978
			add_state_core = 35
			add_state_core = 1313
			add_state_core = 165
			add_state_core = 7
			add_state_core = 866
			add_state_core = 36
			add_state_core = 56
			add_state_core = 51
			add_state_core = 165
			add_state_core = 1313
			add_state_core = 1002
			add_state_core = 114
}	

option = { 
	name = kxxfrance.19.b
	set_country_flag = FRA_nap_euro
	set_cosmetic_tag = FRA_nap_europe
	ai_chance = {
		factor = 50
	}
	every_state = {
		limit = {
			is_on_continent = europe
		}
		FRA = { 
			add_state_core = PREV 
		}
	}
}
}
country_event = {	
	id = kxxfrance.20 #fate of radsocs
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.20.t
	desc = kxxfrance.20.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #kill kill kill
	name = kxxfrance.20.a
	add_manpower = -100
	add_popularity = {
		ideology = syndicalist
		 popularity = -0.20
	}
	remove_ideas = FRA_black_guard_insurgency_idea
}
option = { #spare
	name = kxxfrance.20.b
	add_stability = 0.1
	add_political_power = 100
	remove_ideas = FRA_black_guard_insurgency_idea
}
}
country_event = {	
	id = kxxfrance.21 #how much cores
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.21.t
	desc = kxxfrance.21.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #only celtics
	name = kxxfrance.21.a
	every_state = {
		limit = {
			OR = {
				region = 1
				region = 2
				region = 3
				region = 18
				region = 19
				region = 164
				region = 20
				region = 68
				region = 41
				region = 236
				region = 237
				region = 131
				region = 181
				region = 21
				region = 22
				region = 7
				region = 5
				region = 155
				region = 145
				region = 27
				region = 143
				region = 24
				region = 144
				region = 15
				region = 26
				region = 25
				region = 129
				region = 69
			}
		}
		add_core_of = FRA
	}
	every_state = {
		limit = {
			OR = {
				
				is_core_of = IRE
				is_claimed_by = IRE
				
				}
			}
		add_core_of = ROOT
		}		
	add_state_core = 58
	add_state_core = 59
	add_state_core = 1236
	add_state_core = 157
	add_state_core = 1005
	add_state_core = 764
	add_state_core = 162
	add_state_core = 1
	add_state_core = 65
	add_state_core = 60
	add_state_core = 57
	add_state_core = 56
	create_wargoal = {
		   target = ICE
		   type = annex_everything
		}
	create_wargoal = {
		   target = POR
		   type = annex_everything
		}
	create_wargoal = {
		   target = 983.owner
		   type = annex_everything
		}
	create_wargoal = {
		   target = 14.owner
		   type = annex_everything
		}	
	set_cosmetic_tag = IRE_CELT3
}
option = { #slavs too
	name = kxxfrance.21.b
	every_state = {
		limit = {
			OR = {
				region = 1
				region = 2
				region = 3
				region = 18
				region = 19
				region = 164
				region = 20
				region = 68
				region = 41
				region = 236
				region = 237
				region = 131
				region = 181
				region = 21
				region = 22
				region = 7
				region = 5
				region = 155
				region = 145
				region = 27
				region = 143
				region = 24
				region = 144
				region = 15
				region = 26
				region = 25
				region = 129
				region = 69
			}
		}
		add_core_of = FRA
	}
	add_state_core = 58
	add_state_core = 59
	add_state_core = 1236
	add_state_core = 157
	add_state_core = 1005
	add_state_core = 764
	add_state_core = 162
	add_state_core = 1
	add_state_core = 65
	add_state_core = 60
	add_state_core = 57
	add_state_core = 56
	create_wargoal = {
		   target = ICE
		   type = annex_everything
		}
	create_wargoal = {
		   target = POR
		   type = annex_everything
		}
	create_wargoal = {
		   target = 983.owner
		   type = annex_everything
		}
	create_wargoal = {
		   target = 14.owner
		   type = annex_everything
		}
		every_state = {
			limit = {
				OR = {
					is_core_of = RUS
					is_claimed_by = RUS
					is_core_of = TRM
					is_claimed_by = TRM
					is_core_of = UKR
					is_claimed_by = UKR
					is_core_of = WHR
					is_claimed_by = WHR
					is_core_of = SER
					is_claimed_by = SER
					is_core_of = BUL
					is_claimed_by = BUL
					is_core_of = IRE
					is_claimed_by = IRE
					is_core_of = CZE
					is_claimed_by = CZE
					is_core_of = SVK
					is_claimed_by = SVK
					is_core_of = POL
					is_claimed_by = POL
					is_core_of = GAL
					is_claimed_by = GAL						
					is_core_of = SLO
					is_claimed_by = SLO
					is_core_of = CRO
					is_claimed_by = CRO
					is_core_of = BOS
					is_claimed_by = BOS
					is_core_of = MNT
					is_claimed_by = MNT
					}
				}
			add_core_of = ROOT
			}			
			#加利西亚
			88 = { add_core_of = ROOT 
				    }
			1314 = { add_core_of = ROOT 
				    }
			1125 = { add_core_of = ROOT 
				    }
			1319 = { add_core_of = ROOT 
				    }
			1126 = { add_core_of = ROOT 
				    }
			1127 = { add_core_of = ROOT 
				    }
			89 = { add_core_of = ROOT 
				    }
			1140 = { add_core_of = ROOT 
				    }
			91 = { add_core_of = ROOT 
				    }
			1124 = { add_core_of = ROOT 
				    }
			#波兰 
			10 = { add_core_of = ROOT 
				    }
			90 = { add_core_of = ROOT 
				    }
			87 = { add_core_of = ROOT 
				    }
			98 = { add_core_of = ROOT 
				    }
			92 = { add_core_of = ROOT 
				    }
			1088 = { add_core_of = ROOT 
				    }
			97 = { add_core_of = ROOT 
				    }
			1148 = { add_core_of = ROOT 
				    }
			1329 = { add_core_of = ROOT 
				    }
			94 = { add_core_of = ROOT 
				    }		
			#乌克兰
			997 = { add_core_of = ROOT 
				    }
			93 = { add_core_of = ROOT 
				    }
			792 = { add_core_of = ROOT 
				    }
			1228 = { add_core_of = ROOT 
				    }
			1244 = { add_core_of = ROOT 
				    }
			201 = { add_core_of = ROOT 
				    }
			199 = { add_core_of = ROOT 
				    }
			1245 = { add_core_of = ROOT 
				    }
			198 = { add_core_of = ROOT 
				    }
			791 = { add_core_of = ROOT 
				    }
			1241 = { add_core_of = ROOT 
				    }
			1240 = { add_core_of = ROOT 
				    }
			1233 = { add_core_of = ROOT 
				    }
			226 = { add_core_of = ROOT 
				    }
			203 = { add_core_of = ROOT 
				    }
			1237 = { add_core_of = ROOT 
				    }
			202 = { add_core_of = ROOT 
				    }
			1238 = { add_core_of = ROOT 
				    }
			259 = { add_core_of = ROOT 
				    }
			1243 = { add_core_of = ROOT 
				    }
			225 = { add_core_of = ROOT 
				    }
			1242 = { add_core_of = ROOT 
				    }
			193 = { add_core_of = ROOT 
				    }
			1230 = { add_core_of = ROOT 
				    }
			241 = { add_core_of = ROOT 
				    }
			192 = { add_core_of = ROOT 
				    }
			1232 = { add_core_of = ROOT 
				    }
			197 = { add_core_of = ROOT 
				    }
			196 = { add_core_of = ROOT 
				    }
			1220 = { add_core_of = ROOT 
				    }
			137 = { add_core_of = ROOT 
				    }
			1221 = { add_core_of = ROOT 
				    }
			1234 = { add_core_of = ROOT 
				    }
			200 = { add_core_of = ROOT 
				    }
			1286 = { add_core_of = ROOT 
				    }
			228 = { add_core_of = ROOT 
				    }
			227 = { add_core_of = ROOT 
				    }
			1283 = { add_core_of = ROOT 
				    }
			1239 = { add_core_of = ROOT 
				    }
			221 = { add_core_of = ROOT 
				    }
			1285 = { add_core_of = ROOT 
				    }
			1284 = { add_core_of = ROOT 
				    }
			1282 = { add_core_of = ROOT 
				    }
			#俄罗斯
			240 = { add_core_of = ROOT 
				    }
			260 = { add_core_of = ROOT 
				    }
			253 = { add_core_of = ROOT 
				    }
			257 = { add_core_of = ROOT 
				    }
			254 = { add_core_of = ROOT 
				    }
			258 = { add_core_of = ROOT 
				    }
			1229 = { add_core_of = ROOT 
				    }
			821 = { add_core_of = ROOT 
				    }
			220 = { add_core_of = ROOT 
				    }
			222 = { add_core_of = ROOT 
				    }
			224 = { add_core_of = ROOT 
				    }
			223 = { add_core_of = ROOT 
				    }
			205 = { add_core_of = ROOT 
				    }
			243 = { add_core_of = ROOT 
				    }
			248 = { add_core_of = ROOT 
				    }
			351 = { add_core_of = ROOT 
				    }
			214 = { add_core_of = ROOT 
				    }
			219 = { add_core_of = ROOT 
				    }
			247 = { add_core_of = ROOT 
				    }
			246 = { add_core_of = ROOT 
				    }
			264 = { add_core_of = ROOT 
				    }
			755 = { add_core_of = ROOT 
				    }
			210 = { add_core_of = ROOT 
				    }
			1287 = { add_core_of = ROOT 
				    }
			880 = { add_core_of = ROOT 
				    }
			263 = { add_core_of = ROOT 
				    }
			244 = { add_core_of = ROOT 
				    }
			1290 = { add_core_of = ROOT 
				    }
			1289 = { add_core_of = ROOT 
				    }
			209 = { add_core_of = ROOT 
				    }
			1291 = { add_core_of = ROOT 
				    }
			1288 = { add_core_of = ROOT 
				    }
			208 = { add_core_of = ROOT 
				    }
			195 = { add_core_of = ROOT 
				    }
			1328 = { add_core_of = ROOT 
				    }
			1327 = { add_core_of = ROOT 
				    }
			216 = { add_core_of = ROOT 
				    }
			1274 = { add_core_of = ROOT 
				    }
			215 = { add_core_of = ROOT 
				    }
			242 = { add_core_of = ROOT 
				    }
			#白罗斯
			194 = { add_core_of = ROOT 
				    }
			95 = { add_core_of = ROOT 
				    }
			1295 = { add_core_of = ROOT 
				    }
			204 = { add_core_of = ROOT 
				    }
			207 = { add_core_of = ROOT 
				    }
			206 = { add_core_of = ROOT 
				    }
			1087 = { add_core_of = ROOT 
				    }
			1294 = { add_core_of = ROOT 
				    }
			722 = { add_core_of = ROOT 
				    }
			213 = { add_core_of = ROOT 
				    }
			96 = { add_core_of = ROOT 
				    }
			#西俄罗斯
			252 = { add_core_of = ROOT 
				    }
			255 = { add_core_of = ROOT 
				    }
			1205 = { add_core_of = ROOT 
				    }
			1204 = { add_core_of = ROOT 
				    }
			239 = { add_core_of = ROOT 
				    }
			401 = { add_core_of = ROOT 
				    }
			1207 = { add_core_of = ROOT 
				    }
			265 = { add_core_of = ROOT 
				    }
			217 = { add_core_of = ROOT 
				    }
			236 = { add_core_of = ROOT 
				    }
			1224 = { add_core_of = ROOT 
				    }
			256 = { add_core_of = ROOT 
				    }
			250 = { add_core_of = ROOT 
				    }
			1198 = { add_core_of = ROOT 
				    }
			262 = { add_core_of = ROOT 
				    }
			397 = { add_core_of = ROOT 
				    }
			398 = { add_core_of = ROOT 
				    }
			399 = { add_core_of = ROOT 
				    }
			400 = { add_core_of = ROOT 
				    }
			1193 = { add_core_of = ROOT 
				    }
			249 = { add_core_of = ROOT 
				    }
			1199 = { add_core_of = ROOT 
				    }
			251 = { add_core_of = ROOT 
				    }
			652 = { add_core_of = ROOT 
				    }
			651 = { add_core_of = ROOT 
				    }
			1194 = { add_core_of = ROOT 
				    }
			1195 = { add_core_of = ROOT 
				    }
			1197 = { add_core_of = ROOT 
				    }
			398 = { add_core_of = ROOT 
				    }
			581 = { add_core_of = ROOT 
				    }
			582 = { add_core_of = ROOT 
				    }
			573 = { add_core_of = ROOT 
				    }
			#大顿河军团
			1231 = { add_core_of = ROOT 
				    }
			1263 = { add_core_of = ROOT 
				    }
			218 = { add_core_of = ROOT 
				    }
			1265 = { add_core_of = ROOT 
				    }
			1264 = { add_core_of = ROOT 
				    }
			1226 = { add_core_of = ROOT 
				    }
			237 = { add_core_of = ROOT 
				    }
			238 = { add_core_of = ROOT 
				    }
			245 = { add_core_of = ROOT 
				    }
			1266 = { add_core_of = ROOT 
				    }
			#库班
			234 = { add_core_of = ROOT 
				    }
			235 = { add_core_of = ROOT 
				    }
			1227 = { add_core_of = ROOT 
				    }
			#北高加索   
			1186 = { add_core_of = ROOT 
				    }
			1187 = { add_core_of = ROOT 
				    }
			1189 = { add_core_of = ROOT 
				    }
			233 = { add_core_of = ROOT 
				    }
			787 = { add_core_of = ROOT 
				    }
			1191 = { add_core_of = ROOT 
				    }
			232 = { add_core_of = ROOT 
				    }
			#东西伯利亚
			40 = { add_core_of = ROOT 
				    }
			1292 = { add_core_of = ROOT 
				    }
			569 = { add_core_of = ROOT 
				    }
			575 = { add_core_of = ROOT 
				    }
			567 = { add_core_of = ROOT 
				    }
			568 = { add_core_of = ROOT 
				    }
			576 = { add_core_of = ROOT 
				    }
			516 = { add_core_of = ROOT 
				    }
			566 = { add_core_of = ROOT 
				    }
			565 = { add_core_of = ROOT 
				    }
			564 = { add_core_of = ROOT 
				    }
			563 = { add_core_of = ROOT 
				    }
			562 = { add_core_of = ROOT 
				    }
			637 = { add_core_of = ROOT 
				    }
			644 = { add_core_of = ROOT 
				    }
			574 = { add_core_of = ROOT 
				    }
			1246 = { add_core_of = ROOT 
				    }
			409 = { add_core_of = ROOT 
				    }
			560 = { add_core_of = ROOT 
				    }
			561 = { add_core_of = ROOT 
				    }
			657 = { add_core_of = ROOT 
				    }
			408 = { add_core_of = ROOT 
				    }
			1202 = { add_core_of = ROOT 
				    }
			654 = { add_core_of = ROOT 
				    }
			1293 = { add_core_of = ROOT 
				    }
			811 = { add_core_of = ROOT 
				    }
			#西西伯利亚
			1200 = { add_core_of = ROOT 
				    }
			580 = { add_core_of = ROOT 
				    }
			653 = { add_core_of = ROOT 
				    }
			572 = { add_core_of = ROOT 
				    }
			583 = { add_core_of = ROOT 
				    }
			588 = { add_core_of = ROOT 
				    }		
			403 = { add_core_of = ROOT 
				    }
			570 = { add_core_of = ROOT 
				    }
			577 = { add_core_of = ROOT 
				    }		
			578 = { add_core_of = ROOT 
				    }
			1201 = { add_core_of = ROOT 
				    }
			571 = { add_core_of = ROOT 
				    }
			
			48 = { add_core_of = ROOT 
				    }
			211 = { add_core_of = ROOT 
				    }
			212 = { add_core_of = ROOT 
				    }
			77 = { add_core_of = ROOT 
				    }
			184 = { add_core_of = ROOT 
				    }
			769 = { add_core_of = ROOT 
				    }
			1089 = { add_core_of = ROOT 
				    }
			106 = { add_core_of = ROOT 
				    }
			1271 = { add_core_of = ROOT 
				    }
			841 = { add_core_of = ROOT 
				    }
			1090 = { add_core_of = ROOT 
				    }
			770 = { add_core_of = ROOT 
				    }
			771 = { add_core_of = ROOT 
				    }
			772 = { add_core_of = ROOT 
				    }

			1222 = { add_core_of = ROOT 
				    }
			
			1269 = { add_core_of = ROOT 
				    }
			107 = { add_core_of = ROOT 
				    }
			765 = { add_core_of = ROOT 
				    }
			108 = { add_core_of = ROOT 
				    }
			767 = { add_core_of = ROOT 
				    }
			
			109 = { add_core_of = ROOT 
				    }
			1142 = { add_core_of = ROOT 
				    }
			1105 = { add_core_of = ROOT 
				    }
			1206 = { add_core_of = ROOT 
				    }
			103 = { add_core_of = ROOT 
				    }
			163 = { add_core_of = ROOT 
				    }
			1143 = { add_core_of = ROOT 
				    }
			1141 = { add_core_of = ROOT 
				    }
			104 = { add_core_of = ROOT 
				    }
			1145 = { add_core_of = ROOT 
				    }
			1098 = { add_core_of = ROOT 
				    }
			1270 = { add_core_of = ROOT 
				    }
			1099 = { add_core_of = ROOT 
				    }
			1102 = { add_core_of = ROOT 
				    }
			794 = { add_core_of = ROOT 
				    }
			1128 = { add_core_of = ROOT 
				    }
			105 = { add_core_of = ROOT 
				    }
			1097 = { add_core_of = ROOT 
				    }	
			#捷克
			1139 = { add_core_of = ROOT 
				    }
			1133 = { add_core_of = ROOT 
				    }
			1130 = { add_core_of = ROOT 
				    }
			786 = { add_core_of = ROOT 
				    }
			9 = { add_core_of = ROOT 
				    }
			1132 = { add_core_of = ROOT 
				    }
			71 = { add_core_of = ROOT 
				    }
			75 = { add_core_of = ROOT 
				    }
			74 = { add_core_of = ROOT 
				    }
			1131 = { add_core_of = ROOT 
				    }
			1138 = { add_core_of = ROOT 
				    }
			69 = { add_core_of = ROOT 
				    }
			1129 = { add_core_of = ROOT 
				    }
			1134 = { add_core_of = ROOT 
				    }
			#斯洛伐克
			1123 = { add_core_of = ROOT 
				    }
			70 = { add_core_of = ROOT 
				    } 
			1120 = { add_core_of = ROOT 
				    } 
			664 = { add_core_of = ROOT 
				    } 
			1121 = { add_core_of = ROOT 
				    } 
			1119 = { add_core_of = ROOT 
				    } 
			73 = { add_core_of = ROOT 
				    } 
			1136 = { add_core_of = ROOT 
				    } 
			1135 = { add_core_of = ROOT 
				    }
			1122 = { add_core_of = ROOT 
				    }	
			#斯洛文尼亚
			736 = { add_core_of = ROOT 
				    }
			1100 = { add_core_of = ROOT 
				    }
			1144 = { add_core_of = ROOT 
				    }
			102 = { add_core_of = ROOT 
				    }
			1104 = { add_core_of = ROOT 
				    }
			1272 = { add_core_of = ROOT 
				    }
			1103 = { add_core_of = ROOT 
				    }
			1101 = { add_core_of = ROOT 
				    }
			#伏伊伏丁那
			45 = { add_core_of = ROOT }
			#西巴纳特
			875 = { add_core_of = ROOT }
			#卡林西亚（原奥地利领土）	   
			835 = { add_core_of = ROOT }
			#波兹南
			86 = { add_core_of = ROOT }
			#西里西亚
			66 = { add_core_of = ROOT }
			67 = { add_core_of = ROOT }
			#波美拉尼亚
			63 = { add_core_of = ROOT }
			62 = { add_core_of = ROOT }
			#但泽
			776 = { add_core_of = ROOT }
			#马祖里亚
			777 = { add_core_of = ROOT }
			#诺伊马尔克
			68 = { add_core_of = ROOT }
			#梅克伦堡
			61 = { add_core_of = ROOT }
			#柏林
			64 = { add_core_of = ROOT }
			#萨克森
			65 = { add_core_of = ROOT }
			#萨哈林岛
			537 = { add_core_of = ROOT }
			#千岛群岛
			555 = { add_core_of = ROOT }	
			set_cosmetic_tag = FRA_celt_slav_union
}
}
country_event = {	
	id = kxxfrance.22 #lanoir reFRAn yellow syndie or not
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.22.t
	desc = kxxfrance.22.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #nein
	name = kxxfrance.22.a
	add_political_power = 50
}
option = { #ohyes
	name = kxxfrance.22.b
	set_politics = {
		ruling_party = syndicalist
	}
	add_tot_to_coalition = yes
}
}
country_event = {	
	id = kxxfrance.23 #marchais ideology picker
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.23.t
	desc = kxxfrance.23.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #nein
	name = kxxfrance.23.a
	add_political_power = 50
}
option = { 
	name = kxxfrance.23.b
	
	create_country_leader = {
		name = "乔治·马歇"  # Georges Marchais
		picture = "gfx/leaders/NRM/Portrait_Normandy_Georges_Marchais.png"
		expire = "1.1.1"
		ideology = popcom_subtype
	}
	
}
option = { 
	name = kxxfrance.23.c
	set_politics = {
		ruling_party = radical_socialist
	}
	create_country_leader = {
		name = "乔治·马歇"  # Georges Marchais
		picture = "gfx/leaders/NRM/Portrait_Normandy_Georges_Marchais.png"
		expire = "1.1.1"
		ideology = radsoc_popcom_subtype
	}
	add_tot_to_coalition = yes
}
option = { 
	name = kxxfrance.23.e
	set_politics = {
		ruling_party = radical_socialist
	}
	create_country_leader = {
		name = "乔治·马歇"  # Georges Marchais
		picture = "gfx/leaders/NRM/Portrait_Normandy_Georges_Marchais.png"
		expire = "1.1.1"
		ideology = broad_communism_subtype
	}
	add_tot_to_coalition = yes
}
option = { 
	name = kxxfrance.23.f
	set_politics = {
		ruling_party = radical_socialist
	}
	create_country_leader = {
		name = "乔治·马歇"  # Georges Marchais
		picture = "gfx/leaders/NRM/Portrait_Normandy_Georges_Marchais.png"
		expire = "1.1.1"
		ideology = radsoc_communism_subtype
	}
	add_tot_to_coalition = yes
}
}
country_event = {	
	id = kxxfrance.24 #anglo french union
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.24.t
	desc = kxxfrance.24.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #nein
	name = kxxfrance.24.a
	ai_chance = {
		factor = 0
	}
	add_political_power = 50
	
}
option = { #oh yes
	name = kxxfrance.24.b
	ai_chance = {
		factor = 100
	}
	if = {
		limit = {
			ENG = {
				is_ai = no
			}
		}
		every_state = {
			limit = {
				is_core_of = FRA
			}
			add_core_of = ENG

		}
			set_cosmetic_tag = FRA_Frangleterre
			annex_country = { target = FRA transfer_troops = yes }
			country_event = {
				id = kxxfrance.25
				days = 30
			}
		
		FRA = {
			every_unit_leader = {	
				set_nationality = ENG
			}	
		}

	}
	else = {
		FRA = {
			set_cosmetic_tag = FRA_Frangleterre
			annex_country = { target = ENG transfer_troops = yes }
			every_state = {
				limit = {
					is_core_of = ENG
				}

				add_core_of = FRA
			}
			country_event = {
				id = kxxfrance.25
				days = 30
			}
		}
		ENG = {
			every_unit_leader = {	
				set_nationality = ENG
			}	
		}
	}
}

}
country_event = {	
	id = kxxfrance.25 #anglo french union
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.25.t
	desc = kxxfrance.25.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #nein
	name = kxxfrance.25.a
	add_political_power = 50
}
option = { #oh yes
	name = kxxfrance.25.b
	set_cosmetic_tag = FRA_Frangleterre_federation
			
			add_state_core = 1315
			add_state_core = 1219
			add_state_core = 445
			add_state_core = 442
			add_state_core = 85
			add_state_core = 738
			add_state_core = 542
			add_state_core = 553
			add_state_core = 756
			add_state_core = 269
			add_state_core = 1297
			add_state_core = 422
			add_state_core = 281
			add_state_core = 830
			add_state_core = 999
			add_state_core = 686
			add_state_core = 892
			add_state_core = 309
			add_state_core = 1038
			
			every_state = {
				limit = {
					is_core_of = PNG
				}
				add_core_of = ENG
				add_core_of = FRA
			}
			every_state = {
				limit = {
					is_core_of = HAI
				}
				add_core_of = ENG
				add_core_of = FRA
			}
			every_state = {
				limit = {
					is_core_of = DOM
				}
				add_core_of = ENG
				add_core_of = FRA
			}
			every_state = {
				limit = {
					is_core_of = MEX
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = CAN }
			every_state = {
				limit = {
					is_core_of = CAN
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = PRF }
			every_state = {
				limit = {
					is_core_of = PRF
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = DEH }
			every_state = {
				limit = {
					is_core_of = DEH
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = MAD }
			every_state = {
				limit = {
					is_core_of = MAD
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = BHC }
			every_state = {
				limit = {
					is_core_of = BHC
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = AST }
			every_state = {
				limit = {
					is_core_of = AST
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = SAF }
			every_state = {
				limit = {
					is_core_of = SAF
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = DEH }
			every_state = {
				limit = {
					is_core_of = DEH
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = USA }
			every_state = {
				limit = {
					is_core_of = USA
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = IRE }
				every_state = {
					limit = {
						is_core_of = IRE
					}
					add_core_of = ENG
					add_core_of = FRA
				}
		create_wargoal = { type = annex_everything target = CAF }
				every_state = {
					limit = {
						is_core_of = CAF
					}
					add_core_of = ENG
					add_core_of = FRA
				}
		
			create_wargoal = { type = annex_everything target = CSA }
				every_state = {
					limit = {
						is_core_of = CSA
					}
					add_core_of = ENG
					add_core_of = FRA
				}
			create_wargoal = { type = annex_everything target = NEE }
				every_state = {
					limit = {
						is_core_of = NEE
					}
					add_core_of = ENG
					add_core_of = FRA
				}
			create_wargoal = { type = annex_everything target = COR }
				every_state = {
					limit = {
						is_core_of = COR
					}
					add_core_of = ENG
							add_core_of = FRA
				}
			create_wargoal = { type = annex_everything target = BBR }
				every_state = {
					limit = {
						is_core_of = BBR
					}
					add_core_of = ENG
					add_core_of = FRA
				}	
			create_wargoal = { type = annex_everything target = TXS }
				every_state = {
					limit = {
						is_core_of = TXS
					}
					add_core_of = ENG
					add_core_of = FRA
				}	
			create_wargoal = { type = annex_everything target = TEX }
				every_state = {
					limit = {
						is_core_of = TEX
					}
					add_core_of = ENG
					add_core_of = FRA
				}	
			create_wargoal = { type = annex_everything target = WCC }
				every_state = {
					limit = {
						is_core_of = WCC
					}
					add_core_of = ENG
					add_core_of = FRA
				}
			create_wargoal = { type = annex_everything target = CAL }
				every_state = {
					limit = {
						is_core_of = CAL
					}
					add_core_of = ENG
					add_core_of = FRA
				}
			create_wargoal = { type = annex_everything target = ALA }
				every_state = {
					limit = {
						is_core_of = ALA
					}
					add_core_of = ENG
					add_core_of = FRA
				}
				create_wargoal = { type = annex_everything target = ALA }
				every_state = {
					limit = {
						is_core_of = ALA
					}
					add_core_of = ENG
					add_core_of = FRA
				}	
				create_wargoal = { type = annex_everything target = SAF }
				every_state = {
					limit = {
						is_core_of = SAF
					}
					add_core_of = ENG
					add_core_of = FRA
				}	
				create_wargoal = { type = annex_everything target = SAF }
				every_state = {
					limit = {
						is_core_of = SAF
					}
					add_core_of = ENG
					add_core_of = FRA
				}
				create_wargoal = { type = annex_everything target = NZL }
				every_state = {
					limit = {
						is_core_of = NZL
					}
					add_core_of = ENG
					add_core_of = FRA
				}
					add_state_core = 700
					add_state_core = 274
                    add_state_core = 1321
					add_state_core = 1322
					add_state_core = 1323
					add_state_core = 311
					add_state_core = 846
					add_state_core = 751
					add_state_core = 336
					add_state_core = 333
					add_state_core = 828
					add_state_core = 831
					add_state_core = 749
					add_state_core = 751
					add_state_core = 753
					add_state_core = 453
					
		create_wargoal = { type = annex_everything target = 700.owner }
		create_wargoal = { type = annex_everything target = 274.owner }
		create_wargoal = { type = annex_everything target = 311.owner }
		create_wargoal = { type = annex_everything target = 336.owner }
		create_wargoal = { type = annex_everything target = 751.owner }
		create_wargoal = { type = annex_everything target = 453.owner }
		create_wargoal = { type = annex_everything target = 753.owner }
			every_state = {
				limit = {
					is_core_of = ZAM
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = ZIM }
			every_state = {
				limit = {
					is_core_of = ZIM
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = KEN }
			every_state = {
				limit = {
					is_core_of = KEN
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = EGY }
			every_state = {
				limit = {
					is_core_of = EGY
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = NGR }
			every_state = {
				limit = {
					is_core_of = NGR
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = YEM }
			every_state = {
				limit = {
					is_core_of = YEM
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = OMA }
			every_state = {
				limit = {
					is_core_of = OMA
				}
				add_core_of = ENG
				add_core_of = FRA
			}
		create_wargoal = { type = annex_everything target = BRM }
			every_state = {
				limit = {
					is_core_of = BRM
				}
				add_core_of = ENG
				add_core_of = FRA
			}
			hidden_effect = {
				create_wargoal = { type = annex_everything target = UGA }
					every_state = {
						limit = {
							is_core_of = UGA
						}
						add_core_of = ENG
						add_core_of = FRA
					}
				create_wargoal = { type = annex_everything target = KIK }
					every_state = {
						limit = {
							is_core_of = KIK
						}
						add_core_of = ENG
						add_core_of = FRA
					}
				create_wargoal = { type = annex_everything target = ZZB }
					every_state = {
						limit = {
							is_core_of = ZZB
						}
						add_core_of = ENG
						add_core_of = FRA
					}
				create_wargoal = { type = annex_everything target = MLW }
					every_state = {
						limit = {
							is_core_of = MLW
						}
						add_core_of = ENG
						add_core_of = FRA
					}
				create_wargoal = { type = annex_everything target = BRT }
					every_state = {
						limit = {
							is_core_of = BRT
						}
						add_core_of = ENG
						add_core_of = FRA
					}
					create_wargoal = { type = annex_everything target = SYR }
					every_state = {
						limit = {
							is_core_of = SYR
						}
						add_core_of = ENG
						add_core_of = FRA
					}
					add_state_core = 461
					add_state_core = 462
					add_state_core = 807
					add_state_core = 963
					add_state_core = 876
					add_state_core = 975
					add_state_core = 660
					add_state_core = 971
					add_state_core = 974
					add_state_core = 953
					add_state_core = 928
					add_state_core = 539
					add_state_core = 543
					add_state_core = 268
					add_state_core = 856
					add_state_core = 826
					add_state_core = 286
					add_state_core = 268
					add_state_core = 827
					add_state_core = 670
					add_state_core = 857
					add_state_core = 728
					add_state_core = 671
					add_state_core = 750
					add_state_core = 825
					add_state_core = 1177
					add_state_core = 1178
					add_state_core = 1179
					add_state_core = 708
					add_state_core = 706
					add_state_core = 1095
					add_state_core = 635
					add_state_core = 641
					every_state = {
						limit = {
							OR = {
								is_core_of = INC
								is_core_of = LAO
								is_core_of = CAM
								is_core_of = VIN
							}
						}
						FRA = { add_state_core = PREV }
						ENG = { add_state_core = PREV }
					}
					create_wargoal = {
						type = annex_everything
						target = 750.owner
					}
					create_wargoal = {
						type = annex_everything
						target = 670.owner
					}
					create_wargoal = {
						type = annex_everything
						target = 286.owner
					}
					create_wargoal = {
						type = annex_everything
						target = 827.owner
					}
					every_state = {
						limit = {
							OR = {
								is_core_of = NFA
								is_claim_of = NFA
								is_core_of = ALG	
								is_core_of = TUN
								is_core_of = MRT
								is_core_of = SEN
								is_core_of = GNA
								is_core_of = MAL
								is_core_of = BFA
								is_core_of = NER
								is_core_of = WAD
							}
						}
						FRA = { add_state_core = PREV }
						ENG = { add_state_core = PREV }
					}
}
}
}
country_event = {
	id = kxxfrance.26 #republic
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.26.t
	desc = kxxfrance.26.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.26.a

}	

option = { 
	name = kxxfrance.26.b

	set_cosmetic_tag = FRA_socdem_republic
	
}
}

country_event = {
	id = kxxfrance.27 #gamelin ideo picker
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.27.t
	desc = kxxfrance.27.d
	is_triggered_only = yes
	fire_only_once = yes

	option = { 
		name = kxxfrance.27.a
	}	

	option = { 
		name = kxxfrance.27.b
		set_country_leader_ideology = socdem_junta_subtype
	}
	option = { 
		name = kxxfrance.27.c
		set_country_leader_ideology = popular_patriotism_subtype
	}
	option = { 
		name = kxxfrance.27.e
		set_country_leader_ideology = authoritarian_social_democracy_subtype
	
	}
	option = { 
		name = kxxfrance.27.f
		set_politics = {
			ruling_party = paternal_autocrat
		}
		add_socdem_to_coalition = yes
		add_soccon_to_coalition = yes
		add_authdem_to_coalition = yes
		create_country_leader = {
			name = "莫里斯·甘末林"
			desc = "POLITICS_GAMELIN_DESC"
			picture = "gfx/leaders/FRA/Portrait_France_Maurice_Gamelin_KR.png"
			expire = "1965.1.1"
			ideology = red_tinted_autocracy_subtype
			traits = {
				marshal_leader
				socialist_dictator
			}
		}
	}
}

country_event = {
	id = kxxfrance.28 
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.28.t
	desc = kxxfrance.28.d
	is_triggered_only = yes
	fire_only_once = yes

	option = { 
		name = kxxfrance.28.a
		complete_national_focus = FRA_popular_front_contiunes
	}	

	option = { 
		name = kxxfrance.28.b
		complete_national_focus = FRA_military_government
		clr_country_flag = LEADER_GUI_VISIBLE
	}
}

country_event = {
	id = kxxfrance.29
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	
	trigger = {
		is_subject_of = FRA
		NOT = {
			has_government = radical_socialist
		}
		FRA = {
			has_country_leader = {
				ruling_only = yes
				name = "莫里斯·甘末林"				# Maurice Gamelin
			}
			has_government = paternal_autocrat
		}
	}
	option = { 
		set_politics = {
			ruling_party = radical_socialist
		}	
	}
}

country_event = {	
	id = kxxfrance.31
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.31.t
	desc = kxxfrance.31.d

	is_triggered_only = yes

	option = { 
		name = kxxfrance.31.a #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = social_democrat
					last_election = "[CURRENT_DATE]"
					election_frequency = 60
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}
		hidden_effect = {
			country_event = { id = comfrance.1004 days = 1825 } 
			create_country_leader = {
				name = "皮埃尔·雷诺德尔"
		
				picture = "gfx/leaders/FRA/Portrait_FRA_Pierre_Renaudel.png"
				expire = "1.1.1"
				traits = {  }
				ideology = socdem_humanistic_capitalism_subtype
			}
		}
		swap_ideas = {
			remove_idea = FRA_marketization_1
			add_idea = FRA_marketization_2
		}
	}

	option = { 
		name = kxxfrance.31.b #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}	
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = social_democrat
					last_election = "[CURRENT_DATE]"
					election_frequency = 60
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}	
		swap_ideas = {
			remove_idea = FRA_marketization_1
			add_idea = FRA_marketization_3
		}
		hidden_effect = {
			country_event = { id = comfrance.1004 days = 1825 } 
			create_country_leader = {
				name = "皮埃尔·雷诺德尔"
		
				picture = "gfx/leaders/FRA/Portrait_FRA_Pierre_Renaudel.png"
				expire = "1.1.1"
				traits = {  }
				ideology = socdem_liberalized_syndicalism_subtype
			}
		}
	}

	option = { 
		name = kxxfrance.31.c #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}	
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = social_democrat
					last_election = "[CURRENT_DATE]"
					election_frequency = 60
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}	
		add_ideas = FRA_Lighthouse_of_Democratic_Society
		hidden_effect = {
			country_event = { id = comfrance.1004 days = 1825 } 
			create_country_leader = {
				name = "皮埃尔·雷诺德尔"
		
				picture = "gfx/leaders/FRA/Portrait_FRA_Pierre_Renaudel.png"
				expire = "1.1.1"
				traits = {  }
				ideology = socdem_democratic_socialism_subtype
			}
		}
	}

	option = { 
		name = kxxfrance.31.e #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}	
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = radical_socialist
					last_election = "[CURRENT_DATE]"
					election_frequency = 60
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}	
		add_ideas = FRA_Between_possibility_and_impossibility
		hidden_effect = {
			set_cosmetic_tag = FRA_radical_Possibiliste
			country_event = { id = comfrance.1004 days = 1825 } 
			create_country_leader = {
				name = "皮埃尔·雷诺德尔"
		
				picture = "gfx/leaders/FRA/Portrait_FRA_Pierre_Renaudel.png"
				expire = "1.1.1"
				traits = {  }
				ideology = radsoc_revisionist_marxism_subtype
			}
		}
	}

	option = { 
		name = kxxfrance.31.f #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}	
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = radical_socialist
					last_election = "[CURRENT_DATE]"
					election_frequency = 60
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}	
		add_ideas = FRA_The_third_road
		hidden_effect = {
			set_cosmetic_tag = FRA_radical_Possibiliste
			country_event = { id = comfrance.1004 days = 1825 } 
			create_country_leader = {
				name = "皮埃尔·雷诺德尔"
		
				picture = "gfx/leaders/FRA/Portrait_FRA_Pierre_Renaudel.png"
				expire = "1.1.1"
				traits = {  }
				ideology = radsoc_liberal_socialism_subtype
			}
		}
	}

	option = { 
		name = kxxfrance.31.g #who fucking cares just a cringe commie chad
		ai_chance = {
			factor = 50
		}	
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = radical_socialist
					last_election = "[CURRENT_DATE]"
					election_frequency = 60
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}	
		add_ideas = FRA_Still_moving_forward_in_the_midst_of_confusion
		hidden_effect = {
			set_cosmetic_tag = FRA_radical_Possibiliste
			country_event = { id = comfrance.1004 days = 1825 } 
			create_country_leader = {
				name = "皮埃尔·雷诺德尔"
		
				picture = "gfx/leaders/FRA/Portrait_FRA_Pierre_Renaudel.png"
				expire = "1.1.1"
				traits = {  }
				ideology = radsoc_possibilism_subtype
			}
		}
	}
}
country_event = {
	id = kxxfrance.32
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.32.t
	desc = kxxfrance.32.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	#fuck
	name = kxxfrance.32.a
	set_country_flag = FRA_COUPBEL_FAIL
}	

}
country_event = {
	id = kxxfrance.33
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title =  kxxfrance.1.t
	desc =  kxxfrance.1.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name =  kxxfrance.1.a
	FRA = {
		annex_country = { target = HOL  }
	}
	
	GER = {
	set_autonomy = {
	target = DEI
	autonomy_state = kr_autonomous_puppet
	}
				
	}
	CAF = {
	add_state_claim = 1038
	add_state_claim = 309
	add_state_claim = 695
	}
}	
option = { 
	name =  kxxfrance.1.b
	FRA = {
		country_event = kxxfrance.34
	}
	
}	
}
country_event = {
	id = kxxfrance.32
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.32.t
	desc = kxxfrance.32.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	#fuck
	name = kxxfrance.32.a
	set_country_flag = FRA_COUPHOL_FAIL
}	

}
country_event = {
	id = kxxfrance.35
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.35.t
	desc = kxxfrance.35.d
	is_triggered_only = yes
	fire_only_once = yes

option = { #whatever
	name = kxxfrance.35.a
	country_event = {
		id = kxxfrance.36
		days = 30
	}
}	
option = { #no please no
	name = kxxfrance.35.b
	
}	
}
country_event = {
	id = kxxfrance.36 #boom
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.36.t
	desc = kxxfrance.36.d
	is_triggered_only = yes
	fire_only_once = yes

option = { #no god no please no
	name = kxxfrance.36.a
	leave_faction = yes

	set_autonomy = {
		target = NFL
		autonomy_state = autonomy_free 
	}
	NFL = {
		leave_faction = yes
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_state_claim = 332
		add_state_claim = 331
		load_oob = NFL
	}
	QUE = {
		add_state_claim = 466
		add_state_claim = 832
		add_state_claim = 468
	}
	IQR = {
		add_state_core = 796
		add_state_core = 933
		add_state_claim = 933
		add_state_claim = 796
		load_oob = IroqouisRoyalArmy
		load_oob = IRQ
		load_oob = IRQ_extra
		load_oob = IRQ_revolt
	}
	set_country_flag = iqr_independent
	hidden_effect = {
		IQR = {
			country_event = {
				id = IQR.1
				days = 9
			}
		}
	}
	WAB = {
		add_state_core = 464
		add_state_core = 357
		add_state_core = 934
		add_state_core = 488
		add_state_core = 465
		add_state_claim = 357
		add_state_claim = 464
		add_state_claim = 934
		add_state_claim = 468
		add_state_claim = 465
		add_state_claim = 1330
		add_state_claim = 1331
		add_state_core = 1330
		add_state_core = 1331
		load_oob = WabanakiRoyalArmy
		
	}
	set_country_flag = wab_independent
	hidden_effect = {
		WAB = {
			country_event = {
				id = WAB.1
				days = 9
			}
		}
	}
	create_dynamic_country = {	
				original_tag = CAN
				copy_tag = CAN

				#State
				every_state = {
					limit = {
						is_core_of = CAN
					}
					add_state_core = ROOT
				}
				add_state_claim = 740
				add_state_claim = 473
				add_state_claim = 470
				set_technology = {
					reservation_musket = 1
				}
				
				### Leader
				create_country_leader = {
					name = "加拿大社会主义者代表大会"
					picture = "gfx/leaders/CAN/Portrait_Canada_Vacant_Office_2.png"
					expire = "1.1.1"
					ideology = syndicalist_subtype
				}

				### Politics
				set_popularities = {
					totalist = 30
					radical_socialist = 30
					syndicalist = 30
					social_democrat = 10
					social_liberal = 0
					market_liberal = 0
					social_conservative = 0
					authoritarian_democrat = 0
					paternal_autocrat = 0
					national_populist = 0
				}
				
				set_party_name = {
					long_name = SCC_syndicalist_party2_long
					name = SCC_syndicalist_party2
					ideology = syndicalist
				}
				set_country_flag = soc_dems_are_socialists
				set_politics = {
					ruling_party = syndicalist
					elections_allowed = no
				}
				set_cosmetic_tag = NFL_CANADA

				#Units
				division_template = {
					name = "民兵"
					division_names_group = CSA_INF_01

					regiments = {
						infantry = { x = 0 y = 0 }
						infantry = { x = 0 y = 1 }
						infantry = { x = 0 y = 2 }
						infantry = { x = 1 y = 0 }
						infantry = { x = 1 y = 1 }
						infantry = { x = 1 y = 2 }
					}
					priority = 0
				}
				declare_war_on = { target = CAN type = annex_everything } 
			load_oob = CAN
			}
			
	declare_war_on = { target = WAB type = annex_everything } 
	declare_war_on = { target = NFL type = annex_everything } 
	declare_war_on = { target = QUE type = annex_everything } 
	declare_war_on = { target = IQR type = annex_everything } 

}	
option = { #no god no please no
	name = kxxfrance.36.b
	leave_faction = yes
	create_dynamic_country = {	
		original_tag = CAN
		copy_tag = CAN

		#State
		every_state = {
			limit = {
				is_core_of = CAN
			}
			add_state_core = ROOT
		}
		add_state_claim = 740
		add_state_claim = 473
		add_state_claim = 470
		set_technology = {
			reservation_musket = 1
		}
		
		### Leader
		create_country_leader = {
			name = "加拿大社会主义者代表大会"
			picture = "gfx/leaders/CAN/Portrait_Canada_Vacant_Office_2.png"
			expire = "1.1.1"
			ideology = syndicalist_subtype
		}

		### Politics
		set_popularities = {
			totalist = 30
			radical_socialist = 30
			syndicalist = 30
			social_democrat = 10
			social_liberal = 0
			market_liberal = 0
			social_conservative = 0
			authoritarian_democrat = 0
			paternal_autocrat = 0
			national_populist = 0
		}
		
		set_party_name = {
			long_name = SCC_syndicalist_party2_long
			name = SCC_syndicalist_party2
			ideology = syndicalist
		}
		set_country_flag = soc_dems_are_socialists
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		set_cosmetic_tag = NFL_CANADA

		#Units
		division_template = {
			name = "民兵"
			division_names_group = CSA_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
			}
			priority = 0
		}
		declare_war_on = { target = CAN type = annex_everything } 
	load_oob = CAN
	}
	set_autonomy = {
		target = NFL
		autonomy_state = autonomy_free 
	}
	NFL = {
		leave_faction = yes
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_state_claim = 332
		add_state_claim = 331
		load_oob = NFL
	}
	QUE = {
		add_state_claim = 466
		add_state_claim = 832
		add_state_claim = 468
	}
	IQR = {
		add_state_core = 796
		add_state_core = 933
		add_state_claim = 933
		add_state_claim = 796
		load_oob = IroqouisRoyalArmy
		load_oob = IRQ
		load_oob = IRQ_extra
		load_oob = IRQ_revolt
	}
	set_country_flag = iqr_independent
	hidden_effect = {
		IQR = {
			country_event = {
				id = IQR.1
				days = 9
			}
		}
	}
	WAB = {
		add_state_core = 464
		add_state_core = 357
		add_state_core = 934
		add_state_core = 488
		add_state_core = 465
		add_state_claim = 357
		add_state_claim = 464
		add_state_claim = 934
		add_state_claim = 468
		add_state_claim = 465
		add_state_claim = 1330
		add_state_claim = 1331
		add_state_core = 1330
		add_state_core = 1331
		load_oob = WabanakiRoyalArmy
		
	}
	set_country_flag = wab_independent
	hidden_effect = {
		WAB = {
			country_event = {
				id = WAB.1
				days = 9
			}
		}
	}

	declare_war_on = { target = WAB type = annex_everything } 
	declare_war_on = { target = NFL type = annex_everything } 
	declare_war_on = { target = QUE type = annex_everything } 
	declare_war_on = { target = IQR type = annex_everything } 
	IQR = { change_tag_from = CAN }
}	
option = { #no god no please no
	name = kxxfrance.36.c
	leave_faction = yes
	create_dynamic_country = {	
		original_tag = CAN
		copy_tag = CAN

		#State
		every_state = {
			limit = {
				is_core_of = CAN
			}
			add_state_core = ROOT
		}
		add_state_claim = 740
		add_state_claim = 473
		add_state_claim = 470
		set_technology = {
			reservation_musket = 1
		}
		
		### Leader
		create_country_leader = {
			name = "加拿大社会主义者代表大会"
			picture = "gfx/leaders/CAN/Portrait_Canada_Vacant_Office_2.png"
			expire = "1.1.1"
			ideology = syndicalist_subtype
		}

		### Politics
		set_popularities = {
			totalist = 30
			radical_socialist = 30
			syndicalist = 30
			social_democrat = 10
			social_liberal = 0
			market_liberal = 0
			social_conservative = 0
			authoritarian_democrat = 0
			paternal_autocrat = 0
			national_populist = 0
		}
		
		set_party_name = {
			long_name = SCC_syndicalist_party2_long
			name = SCC_syndicalist_party2
			ideology = syndicalist
		}
		set_country_flag = soc_dems_are_socialists
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		set_cosmetic_tag = NFL_CANADA

		#Units
		division_template = {
			name = "民兵"
			division_names_group = CSA_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
			}
			priority = 0
		}
		declare_war_on = { target = CAN type = annex_everything } 
	load_oob = CAN
	}
	set_autonomy = {
		target = NFL
		autonomy_state = autonomy_free 
	}
	NFL = {
		leave_faction = yes
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_state_claim = 332
		add_state_claim = 331
		load_oob = NFL
	}
	QUE = {
		add_state_claim = 466
		add_state_claim = 832
		add_state_claim = 468
	}
	IQR = {
		add_state_core = 796
		add_state_core = 933
		add_state_claim = 933
		add_state_claim = 796
		load_oob = IroqouisRoyalArmy
		
	}
	set_country_flag = iqr_independent
	hidden_effect = {
		IQR = {
			country_event = {
				id = IQR.1
				days = 9
			}
		}
	}
	WAB = {
		add_state_core = 464
		add_state_core = 357
		add_state_core = 934
		add_state_core = 488
		add_state_core = 465
		add_state_claim = 357
		add_state_claim = 464
		add_state_claim = 934
		add_state_claim = 468
		add_state_claim = 465
		add_state_claim = 1330
		add_state_claim = 1331
		add_state_core = 1330
		add_state_core = 1331
		load_oob = WabanakiRoyalArmy
		
	}
	set_country_flag = wab_independent
	hidden_effect = {
		WAB = {
			country_event = {
				id = WAB.1
				days = 9
			}
		}
	}
	declare_war_on = { target = WAB type = annex_everything } 
	declare_war_on = { target = NFL type = annex_everything } 
	declare_war_on = { target = QUE type = annex_everything } 
	declare_war_on = { target = IQR type = annex_everything } 
	WAB = { change_tag_from = CAN }
}	
}
country_event = {
	id = kxxfrance.37 #fate of germany-fate of rhineland
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.37.t
	desc = kxxfrance.37.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	#seperate rhineland 
	name = kxxfrance.37.a
	set_country_flag = FRA_RHINELAND_SPLIT
	create_rhenish_cores = yes
	set_temp_variable = { tag_to_release = WGR }
	release_targeted_tag = yes
	country_event = {
		id = kxxfrance.38
		days = 14
	}
}	
option = { 
	#no
	name = kxxfrance.37.b
	set_country_flag = FRA_RHINELAND_WHOLE
	country_event = {
		id = kxxfrance.38
		days = 14
	}
}	
option = { 
	#no
	name = kxxfrance.37.c
	set_country_flag = FRA_RHINELAND_ANNEX
	add_state_claim = 781
	add_state_claim = 42
	create_rhenish_cores = yes
	country_event = {
		id = kxxfrance.38
		days = 14
	}
}	
}
country_event = {
	id = kxxfrance.38 #fate of germany-fate of german proper
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.38.t
	desc = kxxfrance.38.d
	is_triggered_only = yes
	fire_only_once = yes
	immediate = {
		hidden_effect = {
			1235 = { remove_claim_by = GER }
			every_state = {
				remove_core_of = GRU
				remove_claim_by = GRU
			}
		}
	}
option = { 
	#release united germany
	name = kxxfrance.38.a
	country_event = {
		id = kxxfrance.40
		days = 14
	}
	hidden_effect = {
		every_state = {
			limit = {
				is_germany = yes
				NOT = {
					is_core_of = RHI
					state = 8 #Luxembourg
					state = 28 #Alsace-Lorraine
					state = 779 #Nancy
					state = 741 #Wallonian Luxembourg
				}
			}
			add_core_of = GRU
		}
	}
	set_temp_variable = { tag_to_release = GRU }
	release_targeted_tag = yes
}	
option = { 
	trigger = {
		1137 = { 
			is_owned_by = ROOT
			is_claim_or_core_of_ROOT = no
		}
	}
	country_event = {
		id = kxxfrance.40
		days = 14
	}
	#release united germany but with austria
	name = kxxfrance.38.b
	hidden_effect = {
		every_state = {
			limit = {
				is_germany = yes
				NOT = {
					is_core_of = RHI
					state = 8 #Luxembourg
					state = 28 #Alsace-Lorraine
					state = 779 #Nancy
					state = 741 #Wallonian Luxembourg
				}
			}
			add_core_of = GRU
		}
		every_state = {
			limit = {
				
				is_core_of = AUS
				
			}
			add_core_of = GRU
		}
	}
	set_temp_variable = { tag_to_release = GRU }
	release_targeted_tag = yes
}	
option = {
	country_event = {
		id = kxxfrance.40
		days = 14
	} 
	#release seperate germany using annex events
	name = kxxfrance.38.b
	custom_effect_tooltip = new_annexation_decisions_tt
	set_country_flag = { flag = GER_CONQ days = 100 value = 1 }
	recheck_annexations_immediate = yes
}	
}
country_event = {
	id = kxxfrance.39 #german reactionaries
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.39.t
	desc = kxxfrance.39.d
	
	trigger = {
		tag = FRA
		has_idea = FRA_reactionarism_reFRAn_dummy
	}
	mean_time_to_happen = {
		days = 30
	}
option = { 
	#fuck
	name = kxxfrance.39.a
	add_political_power = -100
	add_stability = -0.1
	custom_effect_tooltip = "尽快完成国策‘德意志自由且社会主义’，否则该事件将一直触发！"
}	
	
}
country_event = {
	id = kxxfrance.40 #fate of germany-question of administration
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.40.t
	desc = kxxfrance.40.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	#install millitary government
	name = kxxfrance.40.a
	GRU = {
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		set_party_name = {
			ideology = syndicalist
			long_name = "德国控制委员会"
			name = "德国控制委员会"
		  }
		create_country_leader = {
		name = "Marie-Pierre Koenig"
		picture = "gfx/leaders/FRA/Portrait_FRA_Marie_Pierre_Koenig_KX.png"
		expire = "1965.1.1"
		ideology = syn_red_junta_subtype
		
	}
	}
	complete_national_focus = FRA_end_the_kaiserreich
}	
option = { 
	#install civilian government
	trigger = {
		NOT = {
			has_country_leader = {
				ruling_only = yes
				name = "莫里斯·甘末林"				
			}
			has_country_leader = {
				ruling_only = yes
				name = "保罗·拉努瓦尔"				
			}
		}
	}

	name = kxxfrance.40.b
	custom_effect_tooltip = KXX_UNFINISHED_TOOLTIP
	if = {
		limit = {
		has_country_leader = {
			ruling_only = yes
			name = "雅克·多里奥"				
		}
		has_country_leader = {
			ruling_only = yes
			name = "莫里斯·多列士"		
		}
		has_country_leader = {
			ruling_only = yes
			name = "马塞尔·加香"		
		}
		has_country_leader = {
			ruling_only = yes
			name = "雅克·杜克洛"
		}
		has_country_leader = {
			ruling_only = yes
			name = "勒内·比奈"
		}
		has_country_leader = {
			ruling_only = yes
			name = "乔治·马歇"
		}
		has_country_leader = {
			ruling_only = yes
			name = "安德烈·洛吕奥"
		}
		}
		country_event = kxxfrance.41
	}		
	if = {
		limit = {
		has_country_leader = {
			ruling_only = yes
			name = "涅斯托尔·马赫诺"
		}
		has_country_leader = {
			ruling_only = yes
			name = "达尼埃尔·介朗"
		}
		has_country_leader = {
			ruling_only = yes
			name = "马里于斯·雅各布"
		}
		has_country_leader = {
			ruling_only = yes
			name = "塞巴斯蒂安·富尔"
		}
		has_country_leader = {
			ruling_only = yes
			name = "迈·皮克雷"
		}
		
		}
		country_event = kxxfrance.42
	}	
	if = {
		limit = {
		has_country_leader = {
			ruling_only = yes
			name = "雅克·阿尔蒂"
		}
		has_country_leader = {
			ruling_only = yes
			name = "保罗·尼赞"
		}
		has_country_leader = {
			ruling_only = yes
			name = "休伯特·拉加代尔"
		}
		has_country_leader = {
			ruling_only = yes
			name = "马塞尔·布卡德"
		}
		has_country_leader = {
			ruling_only = yes
			name = "勒内·科皮坦"
		}
		has_country_leader = {
			ruling_only = yes
			name = "皮埃尔·德里厄·拉罗谢尔"
		}
		has_country_leader = {
			ruling_only = yes
			name = "古斯塔夫·爱尔威"
		}
		}
		country_event = kxxfrance.43
	}
	if = {
		limit = {
		has_country_leader = {
			ruling_only = yes
			name = "约瑟夫·爱泼斯坦"
		}
		has_country_leader = {
			ruling_only = yes
			name = "马塞尔·瓦尔代勒"
		}
		has_country_leader = {
			ruling_only = yes
			name = "皮埃尔·莫纳特"
		}
		has_country_leader = {
			ruling_only = yes
			name = "米萨克·马努尚"
		}
		has_country_leader = {
			ruling_only = yes
			name = "亨利·弗勒奈"
		}
		has_country_leader = {
			ruling_only = yes
			name = "莱昂·儒奥"
		}
		has_country_leader = {
			ruling_only = yes
			name = "伯努瓦·弗拉商"
		}
		has_country_leader = {
			ruling_only = yes
			name = "让·齐罗姆斯基"
		}
		}
		country_event = kxxfrance.44
	}
	if = {
		limit = {
		has_country_leader = {
			ruling_only = yes
			name = "费利克斯·古安"
		}
		has_country_leader = {
			ruling_only = yes
			name = "莱昂·布鲁姆"
		}
		has_country_leader = {
			ruling_only = yes
			name = "樊尚·奥里奥尔"
		}
		has_country_leader = {
			ruling_only = yes
			name = "皮埃尔·赖伐尔"
		}
		has_country_leader = {
			ruling_only = yes
			name = "居伊·摩勒"
		}
		has_country_leader = {
			ruling_only = yes
			name = "奥古斯特·德·里贝斯"
		}
		has_country_leader = {
			ruling_only = yes
			name = "皮埃尔·雷诺德尔"
		}
		has_country_leader = {
			ruling_only = yes
			name = "Joseph Paul-Boncour"
		}
		
		}
		country_event = kxxfrance.45
	}
}	

}
country_event = {
	id = kxxfrance.41 #fate of germany-jacobins
	immediate = {
		log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"
		complete_national_focus = FRA_end_the_kaiserreich
	}
	title = kxxfrance.41.t
	desc = kxxfrance.41.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	
	name = kxxfrance.41.a
	create_country_leader = {
		name = "Vitus Heller"
		picture = "gfx/leaders/BAY/Portrait_Bavaria_Vitus_Heller.png"
		expire = "1.1.1"
		ideology = christian_communism_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = BAY_totalist_party
		name = BAY_totalist_party_long
	}
	set_cosmetic_tag = BAY_totalist
}	
option = { 
	name = kxxfrance.41.b
	create_country_leader = {
		name = "Heinrich Laufenberg"
		picture = "gfx/leaders/GER/Portrait_Germany_Heinrich_Laufenberg.png"
		expire = "1.1.1"
		ideology = national_communism_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = NGF_totalist_party
		name = NGF_totalist_party_long
	}
	set_cosmetic_tag = NGF_totalist
}	
option = { 
	name = kxxfrance.41.c
	create_country_leader = {
		name = "Heinrich Brandler"
		picture = "gfx/leaders/NGF/Portrait_NGF_Heinrich_Brandler.png"
		expire = "1.1.1"
		ideology = bukharinist_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = NGF_radical_socialist_party
		name = NGF_radical_socialist_party_long
	}
	set_cosmetic_tag = NGF_radical_socialist
}	
option = { 
	name = kxxfrance.41.e
	create_country_leader = {
		name = "Ruth Fischer"
		picture = "gfx/leaders/DDR/Portrait_Prussia_Ruth_Fischer.png"
		expire = "1.1.1"
		ideology = bordigism_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = DDR_totalist_party
		name = DDR_totalist_party_long
	}
	set_cosmetic_tag = DDR_totalist
}
option = { 
	name = kxxfrance.41.f
	create_country_leader = {
		name = "Max Seydewitz"
		picture = "gfx/leaders/DDR/Portrait_Prussia_Max_Seydewitz.png"
		expire = "1.1.1"
		ideology = radsoc_communism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = DDR_radical_socialist_party
		name = DDR_radical_socialist_party_long
	}
	set_cosmetic_tag = NGF_radical_socialist
}

}
country_event = {
	id = kxxfrance.42 #fate of germany-syndie
	immediate = {
		log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"
		complete_national_focus = FRA_end_the_kaiserreich
	}
	title = kxxfrance.42.t
	desc = kxxfrance.42.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	
	name = kxxfrance.42.a
	create_country_leader = {
		name = "Jan Appel"
		picture = "gfx/leaders/NGF/Portrait_NGF_Jan_Appel.png"
		expire = "1.1.1"
		ideology = centralized_syndicalism_subtype
	}
	set_politics = {
		ruling_party = syndicalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = syndicalist
		long_name = NGF_syndicalist_party
		name = NGF_syndicalist_party_long
	}
	set_cosmetic_tag = GRU_SEPD
}	
option = { 
	name = kxxfrance.42.b
	create_country_leader = {
		name = "Clara Zetkin"
		picture = "gfx/leaders/DDR/Portrait_Prussia_Clara_Zetkin.png"
		expire = "1.1.1"
		ideology = feminist_syndicalist_subtype
	}
	set_politics = {
		ruling_party = syndicalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = syndicalist
		long_name = DDR_syndicalist_party
		name = DDR_syndicalist_party_long
	}
	set_cosmetic_tag = GRU_SEPD
}	
option = { 
	name = kxxfrance.42.c
	create_country_leader = {
		name = "Rudolf Rocker"
		picture = "gfx/leaders/GER/Portrait_Germany_Rudolf_Rocker_I.png"
		expire = "1.1.1"
		ideology = anarcho_syndicalist_subtype
	}
	set_politics = {
		ruling_party = syndicalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = syndicalist
		long_name = GER_syndicalist_party
		name = GER_syndicalist_party_long
	}
	set_cosmetic_tag = GRU_SEPD
}	
option = { 
	name = kxxfrance.42.e
	create_country_leader = {
		name = "Ernst Thalmann"
		picture = "gfx/leaders/GER/Portrait_Germany_Ernst_Thalmann.png"
		expire = "1.1.1"
		ideology = democratic_syndicalism_subtype
	}
	
	set_politics = {
		ruling_party = syndicalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = syndicalist
		long_name = GRU_SED
		name = GRU_SED_long
	}
	set_cosmetic_tag = GRU_SEPD
}


}
country_event = {
	id = kxxfrance.43 #fate of germany-sorelians
	immediate = {
		log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"
		complete_national_focus = FRA_end_the_kaiserreich
	}
	title = kxxfrance.43.t
	desc = kxxfrance.43.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	
	name = kxxfrance.43.a
	create_country_leader = {
		name = "Ernst Niekisch"
		picture = "gfx/leaders/BAY/Portrait_Bavaria_Ernst_Niekisch.png"
		expire = "1.1.1"
		ideology = germanic_socialism_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = BAY_totalist_party
		name = BAY_totalist_party_long
	}
	set_cosmetic_tag = BAY_totalist
}	
option = { 
	name = kxxfrance.43.b
	create_country_leader = {
		name = "Karl Otto Paetel"
		picture = "gfx/leaders/WGR/Portrait_Rhineland_Karl_Otto_Paetel.png"
		expire = "1.1.1"
		ideology = sorelianism_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = WGR_totalist_party
		name = WGR_totalist_party_long
	}
	set_cosmetic_tag = WGR_totalist
}	
option = { 
	name = kxxfrance.43.c
	create_country_leader = {
		name = "August Winnig"
		picture = "gfx/leaders/EPR/Portrait_EPR_August_Winnig.png"
		expire = "1.1.1"
		ideology = volkisch_communitarianism_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = EPR_totalist_party
		name = EPR_totalist_party_long
	}
	set_cosmetic_tag = EPR_totalist
}	
option = { 
	name = kxxfrance.43.e
	create_country_leader = {
		name = "Gregor Strasser"
		picture = "gfx/leaders/GRU/Portrait_Germany_Gregor_Strasser.png"
		expire = "1.1.1"
		ideology = natsynd_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = "德意志社会党"
		name = "德意志社会党"
	}
	set_cosmetic_tag = GRU_NMDVP_totalist
}
option = { 
	name = kxxfrance.43.f
	create_country_leader = {
		name = "Josef Goebbels"
		picture = "gfx/leaders/GRU/Portrait_Germany_Josef_Goebbels_13.png"
		expire = "1.1.1"
		ideology = national_marxist_subtype
	}
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = GRU_NMDVP_L_long
		name = GRU_NMDVP_L
	}
	set_cosmetic_tag = GRU_NMDVP_totalist
}

}
country_event = {
	id = kxxfrance.44 #fate of germany-anarchists
	immediate = {
		log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"
		complete_national_focus = FRA_end_the_kaiserreich
	}
	title = kxxfrance.44.t
	desc = kxxfrance.44.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	
	name = kxxfrance.44.a
	create_country_leader = {
		name = "Gustav Landauer"
		picture = "gfx/leaders/BAY/Portrait_Bavaria_Gustav_Landauer.png"
		expire = "1.1.1"
		ideology = anarchism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = BAY_syndicalist_party
		name = BAY_syndicalist_party_long
	}
	set_cosmetic_tag = GRU_FAUD_B_totalist
}	
option = { 
	name = kxxfrance.44.b
	create_country_leader = {
		name = "Erich Mühsam"
		picture = "gfx/leaders/EPR/Portrait_EPR_Erich_Muhsam.png"
		expire = "1.1.1"
		ideology = anarcho_communism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = EPR_radical_socialist_party
		name = EPR_radical_socialist_party_long
	}
	set_cosmetic_tag = GRU_FAUD_B_totalist
}	
option = { 
	name = kxxfrance.44.c
	create_country_leader = {
		name = "Rudolf Rocker"
		picture = "gfx/leaders/GER/Portrait_Germany_Rudolf_Rocker_I.png"
		expire = "1.1.1"
		ideology = radsoc_anarcho_syndicalist_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = GER_syndicalist_party
		name = GER_syndicalist_party_long
	}
	set_cosmetic_tag = GRU_FAUD_B_totalist
}	


}
country_event = {
	id = kxxfrance.45 #fate of germany-socdem
	immediate = {
		log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"
		complete_national_focus = FRA_end_the_kaiserreich
	}
	title = kxxfrance.45.t
	desc = kxxfrance.45.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	
	name = kxxfrance.45.a
	create_country_leader = {
		name = "Kurt Eisner"
		picture = "gfx/leaders/BAY/Portrait_Bavaria_Kurt_Eisner.png"
		expire = "1.1.1"
		ideology = moderate_socialist_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = BAY_radical_socialist_party
		name = BAY_radical_socialist_party_long
	}
	
}	
option = { 
	name = kxxfrance.45.b
	create_country_leader = {
		name = "Max Brauer"
		picture = "gfx/leaders/NGF/Portrait_NGF_Max_Brauer.png"
		expire = "1.1.1"
		ideology = syndie_social_democrat_subtype
	}
	set_politics = {
		ruling_party = social_democrat
		elections_allowed = no
	}
	set_party_name = {
		ideology = social_democrat
		long_name = NGF_social_democrat_party
		name = NGF_totalist_party_long
	}

}	
option = { 
	name = kxxfrance.45.c
	create_country_leader = {
		name = "Wilhelm Buck"
		picture = "gfx/leaders/DDR/Portrait_Prussia_Wilhelm_Buck.png"
		expire = "1.1.1"
		ideology = socdem_left_nationalism_subtype
	}
	set_politics = {
		ruling_party = social_democrat
		elections_allowed = no
	}
	set_party_name = {
		ideology = social_democrat
		long_name = DDR_social_democrat_party
		name = DDR_social_democrat_party_long
	}
}	
option = { 
	name = kxxfrance.45.e
	create_country_leader = {
		name = "Silvio Gesell"
		picture = "gfx/leaders/WGR/Portrait_Rhineland_Silvio_Gesell.png"
		expire = "1.1.1"
		ideology = radsoc_georgism_subtype
	}
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}
	set_party_name = {
		ideology = radical_socialist
		long_name = WGR_radical_socialist_party
		name = WGR_radical_socialist_party_long

}
option = { 
	name = kxxfrance.45.f
	create_country_leader = {
		name = "Josef Friedrich Matthes"
		picture = "gfx/leaders/WGR/Portrait_Rhineland_Josef_Friedrich_Matthes.png"
		expire = "1.1.1"
		ideology = liberal_socialism_subtype
	}
	set_politics = {
		ruling_party = social_democrat
		elections_allowed = no
	}
	set_party_name = {
		ideology = social_democrat
		long_name = WGR_social_democrat_party
		name = WGR_social_democrat_party_long
	}
}

}
}
country_event = {
	id = kxxfrance.46 #fate of austria
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.win"}
	title = kxxfrance.46.t
	desc = kxxfrance.46.d
	is_triggered_only = yes
	fire_only_once = yes

option = { 
	#austria only
	name = kxxfrance.46.a
	every_state = {
		limit = {
			is_owned_by = AUS
		}
		add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
	}
}	
option = { 
	#ALL SHALL SUFFER
	name = kxxfrance.46.b
	every_state = {
		limit = {
			is_owned_by = AUS
		}
		add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
	}
	if = {
		limit = {
			HUN = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = HUN
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			CZE = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = CZE
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			SVK = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = SVK
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			TRS = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = TRS
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			CRO = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = CRO
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			BOS = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = BOS
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			MNT = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = MNT
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
	if = {
		limit = {
			SLO = {
				is_subject_of = FRA
			}
		}
		every_state = {
			limit = {
				is_owned_by = SLO
			}
			add_dynamic_modifier = { modifier = FRA_Danubian_Autonomies }
		}
	}
}	
}
country_event = {	
	id = kxxfrance.47 #we won
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.47.t
	desc = kxxfrance.47.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #at what cost?
	name = kxxfrance.47.a
	add_ideas = FRA_post_war_scars
	custom_effect_tooltip = "通过完成战后国策来削弱该民族精神的效果！"
}
 
}
country_event = {	
	id = kxxfrance.48 #french ultimatum 
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.48.t
	desc = kxxfrance.48.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.48.a
	
		FRA = {
			set_autonomy = {
				target = ROOT
				autonomous_state = KR_socialist_colonial_government
			}
		}
	
}
option = { 
	name = kxxfrance.48.b
	FRA = {
		create_wargoal = {
			type = annex_everything
			target = ROOT
		}
	}

}

}
country_event = {	
	id = kxxfrance.49 #our claims in america?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.49.t
	desc = kxxfrance.49.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #quebec newfoundland only
	name = kxxfrance.49.a
	create_wargoal = {
		type = annex_everything
		target = CAN
	}
	create_wargoal = {
		type = annex_everything
		target = NFL
	}
	every_state = {
		limit = {
			is_core_of = QUE
		}
		FRA = { 
			add_state_claim = PREV 
		}
	}
	every_state = {
		limit = {
			is_core_of = NFL
		}
		FRA = { 
			add_state_claim = PREV 
		}
	}
}
option = { #just as newfrance
	name = kxxfrance.49.b
	set_country_flag = FRA_READY_NEWFRANCE
	every_country = {
		limit = {
			capital_scope = { is_on_continent = north_america }
		}
		FRA = {
			create_wargoal = {
				type = annex_everything
				target = PREV
			}
		}
	}
	every_state = {
		limit = { is_on_continent = north_america }
		FRA = {
			add_state_claim = PREV
		}
	}

}
option = { #annex all
	name = kxxfrance.49.c
	set_country_flag = FRA_ANNEX_AMERICA
	every_country = {
		limit = {
			capital_scope = { is_on_continent = north_america }
		}
		FRA = {
			create_wargoal = {
				type = annex_everything
				target = PREV
			}
		}
	}
	every_state = {
		limit = { is_on_continent = north_america }
		FRA = {
			add_state_claim = PREV
		}
	}

}
}
country_event = {	
	id = kxxfrance.50 #our claims in africa?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.50.t
	desc = kxxfrance.50.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #ALGERIE FRANCAISE
	name = kxxfrance.50.a
		every_state = {
			limit = { is_core_of = ALG }
			add_core_of = FRA
		}
		if = {
			limit = {
				ALG = {
					is_subject_of = FRA
				}
			}
			annex_country = { target = ALG transfer_troops = yes }
		}
	
}
option = { #old colonial empire
	name = kxxfrance.50.b
	set_country_flag = FRA_READY_FRENCHAFRICA
	every_state = {
		limit = {
			OR = {
				is_core_of = NFA
				is_claim_by = NFA
				is_core_of = ALG	
				is_core_of = TUN
				is_core_of = MRT
				is_core_of = SEN
				is_core_of = GNA
				is_core_of = MAL
				is_core_of = BFA
				is_core_of = NER
				is_core_of = WAD
			}
		}
		FRA = { add_state_claim = PREV }
	}
			add_state_claim = 461
			add_state_claim = 462
			add_state_claim = 807
			add_state_claim = 963
			add_state_claim = 876
			add_state_claim = 975
			add_state_claim = 660
			add_state_claim = 971
			add_state_claim = 974
			add_state_claim = 953
			add_state_claim = 928
			add_state_claim = 539
			add_state_claim = 543
			add_state_claim = 268
			add_state_claim = 856
			add_state_claim = 826
			add_state_claim = 286
			add_state_claim = 268
			add_state_claim = 827
			add_state_claim = 670
			add_state_claim = 857
			add_state_claim = 728
			add_state_claim = 671
			add_state_claim = 750
			add_state_claim = 825
			add_state_claim = 1177
			add_state_claim = 1178
			add_state_claim = 1179
			add_state_claim = 708
			add_state_claim = 706
			add_state_claim = 1095
			add_state_claim = 635
			add_state_claim = 641
	wargoals_on_mittelafrika = yes
	
	

}
option = { #WE ARE AFRICANS
	name = kxxfrance.50.c
	set_country_flag = FRA_READY_FRENCHAFRICA
	every_state = {
		limit = { is_on_continent = africa }
		FRA = { add_state_claim = PREV }
	}
	every_country = {
		limit = {
			capital_scope = { is_on_continent = africa }
		}
		FRA = {
			create_wargoal = {
				type = annex_everything
				target = PREV
			}
		}
	}
	

}
}
country_event = {	
	id = kxxfrance.51 #our claims in india?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.51.t
	desc = kxxfrance.51.d

	is_triggered_only = yes
	fire_only_once = yes

option = { #pondicherry only
	name = kxxfrance.51.a
	set_country_flag = FRA_DEMAND_pondicherry
		add_state_claim = 1095
		if = {
			limit = {
			BHC = {
				has_idea = BHC_unitedindia
			}	
			}
			
			unlock_decision_tooltip = FRA_ultimatum_to_india
		}
	else = {
		create_wargoal = {
			type = annex_everything
			target = PRF
		}
		
		create_wargoal = {
			type = annex_everything
			target = MAD
		}
	}
}
option = { #old french india
	name = kxxfrance.51.b
	set_country_flag = FRA_DEMAND_FRENCHINDIA
	
			add_state_claim = 1095
			add_state_claim = 320
			add_state_claim = 426
			add_state_claim = 889
			if = {
				limit = {
				BHC = {
					has_idea = BHC_unitedindia
				}	
				}
				
				unlock_decision_tooltip = FRA_ultimatum_to_india
			}
		else = {
			create_wargoal = {
				type = annex_everything
				target = PRF
			}
			
			create_wargoal = {
				type = annex_everything
				target = MAD
			}
		}
	
	
	

}
option = { #ALL
	name = kxxfrance.51.c
	set_country_flag = FRA_READY_FRENCHAFRICA
	every_state = {
		limit = { is_on_continent = india }
		FRA = { add_state_claim = PREV }
	}
	every_country = {
		limit = {
			capital_scope = { is_on_continent = india }
		}
		FRA = {
			create_wargoal = {
				type = annex_everything
				target = PREV
			}
		}
	}
	

}
}
country_event = {	
	id = kxxfrance.52 #french want our land
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.52.t
	desc = kxxfrance.52.d

	is_triggered_only = yes
	fire_only_once = yes

option = { 
	name = kxxfrance.52.a

		if = {
			limit = {
			FRA = {
				has_country_flag = FRA_DEMAND_pondicherry
			}
			
			}
			
			FRA = {
				add_state_claim = 1095
			}
		}
	else = {
		FRA = {
			add_state_claim = 1095
			add_state_claim = 320
			add_state_claim = 426
			add_state_claim = 889
		}
	}
}
option = { 
	name = kxxfrance.52.b

	FRA = {
		create_wargoal = {
			type = annex_everything
			target = BHC
		}
	}
		
}

}
country_event = {	
	id = kxxfrance.53
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.53.t
	desc = kxxfrance.53.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.53.a
	ai_chance = {
		factor = 0
		
	}
}	
option = { 
	name = kxxfrance.53.b
	ai_chance = {
		factor = 100
		
	}
	ROOT = {
		add_ideas = FRA_roman_unity
	}
}
}
country_event = {	
	id = kxxfrance.54 #trade with france?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.54.t
	desc = kxxfrance.54.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.54.a
	FRA = {
		country_event = kxxfrance.55
	}
}	
option = { 
	name = kxxfrance.54.b
	FRA = {
		country_event = kxxfrance.56
	}
}
}
country_event = {	
	id = kxxfrance.55 #trade agreed
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.55.t
	desc = kxxfrance.55.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.55.a
	add_ideas = FRA_RUS_trade
	RUS = {
		add_ideas = FRA_RUS_trade
	}
}	

}
country_event = {	
	id = kxxfrance.56 #trade disagreed
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.56.t
	desc = kxxfrance.56.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.56.a
	add_political_power = -10
}	

}
country_event = {	
	id = kxxfrance.57 #peace with france?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.57.t
	desc = kxxfrance.57.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.57.a
	FRA = {
		country_event = kxxfrance.58
	}
}	
option = { 
	name = kxxfrance.57.b
	FRA = {
		country_event = kxxfrance.59
	}
}
}
country_event = {	
	id = kxxfrance.58 #peace agreed
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.58.t
	desc = kxxfrance.58.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.58.a
	RUS = {
		diplomatic_relation = { country = FRA relation = non_aggression_pact active = yes } 
			 }
		diplomatic_relation = {
			country = RUS
			relation = non_aggression_pact
			active = yes
		}
}	

}
country_event = {	
	id = kxxfrance.59 #peace disagreed
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.59.t
	desc = kxxfrance.59.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.59.a
	add_political_power = -10
}	

}
country_event = {	
	id = kxxfrance.60 #unite with france?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.60.t
	desc = kxxfrance.60.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.60.a
	ai_chance = {
		factor = 100
	}
	every_country = {
		limit = {
			is_in_faction_with = RUS
		}
		add_to_faction = INT
	}
}	
option = { 
	name = kxxfrance.60.b
	
}
}
country_event = {	
	id = kxxfrance.61 #attack canada together?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.61.t
	desc = kxxfrance.61.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.61.a
	add_to_war = {
		targeted_alliance = FRA
		enemy = CAN
	}
}	
option = { 
	name = kxxfrance.61.b
	
}
}
country_event = {	
	id = kxxfrance.62 #unite with france?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.62.t
	desc = kxxfrance.62.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.62.a
	ai_chance = {
		factor = 100
	}
	every_country = {
		limit = {
			is_in_faction_with = RUS
		}
		add_to_faction = INT
	}
	CSA = {
		add_to_faction = INT
	}
}	
option = { 
	name = kxxfrance.62.b
	
}
}
country_event = {	
	id = kxxfrance.63 #attack america together?
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.63.t
	desc = kxxfrance.63.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.63.a
	set_country_flag = MEX_ATTACK_AMERICA
	FRA = {
		country_event = kxxfrance.64
	}
}	
option = { 
	name = kxxfrance.63.b
	FRA = {
		country_event = kxxfrance.65
	}
}
}
country_event = {	
	id = kxxfrance.64 #mexico agree
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.64.t
	desc = kxxfrance.64.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.64.a
	
}	

}
country_event = {	
	id = kxxfrance.65 #mexico decline
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.65.t
	desc = kxxfrance.65.d

	is_triggered_only = yes
	

option = { 
	name = kxxfrance.65.a
	
}	

}
country_event = {	
	id = kxxfrance.66 #jacobins collpase
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.66.t
	desc = kxxfrance.66.d
  picture = GFX_report_event_FRA_jacobin_collapse
	is_triggered_only = yes
	

option = { 
	name = kxxfrance.66.a
	add_stability = -0.01
	add_popularity = { ideology = totalist popularity = 0.01 }
	hidden_effect = {
		country_event = {
			id = kxxfrance.67
			days = 7
		}
	}
}	

}
country_event = {	
	id = kxxfrance.67 #rise of la rochelle
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.67.t
	desc = kxxfrance.67.d
  picture = GFX_report_event_FRA_la_rochelle
	is_triggered_only = yes
	

option = { 
	name = kxxfrance.67.a
	add_stability = -0.01
	add_popularity = { ideology = totalist popularity = 0.01 }
	hidden_effect = {
		country_event = {
			id = kxxfrance.68
			days = 7
		}
	}
}	

}
country_event = {	
	id = kxxfrance.68 #boulagerists yellowsyndie woke
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.68.t
	desc = kxxfrance.68.d
  picture = GFX_report_event_FRA_bietry_lanoir
	is_triggered_only = yes
	

option = { 
	name = kxxfrance.68.a
	add_stability = -0.02
	add_popularity = { ideology = totalist popularity = 0.01 }
	add_popularity = { ideology = syndicalist popularity = 0.01 }
	
}	

}
country_event = {	
	id = kxxfrance.69 #based valois capet empire
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.69.t
	desc = kxxfrance.69.d
	picture = GFX_WLL_Capet
	is_triggered_only = yes
	

option = { 
	name = kxxfrance.69.a
	
}	
option = { 
	name = kxxfrance.69.b
	set_cosmetic_tag = FRA_Sorel_Capetiens
	every_state = {
		limit = { is_core_of = HOL }
		add_core_of = FRA
	}
	create_wargoal = {
		target = HOL
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = FLN }
		add_core_of = FRA
	}
	create_wargoal = {
		target = FLN
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = WLL }
		add_core_of = FRA
	}
	create_wargoal = {
		target = WLL
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = BEL }
		add_core_of = FRA
	}
	create_wargoal = {
		target = BEL
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = SPR }
		add_core_of = FRA
	}
	create_wargoal = {
		target = SPR
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = CAR }
		add_core_of = FRA
	}
	create_wargoal = {
		target = CAR
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = CNT }
		add_core_of = FRA
	}
	create_wargoal = {
		target = CNT
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = POR }
		add_core_of = FRA
	}
	create_wargoal = {
		target = POR
		type = annex_everything
	}
	every_state = {
		limit = { is_core_of = SIC }
		add_core_of = FRA
	}
	create_wargoal = {
		target = SIC
		type = annex_everything
	}
	add_state_core = 781
	add_state_core = 42

}	
}
country_event = {	
	id = kxxfrance.70 #based valois frankish empire
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.70.t
	desc = kxxfrance.70.d
	picture = GFX_WLL_Charlemagne
	fire_only_once = yes
	  trigger = {
		tag = FRA
		FRA = {			
			has_completed_focus = FRA_based_valois_lives
			controls_state = 59
		}
	}
	

option = { 
	name = kxxfrance.70.a
	
}	
option = { 
	name = kxxfrance.70.b
	set_cosmetic_tag = FRA_Sorel_Capitiens_Frankish
	every_state = {
		limit = { is_core_of = SWI }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = GER }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = AUS }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = ITA }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = SRI }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = PAP }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = LOM }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = VNC }
		add_core_of = FRA
	}
}	
}
country_event = {	
	id = kxxfrance.71 #based valois angrivin empire
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.71.t
	desc = kxxfrance.71.d
	fire_only_once = yes
	trigger = {
		tag = FRA
		FRA = {		
			has_completed_focus = FRA_based_valois_lives
			controls_state = 126
		}
	}

option = { 
	name = kxxfrance.71.a
	
}	
option = { 
	name = kxxfrance.71.b
	every_state = {
		limit = { is_core_of = ENG }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = IRE }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = SCO }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = WAL }
		add_core_of = FRA
	}
}	
}
country_event = {	
	id = kxxfrance.72 #idea of franco-spainish union
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.72.t
	desc = kxxfrance.72.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.72.a
	
}	
option = { 
	name = kxxfrance.72.b
	CNT = {
		country_event = {
			id = kxxfrance.73
			days = 7
		}
	}
	custom_effect_tooltip = "假如社会主义西班牙赢得了内战且由无政府主义者或工团主义者执政，他们就会与我们合并。"
}	
}
country_event = {	
	id = kxxfrance.73 #french proposal
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.73.t
	desc = kxxfrance.73.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.73.a
	ai_chance = {
		factor = 100
	}
	set_global_flag = FRA_CNT_UNION
}	
option = { 
	name = kxxfrance.73.b
	
}	
}
country_event = {	
	id = kxxfrance.74 #union forms
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.74.t
	desc = kxxfrance.74.d
	trigger = {
		tag = FRA
		has_global_flag = FRA_CNT_UNION
		CNT = {	
			OR = {
				has_completed_focus = NCNT_1
				has_completed_focus = NCNT_17
			}	
			controls_state = 41
		}
	}

option = { 
	name = kxxfrance.74.a
	FRA = {
		annex_country = { target = CNT transfer_troops = yes }
	}
	every_state = {
		limit = { is_core_of = CNT }
		add_core_of = FRA
	}
	CNT = {
		every_unit_leader = {	
			set_nationality = FRA
		}	
	}
	set_cosmetic_tag = FRA_CNT_fed
}	
option = { #more,why not?
	name = kxxfrance.74.a
	FRA = {
		annex_country = { target = CNT transfer_troops = yes }
	}
	every_state = {
		limit = { is_core_of = CNT }
		add_core_of = FRA
	}
	every_state = {
		limit = { is_core_of = POR }
		add_core_of = FRA
	}
	CNT = {
		every_unit_leader = {	
			set_nationality = FRA
		}	
	}
	set_cosmetic_tag = FRA_CNT_fed_larp
}	
}
country_event = {	
	id = kxxfrance.75 #anarchist revolution
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.75.t
	desc = kxxfrance.75.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.75.a

}	
option = { 
	name = kxxfrance.75.b
	hidden_effect = {
		country_event = {
			id = kxxfrance.76
			days = 1
		}
	}
}	
}
country_event = {	
	id = kxxfrance.76 #anarchist revolution
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.76.t
	desc = kxxfrance.76.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.76.a
	add_stability = -0.50
		
	set_politics = {
		ruling_party = radical_socialist
		elections_allowed = no
	}

	add_popularity = {
		ideology = radical_socialist
		popularity = 0.3
	}

	add_popularity = {
		ideology = totalist
		popularity = -0.3
	}

	create_country_leader = {
		name = "雷蒙德·佩里卡特"
		picture = "gfx/leaders/FRA/Portrait_FRA_Raymond_Pericat.png"
		expire = "1.1.1"
		ideology = anarcho_communism_subtype
		
	}
	complete_national_focus = FRA_state_anarchy
	set_cosmetic_tag = FRA_Makhno
	set_party_name = {
		ideology = radical_socialist
		long_name = "黑卫军"
		name = "黑卫军"
	}
	set_country_flag = Marcel_Deat_dead
	set_country_flag = Marcel_Bucard_dead
	set_country_flag = Pierre_Laval_dead
	set_country_flag = Jacques_Doriot_dead
	set_country_flag = Jacques_Arthuys_dead
	set_country_flag = Rene_V_Binet_dead
	set_country_flag = Rene_Belin_dead
	set_country_flag = Pierre_Drieu_La_Rochelle_dead
	set_country_flag = Paul_Marion_dead
	set_country_flag = Marc_Augier_dead
	set_country_flag = Hubert_Lagradelle_dead
	set_country_flag = Gabriel_Jeantet_dead
	set_country_flag = Pierre_Clementi_dead
}	

}
country_event = {	
	id = kxxfrance.77 #pan islam
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.77.t
	desc = kxxfrance.77.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.77.a
	every_state = {
		limit = { is_core_of = OMA }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = OMA }
every_state = {
		limit = { is_core_of = JBS }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = JBS }
every_state = {
		limit = { is_core_of = SAU }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SAU }
every_state = {
		limit = { is_core_of = YEM }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = YEM }
every_state = {
		limit = { is_core_of = PER }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = PER }
every_state = {
		limit = { is_core_of = AFG }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = AFG }
every_state = {
		limit = { is_core_of = SUD }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SUD }
every_state = {
		limit = { is_core_of = AZE }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = AZE }
every_state = {
		limit = { is_core_of = EGY }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = EGY }
every_state = {
		limit = { is_core_of = LEB }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = LEB }
every_state = {
		limit = { is_core_of = TRP }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TRP }
every_state = {
		limit = { is_core_of = TUN }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TUN }
every_state = {
		limit = { is_core_of = ALG }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ALG }
every_state = {
		limit = { is_core_of = MOR }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MOR }
every_state = {
		limit = { is_core_of = MRT }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MRT }
create_wargoal = { type = annex_everything target = NFA }
every_state = {
		limit = { is_core_of = ERI }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ERI }
every_state = {
		limit = { is_core_of = DJI }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = DJI }
every_state = {
		limit = { is_core_of = UZB }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = UZB }
every_state = {
		limit = { is_core_of = KOK }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = KOK }
every_state = {
		limit = { is_core_of = TRK }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TRK }
every_state = {
		limit = { is_core_of = KYR }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = KYR }
every_state = {
		limit = { is_core_of = ALO }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ALO }
every_state = {
		limit = { is_core_of = NER }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = NER }
every_state = {
		limit = { is_core_of = MAL }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MAL }
every_state = {
		limit = { is_core_of = WAD }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = WAD }
every_state = {
		limit = { is_core_of = BFA }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = BFA }
every_state = {
		limit = { is_core_of = SEN }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SEN }
every_state = {
		limit = { is_core_of = GNA }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = GNA }
every_state = {
		limit = { is_core_of = CVG }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = CVG }
every_state = {
		limit = { is_core_of = SIE }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SIE }
every_state = {
		limit = { is_core_of = ALB }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ALB }
every_state = {
		limit = { is_core_of = BOS }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = BOS }
every_state = {
		limit = { is_core_of = SIK }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SIK }
every_state = {
		limit = { is_core_of = MTR }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MTR }
every_state = {
	limit = { is_core_of = TUR }
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TUR }
every_state = {
	limit = {
		OR = {
			is_core_of = SOM
			is_claimed_by = SOM
		}
	}
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SOM }
set_cosmetic_tag = FRA_islam_larp
hidden_effect = {
	819 = {	add_core_of = FRA }
	352 = {	add_core_of = FRA }
	350 = {	add_core_of = FRA }
	450 = {	add_core_of = FRA }
	905 = { add_core_of = FRA }
	965 = { add_core_of = FRA }
	834 = { add_core_of = FRA }
	1219 = { add_core_of = FRA }
	444 = {	add_core_of = FRA }
	443 = {	add_core_of = FRA }
	445 = { add_core_of = FRA }
	442 = { add_core_of = FRA }
	891 = { add_core_of = FRA }
	441 = { add_core_of = FRA }
	1208 = { add_core_of = FRA }
	583 = { add_core_of = FRA }
	588 = { add_core_of = FRA }
	708 = {	add_core_of = FRA }
	
}
}	
option = { 
	name = kxxfrance.77.b
	set_cosmetic_tag = FRA_islam_larp
	every_state = {
		limit = { is_core_of = OMA }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = OMA }
every_state = {
		limit = { is_core_of = JBS }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = JBS }
every_state = {
		limit = { is_core_of = SAU }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SAU }
every_state = {
		limit = { is_core_of = YEM }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = YEM }
every_state = {
		limit = { is_core_of = PER }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = PER }
every_state = {
		limit = { is_core_of = AFG }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = AFG }
every_state = {
		limit = { is_core_of = SUD }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SUD }
every_state = {
		limit = { is_core_of = AZE }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = AZE }
every_state = {
		limit = { is_core_of = EGY }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = EGY }
every_state = {
		limit = { is_core_of = LEB }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = LEB }
every_state = {
		limit = { is_core_of = TRP }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TRP }
every_state = {
		limit = { is_core_of = TUN }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TUN }
every_state = {
		limit = { is_core_of = ALG }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ALG }
every_state = {
		limit = { is_core_of = MOR }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MOR }
every_state = {
		limit = { is_core_of = MRT }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MRT }
create_wargoal = { type = annex_everything target = NFA }
every_state = {
		limit = { is_core_of = ERI }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ERI }
every_state = {
		limit = { is_core_of = DJI }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = DJI }
every_state = {
		limit = { is_core_of = UZB }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = UZB }
every_state = {
		limit = { is_core_of = KOK }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = KOK }
every_state = {
		limit = { is_core_of = TRK }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TRK }
every_state = {
		limit = { is_core_of = KYR }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = KYR }
every_state = {
		limit = { is_core_of = ALO }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ALO }
every_state = {
		limit = { is_core_of = NER }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = NER }
every_state = {
		limit = { is_core_of = MAL }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MAL }
every_state = {
		limit = { is_core_of = WAD }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = WAD }
every_state = {
		limit = { is_core_of = BFA }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = BFA }
every_state = {
		limit = { is_core_of = SEN }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SEN }
every_state = {
		limit = { is_core_of = GNA }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = GNA }
every_state = {
		limit = { is_core_of = CVG }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = CVG }
every_state = {
		limit = { is_core_of = SIE }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SIE }
every_state = {
		limit = { is_core_of = ALB }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = ALB }
every_state = {
		limit = { is_core_of = BOS }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = BOS }
every_state = {
		limit = { is_core_of = SIK }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SIK }
every_state = {
		limit = { is_core_of = MTR }
		add_core_of = FRA
}
create_wargoal = { type = annex_everything target = MTR }
every_state = {
	limit = { is_core_of = TUR }
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = TUR }
every_state = {
	limit = { is_core_of = SPR }
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SPR }
every_state = {
	limit = { is_core_of = CAR }
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = CAR }
every_state = {
	limit = { is_core_of = CNT }
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = CNT }
every_state = {
	limit = { is_core_of = POR }
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = POR }
every_state = {
	limit = {
		OR = {
			is_core_of = SOM
			is_claimed_by = SOM
		}
	}
	add_core_of = FRA
}
create_wargoal = { type = annex_everything target = SOM }

hidden_effect = {
	819 = {	add_core_of = FRA }
	352 = {	add_core_of = FRA }
	350 = {	add_core_of = FRA }
	450 = {	add_core_of = FRA }
	905 = { add_core_of = FRA }
	965 = { add_core_of = FRA }
	834 = { add_core_of = FRA }
	1219 = { add_core_of = FRA }
	444 = {	add_core_of = FRA }
	443 = {	add_core_of = FRA }
	445 = { add_core_of = FRA }
	442 = { add_core_of = FRA }
	891 = { add_core_of = FRA }
	441 = { add_core_of = FRA }
	1208 = { add_core_of = FRA }
	583 = { add_core_of = FRA }
	588 = { add_core_of = FRA }
	708 = {	add_core_of = FRA }
	
}
}	
}
news_event = {
	id = kxx.news.1
	title = kxx.news.1.t
	desc = kxx.news.1.d
	picture = GFX_news_event_frg_cw

	fire_only_once = no
	major = yes
	is_triggered_only = yes

	option = {
		name = kxx.news.1.a
		trigger = {
			OR = {
				tag = FRA
				all_country = {
					is_in_faction_with = FRA
				}
			}
		}
	}
	option = {
		name = kxx.news.1.b
		trigger = {
			
				OR = {
					tag = ENG
					tag = SRI
					
				}
			
		}
	}
	option = {
		name = kxx.news.1.c
		trigger = {
			has_socialist_government = no
		}
	}
	
}
country_event = {	
	id = kxxfrance.78 
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.78.t
	desc = kxxfrance.78.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.78.a

}	
option = { 
	name = kxxfrance.78.b
	create_country_leader = {
		name = "埃德加·龙格" 
		picture = "gfx/leaders/FRA/Portrait_FRA_Edgar_Longuet.png"
		expire = "1.1.1"
		ideology = radsoc_communism_subtype
	}
}	
}
country_event = {	
	id = kxxfrance.79 
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.79.t
	desc = kxxfrance.79.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.79.a

}	
option = { 
	name = kxxfrance.79.b
	set_politics = {
		ruling_party = social_democrat
		elections_allowed = yes
	}
	add_popularity = {
		ideology = social_democrat
		popularity = 0.3
	  }
	create_country_leader = {
		name = "保罗·龙格" 
		picture = "gfx/leaders/FRA/Portrait_FRA_Paul_Longuet.png"
		expire = "1.1.1"
		ideology = socdem_paternal_socialism_subtype
	}
}	
}
country_event = {	
	id = kxxfrance.80 
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.80.t
	desc = kxxfrance.80.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.80.a
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	add_popularity = {
		ideology = totalist
		popularity = 0.3
	  }
	create_country_leader = {
		name = "弗朗索瓦·勒海杜" 
		picture = "gfx/leaders/FRP/Portrait_France_Francois_Lehideux.png"
		expire = "1.1.1"
		ideology = technocracy_subtype
	}
}	
option = { 
	name = kxxfrance.80.b
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	add_popularity = {
		ideology = totalist
		popularity = 0.3
	  }
	create_country_leader = {
		name = "雷蒙德·阿隆" 
		picture = "gfx/leaders/FRA/Portrait_France_Raymond_Aron.png"
		expire = "1.1.1"
		ideology = burnhamite_thought_subtype
	}
}	
option = { 
	name = kxxfrance.80.c
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	add_popularity = {
		ideology = totalist
		popularity = 0.3
	  }
	create_country_leader = {
		name = "勒·柯布西耶" 
		picture = "gfx/leaders/FRA/Portrait_corbusier.png"
		expire = "1.1.1"
		ideology = technocratic_socialism_subtype
	}
}	
option = { 
	name = kxxfrance.80.e
	set_politics = {
		ruling_party = social_democrat
		elections_allowed = no
	}
	add_popularity = {
		ideology = social_democrat
		popularity = 0.3
	  }
	create_country_leader = {
		name = "弗朗西斯·德拉西" 
		picture = "gfx/leaders/FRP/Portrait_France_Francis_Delaisi.png"
		expire = "1.1.1"
		ideology = socdem_utopian_technocracy_subtype
	}
}	
option = { 
	name = kxxfrance.80.f
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	add_popularity = {
		ideology = totalist
		popularity = 0.3
	  }
	create_country_leader = {
		name = "让·库特罗" 
		picture = "gfx/leaders/FRA/Portrait_France_Jean_Coutrot.png"
		expire = "1.1.1"
		ideology = transhumanism_subtype
	}
}	

}
country_event = {	
	id = kxxfrance.81
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.81.t
	desc = kxxfrance.81.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.81.a
	add_stability = -0.2
	create_country_leader = {
		name = "黑卫军"
		desc = "POLITICS_BLACK_GUARD_DESC"
		picture = "gfx/leaders/FRA/Portrait_France_Black_Guard.png"
		expire = "1965.1.1"
		ideology = anarchism_subtype
		traits = { }
	}
	country_event = {
		id = kxxfrance.82
		days = 7
	}
}	
option = { 
	name = kxxfrance.81.b
	
}	
}
country_event = {	
	id = kxxfrance.82
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.82.t
	desc = kxxfrance.82.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.82.a
	add_stability = -0.1
	add_political_power = -100
	hidden_effect = {
		country_event = {
			id = kxxfrance.83
			days = 7
		}
	}
}	
option = { 
	name = kxxfrance.82.b
	custom_effect_tooltip = KXX_UNFINISHED_TOOLTIP
}	
}
country_event = {	
	id = kxxfrance.83
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.83.t
	desc = kxxfrance.83.d
	is_triggered_only = yes

option = { 
	name = kxxfrance.83.a
	create_country_leader = {
		name = "技官委员会"
		picture = "gfx/leaders/CSA/Portrait_CSA_Techno_Council.png"
		expire = "1965.1.1"
		ideology = technocracy_subtype
		traits = { }
	}
			remove_ideas_with_trait = head_of_government
			add_ideas = FRA_Francois_Lehideux_hog_tot
			remove_ideas_with_trait = foreign_minister
			add_ideas = FRA_Jean_Coutrot_for_tot
			remove_ideas_with_trait = economy_minister
			add_ideas = FRA_Le_Corbusier_eco_tot
			remove_ideas_with_trait = security_minister
			add_ideas = FRA_Francis_Delaisi_sec_sde
	set_politics = {
		ruling_party = totalist
		elections_allowed = no
	}
	set_party_name = {
		ideology = totalist
		long_name = "共治帝国运动"
		name = "共治帝国运动"
	}
	set_party_name = {
		ideology = paternal_autocrat
		long_name = "共治帝国运动"
		name = "共治帝国运动"
	}
	set_party_name = {
		ideology = social_democrat
		long_name = "全国人民集会"
		name = "全国人民集会"
	}
	add_popularity = {
		ideology = totalist
		popularity = 0.2
	}
	add_popularity = {
		ideology = paternal_autocrat
		popularity = 0.2
	}
	add_popularity = {
		ideology = social_democrat
		popularity = 0.2
	}
	add_popularity = {
		ideology = radical_socialist
		popularity = -0.2
	}
	complete_national_focus = FRA_synarchist_conpiracy
}	

}
country_event = {	
	id = kxxfrance.84
	immediate = {log = "[GetDateText]: [Root.GetName]: event Frajocbin.war"}
	title = kxxfrance.84.t
	desc = kxxfrance.84.d
	is_triggered_only = yes

option = { 
	create_country_leader = {
		name = "乔治·巴塔耶"
		picture = "gfx/leaders/FRA/Portrait_FRA_Georges_Bataille.png"
		expire = "1965.1.1"
		ideology = surrealist_eroticism_subtype
		traits = { }
	}
	add_popularity = {
		ideology = totalist
		popularity = 0.2
	}
	set_party_name = {
		ideology = totalist
		long_name = "阿赛法尔社团"
		name = "阿赛法尔社团"
	}
	complete_national_focus = FRA_revolt_of_the_masters
	set_cosmetic_tag = FRA_batailles
	
}	
	
}