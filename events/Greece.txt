###########################
# Greece Events
###########################

add_namespace = gre

### Intro Events
country_event = {
	id = gre.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.1" }
	title = gre.1.t
	desc = gre.1.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = gre.1.a
		hidden_effect = {
			set_country_flag = Aris_Velouchiotis_dead
			set_country_flag = Stephanos_Sarafis_dead
			set_country_flag = King_Georgios_II_dead
			set_country_flag = King_Alexandros_I_dead
			set_country_flag = King_Pavlos_I_dead
			set_country_flag = Prince_Alexandros_dead
			set_country_flag = Prince_Georgios_dead
			#country_event = {
			#	id = gre.2
			#	days = 1
			#}
			set_country_flag = {
				flag = gre_monarchist_sympathies
				value = 0
			}
		}
	}
}

### Political Events

# Greek Independence Day
country_event = {
	id = gre.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.3" }
	title = gre.3.t
	desc = gre.3.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
	}

	option = {
		name = gre.3.a
		add_political_power = 20
		hidden_effect = {
			country_event = {
				id = gre.4
				days = 365
			}
		}
	}
}

# Greek Independence Day (subsequent years)
country_event = {
	id = gre.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.4" }
	title = gre.3.t
	desc = gre.4.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
	}

	option = {
		name = gre.4.a
		add_political_power = 20
		hidden_effect = {
			country_event = {
				id = gre.4
				days = 365
			}
		}
	}
}

# Black Monday hits Greece
country_event = {
	id = gre.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.5" }
	title = gre.5.t
	desc = gre.5.d
	picture = GFX_report_event_HOL_black_monday

	is_triggered_only = yes

	option = {
		name = gre.5.a
		add_ideas = GRE_black_monday_1
		add_political_power = -200
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
}

# Agricultural crisis (fired by focus)
country_event = {
	id = gre.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.6" }
	title = gre.6.t
	desc = gre.6.d
	picture = GFX_report_event_SRI_italian_farmers

	is_triggered_only = yes

	option = {
		name = gre.6.a #Help them out as much as we can
		ai_chance = {
			factor = 60
		}
		add_political_power = -50
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		if = {
			limit = {
				NOT = {
					has_government = radical_socialist
				}
			}
			add_popularity = {
				ideology = radical_socialist
				popularity = 0.05
			}
			else = {
				add_popularity = {
					ideology = radical_socialist
					popularity = -0.05
				}
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
	option = {
		name = gre.6.b #Dig deep - they're the backbone of Greece
		ai_chance = {
			factor = 40
		}
		add_political_power = -200
		add_stability = 0.03
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Foreign Industry Question (fired by focus)
country_event = {
	id = gre.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.7" }
	title = gre.7.t
	desc = gre.7.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		name = gre.7.a #Seize it all, no matter the repercussions
		ai_chance = {
			factor = 75
		}
		increase_ruling_party_popularity_by_5 = yes
		custom_effect_tooltip = GRE_decrease_monarchist
		if = {
			limit = {
				has_idea = GRE_foreign_industry_GER1
			}
			remove_ideas = GRE_foreign_industry_GER1
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_stole_industry1
			}
			GER = {
				country_event = gre.8
			}
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_AUS1
			}
			remove_ideas = GRE_foreign_industry_AUS1
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_stole_industry1
			}
			AUS = {
				country_event = gre.8
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
	option = {
		name = gre.7.b #Deal with the worst cases only
		ai_chance = {
			factor = 20
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_GER1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_GER1
				add_idea = GRE_foreign_industry_GER2
			}
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_stole_industry2
			}
			GER = {
				country_event = gre.11
			}
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_AUS1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_AUS1
				add_idea = GRE_foreign_industry_AUS2
			}
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_stole_industry2
			}
			AUS = {
				country_event = gre.11
			}
		}
	}
	option = {
		name = gre.7.c #Subsidize the investors ourselves - they'd better be grateful
		ai_chance = {
			factor = 5
		}
		add_political_power = -200
		decrease_ruling_party_popularity_by_10 = yes
		custom_effect_tooltip = GRE_increase_monarchist
		if = {
			limit = {
				has_idea = GRE_foreign_industry_GER1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_GER1
				add_idea = GRE_foreign_industry_GER3
			}
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_aided_industry
			}
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_AUS1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_AUS1
				add_idea = GRE_foreign_industry_AUS3
			}
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_aided_industry
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
}

# Germany or Austria reacts to full nationalization
country_event = {
	id = gre.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.8" }
	title = gre.8.t
	desc = gre.8.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		name = gre.8.a #Apply sanctions and pull all business out at once
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				tag = AUS
			}
		}
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_they_applied_sanctions1
		}
		GRE = {
			country_event = {
				id = gre.9
				days = 3
			}
		}
	}
	option = {
		name = gre.8.b #Just apply the sanctions and express our outrage
		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.5
				tag = GER
			}
		}
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_they_applied_sanctions2
		}
		GRE = {
			country_event = {
				id = gre.10
				days = 3
			}
		}
	}
	option = {
		name = gre.8.c #Leave them be - we're all trying to cope
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2.0
				tag = AUS
			}
		}
	}
}

# Germany or Austria has_responded with full sanctions
country_event = {
	id = gre.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.9" }
	title = gre.9.t
	desc = gre.9.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = gre.9.a
		if = {
			limit = {
				FROM = {
					tag = GER
				}
			}
			add_timed_idea = {
				idea = GRE_german_sanctions
				days = 1095
			}
		}
		else = {
			add_timed_idea = {
				idea = GRE_austrian_sanctions
				days = 1095
			}
		}
		every_country = {
			limit = {
				OR = {
					tag = FROM
					is_subject_of = FROM
					is_in_faction_with = FROM
				}
			}
			add_opinion_modifier = {
				target = GRE
				modifier = GRE_applied_sanctions
			}
		}
	}
}

# Germany or Austria has_responded with partial sanctions
country_event = {
	id = gre.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.10" }
	title = gre.10.t
	desc = gre.10.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = gre.9.a
		every_country = {
			limit = {
				OR = {
					tag = FROM
					is_subject_of = FROM
					is_in_faction_with = FROM
				}
			}
			add_opinion_modifier = {
				target = GRE
				modifier = GRE_applied_sanctions
			}
		}
	}
}

# Germany or Austria reacts to partial nationalization
country_event = {
	id = gre.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.11" }
	title = gre.11.t
	desc = gre.11.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		name = gre.11.a #Apply sanctions and express our outrage
		ai_chance = {
			factor = 65
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = GRE_foreign_policy
						option = GRE_FOREIGN_POLICY_AUSTRIA
					}
					has_game_rule = {
						rule = GRE_foreign_policy
						option = GRE_FOREIGN_POLICY_REICHSPAKT
					}
				}
			}
		}
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_they_applied_sanctions2
		}
		GRE = {
			country_event = {
				id = gre.10
				days = 3
			}
		}
	}
	option = {
		name = gre.8.c #Leave them be - we're all trying to cope
		ai_chance = {
			factor = 35
			modifier = {
				factor = 2
				tag = AUS
			}
		}
	}
}

# Government waits too long to start referendum
country_event = {
	id = gre.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.12" }
	title = gre.12.t
	desc = gre.12.d
	picture = GFX_report_event_GRE_metaxas

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_idea = GRE_memories_of_king
		has_elected_government = yes
		controls_all_owned_states = yes
		has_war = no
		OR = {
			has_stability > 0.60
			has_country_flag = GRE_balkan_war_loss
			AND = {
				owns_state = 731 #Western Macedonia
				owns_state = 769 #Eastern Macedonia
			}
		}
		has_country_flag = GRE_1938_elections_happened
		NOT = {
			focus_progress = { focus = GRE_monarchy_referendum progress > 0 }
			has_completed_focus = GRE_monarchy_referendum
		}
	}

	mean_time_to_happen = {
		months = 6
	}

	option = {
		name = gre.12.a
		decrease_ruling_party_popularity_by_5 = yes
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Greece leaves Balkan Pact (fired by decision)
country_event = {
	id = gre.13
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.13" }
	title = gre.13.t
	desc = gre.13.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.13.a
		add_political_power = -25
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}

# Greece asks to join faction (fired by decision)
country_event = {
	id = gre.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.14" }
	title = gre.14.t
	desc = gre.14.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	trigger = {
		is_faction_leader = yes
		country_exists = FROM
		NOT = { has_war_with = FROM }
		FROM = { is_in_faction = no }
	}

	option = {
		name = gre.14.a #Of course!
		ai_chance = {
			factor = 90
			modifier = {
				factor = 0
				FROM = { has_country_flag = GRE_chose_megali }
			}
		}
		add_to_faction = FROM
		FROM = {
			country_event = {
				id = gre.15
				hours = 3
			}
		}
	}
	option = {
		name = gre.14.b #They will be more trouble than they're worth
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = GRE_foreign_policy
						option = GRE_FOREIGN_POLICY_ENTENTE
					}
					has_game_rule = {
						rule = GRE_foreign_policy
						option = GRE_FOREIGN_POLICY_RUSSIA
					}
					has_game_rule = {
						rule = GRE_foreign_policy
						option = GRE_FOREIGN_POLICY_REICHSPAKT
					}
					has_game_rule = {
						rule = GRE_foreign_policy
						option = GRE_FOREIGN_POLICY_AUSTRIA
					}
				}
			}
			modifier = {
				factor = 0
				has_war = yes
				FROM = { NOT = { has_country_flag = GRE_chose_megali } }
			}
		}
		FROM = {
			country_event = {
				id = gre.16
				hours = 3
			}
		}
	}
}

# Faction accepts Greece
country_event = {
	id = gre.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.15" }
	title = gre.15.t
	desc = gre.15.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		name = gre.15.a
		add_political_power = 50
	}
}

# Faction refuses Greece
country_event = {
	id = gre.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.16" }
	title = gre.16.t
	desc = gre.16.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = gre.16.a
		add_political_power = -25
	}
}

# Massive demonstrations after Balkan War loss
country_event = {
	id = gre.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.17" }
	title = gre.17.t
	desc = gre.17.d
	picture = GFX_report_event_GRE_protest

	is_triggered_only = yes

	option = {
		name = gre.17.a
		set_country_flag = GRE_balkan_war_loss
		add_stability = -0.20
		decrease_ruling_party_popularity_by_20 = yes
	}
}

# The government nears collapse
country_event = {
	id = gre.18
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.18" }
	title = gre.18.t
	desc = gre.18.d
	picture = GFX_report_event_SPR_civwar3

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_country_flag = GRE_balkan_war_loss
		controls_all_owned_states = yes
		is_subject = no
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = gre.18.a #Forces loyal to Metaxas take over
		trigger = {
			NOT = {
				has_government = paternal_autocrat
			}
			NOT = {
				has_country_flag = Ioannis_Metaxas_dead
			}
		}
		ai_chance = {
			factor = 35
		}
		clr_country_flag = GRE_republicans_win_referendum
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = {
				has_socialist_government = yes
			}
			GRE_stop_being_syndicalist = yes
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = {
					is_in_faction_with = SER
				}
			}
			leave_faction = yes
		}
		if = {
			limit = {
				has_war = yes
			}
			# first peace out with faction leaders
			every_country = {
				limit = {
					is_faction_leader = yes
					has_war_with = GRE
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				GRE = {
					white_peace = PREV
				}
			}
			# then all non-puppets who aren't in factions
			every_country = {
				limit = {
					is_in_faction = no
					is_subject = no
					has_war_with = GRE
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				GRE = {
					white_peace = PREV
				}
			}
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Ioannis_Metaxas_hog_pau
			GRE_Alexandros_Korizis_for_pau
			GRE_Anastasios_Michalakopoulos_eco_pau
			GRE_Konstantinos_Maniadakis_sec_pau
		}
		hidden_effect = {
			add_popularity = {
				ideology = paternal_autocrat
				popularity = 0.10
			}
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.147
					days = 1
				}
			}
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
	}
	option = {
		name = gre.18.b #Aris Velouchiotis wrests control in a coup
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			factor = 50
		}
		clr_country_flag = GRE_republicans_win_referendum
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Aris_Velouchiotis_sec_tot
		}
		hidden_effect = {
			add_popularity = {
				ideology = syndicalist
				popularity = 0.10
			}
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.148
					days = 1
				}
			}
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		GRE_become_syndicalist = yes
	}
	option = {
		name = gre.18.c #The army takes control, promising free and democratic elections
		trigger = {
			OR = {
				has_government = national_populist
				has_government = paternal_autocrat
				has_socialist_government = yes
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "帕夫洛斯一世"
				}
			}
		}
		ai_chance = {
			factor = 50
		}
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = {
				has_socialist_government = yes
			}
			GRE_stop_being_syndicalist = yes
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = {
					is_in_faction_with = SER
				}
			}
			leave_faction = yes
		}
		separate_peace_all_wars = yes
		remove_all_ministers = yes
		add_ideas = {
			GRE_Panagiotis_Kanellopoulos_hog_sli
			GRE_Panagiotis_Pipinelis_for_ade
			GRE_Ioannis_Venizelos_eco_ade
			GRE_Konstantinos_Tsaldaris_sec_sco
		}
		hidden_effect = {
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = 0.10
			}
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.149
					days = 1
				}
			}
		}
		create_country_leader = {
			name = "亚历山德罗斯·帕帕戈斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexandros_Papagos.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}
		hidden_effect = {
			country_event = {
				id = gre.53
				days = 60
			}
		}
	}
	option = {
		name = gre.18.e #The King abdicates the throne, restoring the republic
		ai_chance = {
			factor = 30
		}
		trigger = {
			OR = {
				has_country_leader = {
					ruling_only = yes
					name = "亚历山德罗斯一世"
				}
				has_country_leader = {
					ruling_only = yes
					name = "乔治斯二世"
				}
				has_country_leader = {
					ruling_only = yes
					name = "帕夫洛斯一世"
				}
			}
		}
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_decrease_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = -4
				}
			}
		}
		if = {
			limit = {
				has_country_flag = GRE_monarchists_win_referendum
			}
			set_country_flag = GRE_republicans_win_referendum
			clr_country_flag = GRE_monarchists_win_referendum
		}
		add_stability = -0.10
		add_political_power = -200
		GRE_restore_republic = yes
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = GRE_was_soccon
		}
		else_if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = GRE_was_soclib
		}
		else_if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = GRE_was_marklib
		}
		else_if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = GRE_was_socdem
		}
		country_event = {
			id = gre.54
			days = 1
		}
	}
	option = {
		name = gre.18.f #The government steps down, promising immediate elections
		trigger = {
			has_elected_government = yes
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "亚历山德罗斯一世"
				}
				has_country_leader = {
					ruling_only = yes
					name = "乔治斯二世"
				}
				has_country_leader = {
					ruling_only = yes
					name = "帕夫洛斯一世"
				}
			}
		}
		ai_chance = {
			factor = 15
		}
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_increase_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = 4
				}
			}
		}
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = GRE_was_soccon
		}
		else_if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = GRE_was_soclib
		}
		else_if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = GRE_was_marklib
		}
		else_if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = GRE_was_socdem
		}
		country_event = {
			id = gre.54
			days = 1
		}
	}
}

# The Death of 
country_event = {
	id = gre.19
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.19" }
	title = gre.19.t
	picture = GFX_report_event_GRE_metaxas

	desc = {
		text = gre.19.d.ishos
		trigger = {
			OR = {
				has_country_leader = {
					ruling_only = yes
					name = "扬尼斯·梅塔克萨斯"
				}
				has_idea = GRE_Ioannis_Metaxas_hog_pau
				has_idea = GRE_Ioannis_Metaxas_hog_ade
			}
		}
	}
	desc = {
		text = gre.19.d.nothos
		trigger = {
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "扬尼斯·梅塔克萨斯"
				}
				has_idea = GRE_Ioannis_Metaxas_hog_pau
				has_idea = GRE_Ioannis_Metaxas_hog_ade
			}
		}
	}

	fire_only_once = yes

	trigger = {
		tag = GRE
		date > 1941.1.28
		has_socialist_government = no
		NOT = {
			has_country_flag = Ioannis_Metaxas_dead
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	option = {
		name = gre.19.a
		if = {
			limit = {
				has_idea = GRE_Ioannis_Metaxas_hog_pau
			}
			swap_ideas = {
				remove_idea = GRE_Ioannis_Metaxas_hog_pau
				add_idea = GRE_Alexandros_Korizis_hog_pau
			}
		}
		if = {
			limit = {
				has_idea = GRE_Ioannis_Metaxas_hog_ade
			}
			remove_ideas = GRE_Ioannis_Metaxas_hog_ade
		}
		if = {
			limit = {
				has_idea = GRE_Ioannis_Metaxas_for_pau
			}
			swap_ideas = {
				remove_idea = GRE_Ioannis_Metaxas_for_pau
				add_idea = GRE_Alexandros_Korizis_for_pau
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						has_government = paternal_autocrat
					}
					has_country_leader = {
						ruling_only = yes
						name = "扬尼斯·梅塔克萨斯"
					}
				}
			}
			create_country_leader = {
				name = "亚历山德罗斯·科里齐斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Alexandros_Koryzis.png"
				expire = "1.1.1"
				ideology = pataut_christian_democracy_subtype
			}
		}
		set_country_flag = Ioannis_Metaxas_dead
	}
}

# Papanastasiou dies shortly after 1938 election
country_event = {
	id = gre.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.20" }
	title = gre.20.t
	picture = GFX_report_event_europe_funeral

	desc = {
		text = gre.20.d.ishos
		trigger = {
			OR = {
				has_country_leader = {
					ruling_only = yes
					name = "亚历山德罗斯·帕潘纳斯塔西乌"
				}
				has_idea = GRE_Alexandros_Papanastasiou_hog_sde
			}
		}
	}
	desc = {
		text = gre.20.d.nothos
		trigger = {
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "亚历山德罗斯·帕潘纳斯塔西乌"
				}
				has_idea = GRE_Alexandros_Papanastasiou_hog_sde
			}
		}
	}

	fire_only_once = yes

	trigger = {
		tag = GRE
		date > 1938.2.1
		has_elected_government = yes
		NOT = {
			has_country_flag = Alexandros_Papanastasiou_dead
		}
	}

	mean_time_to_happen = {
		days = 5
	}

	option = {
		name = gre.20.a
		if = {
			limit = {
				has_idea = GRE_Alexandros_Papanastasiou_hog_sde
			}
			swap_ideas = {
				remove_idea = GRE_Alexandros_Papanastasiou_hog_sde
				add_idea = GRE_Nikolaos_Plastiras_hog_sde
			}
		}
		if = {
			limit = {
				has_idea = GRE_Alexandros_Papanastasiou_for_sde
			}
			swap_ideas = {
				remove_idea = GRE_Alexandros_Papanastasiou_for_sde
				add_idea = GRE_Nikolaos_Plastiras_for_sde
			}
		}
		if = {
			limit = {
				NOT = {
					has_cosmetic_tag = GRE_kingdom
				}
			}
			create_country_leader = {
				name = "尼古劳斯·普拉斯提拉斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Nikolaos_Plastiras_kr.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
			}
		}
		set_country_flag = Alexandros_Papanastasiou_dead
	}
}

# Gavrillides steps down in 1940
country_event = {
	id = gre.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.21" }
	title = gre.21.t
	picture = GFX_report_event_GRE_parliament

	desc = {
		text = gre.21.d.ishos
		trigger = {
			OR = {
				has_country_leader = {
					ruling_only = yes
					name = "科斯塔斯·加夫里伊利季斯"
				}
				has_idea = GRE_Kostas_Gavriilides_for_rso
			}
		}
	}
	desc = {
		text = gre.21.d.nothos
		trigger = {
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "科斯塔斯·加夫里伊利季斯"
				}
				has_idea = GRE_Kostas_Gavriilides_for_rso
			}
		}
	}

	fire_only_once = yes

	trigger = {
		tag = GRE
		date > 1940.4.1
		NOT = {
			has_country_flag = Kostas_Gavriilides_dead
		}
	}

	mean_time_to_happen = {
		days = 10
	}

	option = {
		name = gre.20.a
		if = {
			limit = {
				has_idea = GRE_Kostas_Gavriilides_hog_rso
			}
			swap_ideas = {
				remove_idea = GRE_Kostas_Gavriilides_hog_rso
				add_idea = GRE_Nikos_Ploumpidis_hog_rso
			}
		}
		if = {
			limit = {
				has_idea = GRE_Kostas_Gavriilides_for_rso
			}
			swap_ideas = {
				remove_idea = GRE_Kostas_Gavriilides_for_rso
				add_idea = GRE_Nikos_Ploumpidis_for_rso
			}
		}
		if = {
		limit = { NOT = { has_completed_focus = GRE_purple_pheonix } }
		create_country_leader = {
			name = "尼科斯·普卢姆皮季斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Nikos_Ploumpidis.png"
			expire = "1.1.1"
			ideology = agrarian_socialism_subtype
		}
	    }
		set_country_flag = Kostas_Gavriilides_dead
	}
}

# George Papandreou is challenged for leadership
country_event = {
	id = gre.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.22" }
	title = gre.22.t
	desc = gre.22.d
	picture = GFX_report_event_GRE_papandreou

	fire_only_once = yes

	trigger = {
		tag = GRE
		date > 1940.10.10
		has_government = social_liberal
		NOT = {
			has_country_flag = GRE_Kanellopoulos_takes_power
		}
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = gre.22.a #Kanellopoulos wrests controls of the party
		ai_chance = {
			factor = 70
		}
		add_political_power = -50
		if = {
			limit = {
				has_idea = GRE_Georgios_Papandreou_hog_sli
			}
			swap_ideas = {
				remove_idea = GRE_Georgios_Papandreou_hog_sli
				add_idea = GRE_Panagiotis_Kanellopoulos_hog_sli
			}
		}
		if = {
			limit = {
				NOT = {
					has_cosmetic_tag = GRE_kingdom
				}
			}
			create_country_leader = {
				name = "帕纳约蒂斯·卡内洛普洛斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Panagiotis_Kanellopoulos.png"
				expire = "1.1.1"
				ideology = centrist_subtype
			}
		}
		set_country_flag = GRE_Kanellopoulos_takes_power
	}
	option = {
		name = gre.22.b #Papandreou holds onto leadership after a narrow vote
		ai_chance = {
			factor = 30
		}
		add_popularity = {
			ideology = social_liberal
			popularity = -0.10
		}
	}
}

# Themistoklis Soufilis dies in 1949
country_event = {
	id = gre.23
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.23" }
	title = gre.23.t
	picture = GFX_report_event_europe_funeral

	desc = {
		text = gre.23.d.ishos
		trigger = {
			OR = {
				has_country_leader = {
					ruling_only = yes
					name = "塞米斯托克利斯·索富利斯"
				}
				has_idea = GRE_Themistoklis_Sofoulis_hog_mli
			}
		}
	}
	desc = {
		text = gre.23.d.nothos
		trigger = {
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "塞米斯托克利斯·索富利斯"
				}
				has_idea = GRE_Themistoklis_Sofoulis_hog_mli
			}
		}
	}

	fire_only_once = yes

	trigger = {
		tag = GRE
		date > 1949.6.12
		has_elected_government = yes
		NOT = {
			has_country_flag = Themistoklis_Sofoulis_dead
		}
	}

	mean_time_to_happen = {
		days = 12
	}

	option = {
		name = gre.20.a
		if = {
			limit = {
				has_idea = GRE_Themistoklis_Sofoulis_hog_mli
			}
			swap_ideas = {
				remove_idea = GRE_Themistoklis_Sofoulis_hog_mli
				add_idea = GRE_Konstantinos_Tsatsos_hog_mli
			}
		}
		if = {
			limit = {
				has_idea = GRE_Themistoklis_Sofoulis_for_mli
			}
			swap_ideas = {
				remove_idea = GRE_Themistoklis_Sofoulis_for_mli
				add_idea = GRE_Emmanouil_Tsouderos_for_mli
			}
		}
		if = {
			limit = {
				has_idea = GRE_Themistoklis_Sofoulis_eco_mli
			}
			swap_ideas = {
				remove_idea = GRE_Themistoklis_Sofoulis_eco_mli
				add_idea = GRE_Emmanouil_Tsouderos_eco_mli
			}
		}
		if = {
			limit = {
				NOT = {
					has_cosmetic_tag = GRE_kingdom
				}
			}
			create_country_leader = {
				name = "康斯坦丁诺斯·察佐斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Tsatsos.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
			}
		}
		set_country_flag = Themistoklis_Sofoulis_dead
	}
}

# Pangalis Tsaldaris dies in 1936
country_event = {
	id = gre.24
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.24" }
	title = gre.24.t
	desc = gre.24.d
	picture = GFX_report_event_europe_funeral

	fire_only_once = yes

	trigger = {
		tag = GRE
		date > 1936.5.16
		has_elected_government = yes
		NOT = {
			has_country_flag = Panagis_Tsaldaris_dead
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	option = {
		name = gre.24.a
		if = {
			limit = {
				has_idea = GRE_Panagis_Tsaldaris_hog_sco
			}
			swap_ideas = {
				remove_idea = GRE_Panagis_Tsaldaris_hog_sco
				add_idea = GRE_Konstantinos_Tsaldaris_hog_sco
			}
		}
		if = {
			limit = {
				NOT = {
					has_cosmetic_tag = GRE_kingdom
				}
			}
			create_country_leader = {
				name = "康斯坦丁诺斯·察尔扎里斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Tsaldaris.png"
				expire = "1.1.1"
				ideology = christian_democracy_subtype
			}
		}
		set_country_flag = Panagis_Tsaldaris_dead
		add_popularity = {
			ideology = social_conservative
			popularity = 0.03
		}
	}
}

# Set up for Alexander
country_event = {
	id = gre.25

	is_triggered_only = yes
	hidden = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.25"
		clr_country_flag = King_Alexandros_I_dead
		clr_country_flag = Prince_Georgios_dead
		create_country_leader = {
			name = "亚历山德罗斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander.png"
			expire = "1962.1.1"
			ideology = social_democrat_subtype
		}
		create_country_leader = {
			name = "亚历山德罗斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
		}
		create_country_leader = {
			name = "亚历山德罗斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander.png"
			expire = "1962.1.1"
			ideology = centrist_subtype
		}
		create_country_leader = {
			name = "亚历山德罗斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander.png"
			expire = "1962.1.1"
			ideology = market_liberal_subtype
		}
		create_country_leader = {
			name = "亚历山德罗斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander.png"
			expire = "1962.1.1"
			ideology = oligarchy_subtype
		}
		if = {
			limit = {
				NOT = {
					has_unit_leader = 577
				}
			}
			create_field_marshal = {
				name = "乔治斯亲王"
				portrait_path = "gfx/leaders/GRE/Portrait_GRE_George_army.png"
				traits = {
					trait_cautious
					inspirational_leader
				}
				id = 577
				skill = 1
				attack_skill = 1
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 1
			}
		}
	}
}

# Set up for George
country_event = {
	id = gre.26

	is_triggered_only = yes
	hidden = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.26"
		clr_country_flag = King_Georgios_II_dead
		clr_country_flag = Prince_Alexandros_dead
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George.png"
			expire = "1962.1.1"
			ideology = social_democrat_subtype
		}
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
		}
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George.png"
			expire = "1962.1.1"
			ideology = centrist_subtype
		}
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George.png"
			expire = "1962.1.1"
			ideology = market_liberal_subtype
		}
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}
		if = {
			limit = {
				NOT = {
					has_unit_leader = 577
				}
			}
			create_field_marshal = {
				name = "乔治斯二世国王"
				portrait_path = "gfx/leaders/GRE/Portrait_GRE_George_army.png"
				traits = {
					trait_cautious
					inspirational_leader
				}
				id = 577
				skill = 1
				attack_skill = 1
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 1
			}
		}
	}
}

# Set up for Paul
country_event = {
	id = gre.27

	is_triggered_only = yes
	hidden = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.27"
		clr_country_flag = King_Pavlos_I_dead
		clr_country_flag = Prince_Alexandros_dead
		clr_country_flag = Prince_Georgios_dead
		create_country_leader = {
			name = "帕夫洛斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
			expire = "1962.1.1"
			ideology = social_democrat_subtype
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
			expire = "1962.1.1"
			ideology = centrist_subtype
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
			expire = "1962.1.1"
			ideology = market_liberal_subtype
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
			expire = "1962.1.1"
			ideology = oligarchy_subtype
		}
		if = {
			limit = {
				has_government = paternal_autocrat
			}
			create_country_leader = {
				name = "帕夫洛斯一世"
				picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
				expire = "1962.1.1"
				ideology = absolute_monarchy_subtype
			}
		}
		if = {
			limit = {
				has_government = national_populist
			}
			create_country_leader = {
				name = "帕夫洛斯一世"
				picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
				expire = "1962.1.1"
				ideology = national_populist_subtype
			}
		}
		if = {
			limit = {
				NOT = {
					has_unit_leader = 577
				}
			}
			create_field_marshal = {
				name = "乔治斯亲王"
				portrait_path = "gfx/leaders/GRE/Portrait_GRE_George_army.png"
				traits = {
					trait_cautious
					inspirational_leader
				}
				id = 577
				skill = 1
				attack_skill = 1
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 1
			}
		}
	}
}


### Election Events

# Elections after a republican win
country_event = {
	id = gre.52
	title = gre.52.t
	picture = GFX_report_event_AST_election

	desc =  gre.52.d.noban
		
		
	is_triggered_only = yes


	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.52"
		remove_all_ministers = yes
		set_country_flag = GRE_post_republican_election
		if = {
			limit = {
				date > 1938.1.1
				NOT = {
					has_country_flag = GRE_1938_elections_happened
				}
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		name = gre.52.a #Social Conservative
		ai_chance = {
			factor = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
		if = {
			limit = {
				has_country_flag = Panagis_Tsaldaris_dead
			}
			add_ideas = GRE_Konstantinos_Tsaldaris_hog_sco
			else = {
				add_ideas = GRE_Panagis_Tsaldaris_hog_sco
			}
		}
		add_ideas = {
			GRE_Sophocles_Venizelos_for_sco
			GRE_Periklis_Rallis_eco_sco
			GRE_Stephanos_Lakiantos_sec_sco
		}
		complete_national_focus = GRE_populists
		hidden_effect = {
			country_event = {
			id = gre.52
			days = 1460
		}
		}
		
	}
	option = {
		name = gre.52.b #Social Liberal
		ai_chance = {
			factor = 35
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
		if = {
			limit = {
				has_country_flag = GRE_Kanellopoulos_takes_power
			}
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
			else = {
				add_ideas = GRE_Georgios_Papandreou_hog_sli
			}
		}
		add_ideas = {
			GRE_Constantinos_Rentis_for_sli
			GRE_Georgios_Athanasiadis_Novas_eco_sli
			GRE_Pafsanias_Katsotas_sec_sli
		}
		hidden_effect = {
			country_event = {
			id = gre.52
			days = 1460
		}
		}
		complete_national_focus = GRE_liberals
	}
	option = {
		name = gre.52.c #Market Liberal
		ai_chance = {
			factor = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
		if = {
			limit = {
				has_country_flag = Themistoklis_Sofoulis_dead
			}
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
			else = {
				add_ideas = GRE_Themistoklis_Sofoulis_hog_mli
			}
		}
		add_ideas = {
			GRE_Emmanouil_Tsouderos_for_mli
			GRE_Stavros_Kostopoulos_eco_mli
		}
		if = {
			limit = {
				has_country_flag = Themistoklis_Sofoulis_dead
			}
			add_ideas = GRE_Lambros_Labrianidis_sec_mli
			else = {
				add_ideas = GRE_Konstantinos_Tsatsos_sec_mli
			}
		}
		hidden_effect = {
			country_event = {
			id = gre.52
			days = 1460
		}
		}
		complete_national_focus = GRE_glre
	}
	option = {
		name = gre.50.e #Social Democrats
		
		ai_chance = {
			factor = 10
			modifier = {
				factor = 5
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		add_political_power = 100
		add_stability = 0.05
	
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
		if = {
			limit = {
				has_country_flag = Alexandros_Papanastasiou_dead
			}
			add_ideas = GRE_Nikolaos_Plastiras_hog_sde
			else = {
				add_ideas = GRE_Alexandros_Papanastasiou_hog_sde
			}
		}
		add_ideas = {
			GRE_Nikolaos_Plastiras_for_sde
			GRE_Alexandros_Svolos_eco_sde
			GRE_Ioannis_Dourentis_sec_sde
		}
		hidden_effect = {
			country_event = {
			id = gre.52
			days = 1460
		}
		}
		complete_national_focus = GRE_progressives
	}
	
	option = {
		name = gre.52.e #Syndicalists
		
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.20
		}
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Georgios_Vorazanis_eco_rso
			GRE_Aris_Velouchiotis_sec_tot
		}
		country_event = {
			id = gre.150
			days = 7
		}
		hidden_effect = {
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.151
					days = 1
				}
			}
		}
	}
	option = {
		name = gre.52.f 
		
		ai_chance = {
			factor = 25
			
		}
		
		add_ideas = {
			GRE_Ioannis_Metaxas_hog_pau
			GRE_Alexandros_Korizis_for_pau
			GRE_Anastasios_Michalakopoulos_eco_pau
			GRE_Konstantinos_Maniadakis_sec_pau
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.20
		}
		hidden_effect = {
			
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = 152
					days = 1
				}
			}
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = yes
		}
		complete_national_focus = GRE_freethinker
	}
}
country_event = { # The Question on the royal succession
	id = gre.93
	title = gre.93.t
	desc = gre.93.d
	is_triggered_only = yes
	# fire_only_once = yes

	option = { # The Glucksburgs are cool and stuff
		name = gre.93.a
		ai_chance = {
			factor = 50
		}
		
		create_country_leader = {
			name = "亚历山德罗斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}
		complete_national_focus = GRE_king_alexandros
		
	}
	
	option = { # The Glucksburgs are cool and stuff
		name = gre.93.b
		ai_chance = {
			factor = 50
		}
		
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}
		complete_national_focus = GRE_the_mainstream_royalists_glucksburg
		
	}

	option = { # The Glucksburgs are cool and stuff
		name = gre.93.c
		ai_chance = {
			factor = 50
		}
		
		create_country_leader = {
			name = "帕夫洛斯一世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}
		complete_national_focus = GRE_restore_monarchy
		
	}

	option = { # Invite Karrer
		name = gre.93.e
		ai_chance = {
			factor = 50
		}
		
		create_country_leader = {
			name = "卢卡斯四世"
			picture = "gfx/leaders/GRE/Portrait_GRE_Lucas_Karreris.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}

		complete_national_focus = GRE_byzantinists_succeed
	}
}

### Monarchy Referendum Events

# Referendum begins
country_event = {
	id = gre.100
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.100" }
	title = gre.100.t
	desc = gre.100.d
	picture = GFX_report_event_GRE_referendum

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = gre.100.a
		add_stability = -0.05
		hidden_effect = {
			country_event = { id = gre.101 days = 5 } #Monarchist pamphlets
			country_event = { id = gre.102 days = 15 } #Republican campaign
			country_event = { id = gre.103 days = 25 } #Aristrocrat lobbying
			country_event = { id = gre.104 days = 35 } #Socialist speech
			country_event = { id = gre.105 days = 45 } #Pro-Monarchist Riot
			country_event = { id = gre.106 days = 45 } #Pro-Republican Riot
			country_event = { id = gre.107 days = 55 } #Monarchists might win?
			country_event = { id = gre.108 days = 55 } #Republicans might win?
			country_event = { id = gre.109 days = 60 }
		}
	}
}

# Monarchist pamphlets
country_event = {
	id = gre.101
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.101" }
	title = gre.101.t
	desc = gre.101.d
	picture = GFX_report_event_generic_rally2

	is_triggered_only = yes

	

	option = {
		name = gre.101.a #Allow them to distribute
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_democrat
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
	option = {
		name = gre.101.b #We must suppress this nonsense
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 0
				has_government = social_conservative
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Republican campaign
country_event = {
	id = gre.102
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.102" }
	title = gre.102.t
	desc = gre.102.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	

	option = {
		name = gre.102.a # Yes, we should fund this
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_conservative
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -3
			}
		}
	}
	option = {
		name = gre.102.b # No, we should not get involved
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE 	}
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
	}
	option = {
		name = gre.102.c # Discourage this talk within our government
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_democrat
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		add_political_power = -25
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Aristocratic lobbying
country_event = {
	id = gre.103
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.103" }
	title = gre.103.t
	desc = gre.103.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	

	option = {
		name = gre.103.a # We'll allow it
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_democrat
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		add_political_power = 25
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
	option = {
		name = gre.103.b # Place a moratorium on this lobbying
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 0
				has_government = social_conservative
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Socialist speech
country_event = {
	id = gre.104
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.104" }
	title = gre.104.t
	desc = gre.104.d
	picture = GFX_report_event_GRE_zachariadis

	is_triggered_only = yes


	option = {
		name = gre.104.a # Allow it to proceed
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_conservative
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.03
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -2
			}
		}
	}
	option = {
		name = gre.104.b # Send in the police to break it up
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_democrat
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Pro-Monarchist riot
country_event = {
	id = gre.105
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.105" }
	title = gre.105.t
	desc = gre.105.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_country_flag = {
			flag = gre_monarchist_sympathies
			value < 2
		}
		
	}

	option = {
		name = gre.105.a # Keep it contained, but use leniency
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.2
				has_government = social_democrat
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
	option = {
		name = gre.105.b # Shut this down with extreme prejudice
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_liberal
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 0.2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		add_stability = -0.06
		decrease_ruling_party_popularity_by_10 = yes
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Pro-Republican riot
country_event = {
	id = gre.106
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.106" }
	title = gre.106.t
	desc = gre.106.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_country_flag = {
			flag = gre_monarchist_sympathies
			value > 4
		}
		
	}

	option = {
		name = gre.105.a # Keep it contained, but use leniency
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -3
			}
		}
	}
	option = {
		name = gre.105.b # Shut this down with extreme prejudice
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_liberal
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0.2
				has_government = social_democrat
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		add_stability = -0.06
		decrease_ruling_party_popularity_by_10 = yes
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Referendum occurs
country_event = {
	id = gre.109
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.109" }
	title = gre.109.t
	desc = gre.109.d
	picture = GFX_report_event_GRE_referendum

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_republicans_win_referendum
		}
	}

	option = {
		name = gre.109.a
		if = {
			limit = {
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = GRE_monarchy_rig
				}
			}
			custom_effect_tooltip = GRE_referendum_is_rigged
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = GRE_republic_rig
				}
				OR = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
				}
			}
			custom_effect_tooltip = GRE_monarchy_guaranteed
		}
		else_if = {
			limit = {
				NOT = {
					has_country_flag = GRE_monarchy_rig
				}
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
				}
			}
			custom_effect_tooltip = GRE_republic_guaranteed
		}
		else_if = {
			limit = {
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 2
				}
			}
			custom_effect_tooltip = GRE_monarchy_likely
		}
		else_if = {
			limit = {
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -1
				}
			}
			custom_effect_tooltip = GRE_republic_likely
		}
		else = {
			custom_effect_tooltip = GRE_referendum_close
		}
		hidden_effect = {
			random_other_country = {
				limit = { is_ai = yes }
				country_event = gre.110
			}
		}
	}
}

# Bounce event to determine victor
country_event = {
	id = gre.110
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.110" }
	title = gre.110.t
	desc = gre.110.d
	picture = GFX_report_event_GRE_referendum

	is_triggered_only = yes

	option = {
		name = gre.110.a #Republicans
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				GRE = {
					OR = {
						has_country_flag = GRE_monarchy_rig
						has_country_flag = {
							flag = gre_monarchist_sympathies
							value > 5
						}
					}
				}
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
			modifier = {
				factor = 1.2
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < 0
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > -2
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -1
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > -3
					}
				}
			}
			modifier = {
				factor = 2.0
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -2
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > -4
					}
				}
			}
			modifier = {
				factor = 2.5
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -3
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > -5
					}
				}
			}
			modifier = {
				factor = 3.0
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -4
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > -6
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		GRE = {
			country_event = { id = gre.111 days = 3 }
		}
	}
	option = {
		name = gre.110.b #Monarchists
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				GRE = {
					OR = {
						has_country_flag = GRE_republic_rig
						has_country_flag = {
							flag = gre_monarchist_sympathies
							value < -5
						}
					}
				}
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 1.2
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 0
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < 2
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 1
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < 3
					}
				}
			}
			modifier = {
				factor = 2.0
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 2
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < 4
					}
				}
			}
			modifier = {
				factor = 2.5
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 3
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < 5
					}
				}
			}
			modifier = {
				factor = 3.0
				GRE = {
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 4
					}
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < 6
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		GRE = {
			country_event = { id = gre.112 days = 3 }
		}
	}
}

# Republican victory
country_event = {
	id = gre.111
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.111" }
	title = gre.111.t
	desc = gre.111.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_republicans_win_referendum
		}
	}

	option = {
		name = gre.111.a
		complete_national_focus = GRE_elections
		set_country_flag = GRE_republicans_win_referendum
		add_stability = 0.05
		country_event = { id = gre.52 days = 30 }
		hidden_effect = {
			remove_ideas = GRE_memories_of_king
			if = {
				limit = {
					has_country_flag = GRE_republic_rig
					NOT = { has_country_flag = Ioannis_Metaxas_dead }
				}
				country_event = { id = gre.113 days = 3 }
			}
			random_other_country = {
				limit = { is_ai = yes }
				news_event = { id = worldnews.156 days = 1 }
			}
		}
	}
}

# Monarchist victory
country_event = {
	id = gre.112
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.112" }
	title = gre.112.t
	desc = gre.112.d
	picture = GFX_report_event_GRE_royal

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_republicans_win_referendum
		}
	}

	option = {
		name = gre.112.a
		set_country_flag = GRE_monarchists_win_referendum
		remove_ideas = GRE_memories_of_king
		add_stability = 0.05
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}

		complete_national_focus = GRE_the_royalists_succeed
		hidden_effect = {
			if = {
				limit = { has_country_flag = GRE_monarchy_rig }
				country_event = { id = gre.113 days = 3 }
			}
		}
	}
}

# Bounce effect to determine whether rig was discovered
country_event = {
	id = gre.113
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.113" }
	title = gre.113.t
	picture = GFX_report_event_GRE_crowd2

	desc = {
		text = gre.113.d.monarchist
		trigger = {
			has_country_flag = GRE_monarchists_win_referendum
		}
	}
	desc = {
		text = gre.113.d.republican
		trigger = {
			has_country_flag = GRE_republicans_win_referendum
		}
	}

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
	}

	option = {
		name = gre.113.a # The rigging is discovered!
		ai_chance = {
			factor = 25
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 2
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 3
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 4
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -2
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -3
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -4
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
				}
			}
		}
		if = {
			limit = { has_country_flag = GRE_republic_rig }
			country_event = { id = gre.114 hours = 3 }
			else = {
				country_event = { id = gre.115 hours = 3 }
			}
		}
	}
	option = {
		name = gre.113.b # No evidence is uncovered and the protests die down
		ai_chance = {
			factor = 75
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL }
				}
			}
		}
		add_political_power = -100
		add_stability = -0.05
	}
}

# Metaxas overthrows a rigged republic vote
country_event = {
	id = gre.114
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.114" }
	title = gre.114.t
	desc = gre.114.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = Ioannis_Metaxas_dead }
	}

	option = {
		name = gre.114.a
		clr_country_flag = GRE_republicans_win_referendum
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = {
				is_subject = yes
			}
			overlord = {
				country_event = {
					id = gre.116
					days = 1
				}
				set_autonomy = {
					target = GRE
					autonomy_state = autonomy_free
				}
			}
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = {
					is_in_faction_with = SER
				}
			}
			leave_faction = yes
		}
		if = {
			limit = {
				has_war = yes
			}
			# first peace out with faction leaders
			every_country = {
				limit = {
					is_faction_leader = yes
					has_war_with = GRE
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				GRE = {
					white_peace = PREV
				}
			}
			# then all non-puppets who aren't in factions
			every_country = {
				limit = {
					is_in_faction = no
					is_subject = no
					has_war_with = GRE
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				GRE = {
					white_peace = PREV
				}
			}
		}
		remove_all_ministers = yes
		
	}
}

# Syndicalists overthrow a rigged monarchy vote
country_event = {
	id = gre.115
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.115" }
	title = gre.115.t
	desc = gre.115.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		name = gre.114.a
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Aris_Velouchiotis_sec_tot
		}
		hidden_effect = {
			add_popularity = {
				ideology = syndicalist
				popularity = 0.10
			}
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.153
					days = 1
				}
			}
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		GRE_become_syndicalist = yes
	}
}

# Greece breaks puppet status after coup
country_event = {
	id = gre.116
	title = gre.116.t
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	trigger = {
		NOT = {
			is_in_faction_with = GRE
		}
	}

	desc = {
		text = gre.116.d.metaxas
		trigger = {
			FROM = {
				has_government = paternal_autocrat
			}
		}
	}
	desc = {
		text = gre.116.d.syndicalist
		trigger = {
			FROM = {
				has_government = syndicalist
			}
		}
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.116"
		add_opinion_modifier = {
			target = GRE
			modifier = KR_outraged
		}
	}

	option = {
		name = gre.116.a #They cannot escape so easily
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 0
				has_elected_government = yes
			}
		}
		create_wargoal = {
			type = annex_everything
			target = GRE
		}
	}
	option = {
		name = gre.116.b #We have little choice but to let them be
		ai_chance = {
			factor = 70
			modifier = {
				factor = 0.5
				has_authoritarian_government = yes
			}
		}
		add_political_power = -50
	}
}

# Question of Monarchists (fired by focus)
country_event = {
	id = gre.117
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.117" }
	title = gre.117.t
	desc = gre.117.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	option = {
		name = gre.117.a #Purging them is the only way
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
		}
		add_stability = -0.05
		add_political_power = 50
		add_popularity = {
			ideology = social_conservative
			popularity = -0.10
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = -0.10
		}
	}
	option = {
		name = gre.117.b #Let them remain - the question is settled
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				has_government = social_liberal
			}
		}
		add_stability = 0.05
		add_political_power = -100
	}
}

# Question of Republicans (fired by focus)
country_event = {
	id = gre.118
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.118" }
	title = gre.118.t
	desc = gre.118.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	option = {
		name = gre.117.a #Purging them is the only way
		ai_chance = {
			factor = 50
		}
		add_stability = -0.05
		add_political_power = 50
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.10
		}
	}
	option = {
		name = gre.117.b #Let them remain - the question is settled
		ai_chance = {
			factor = 50
		}
		add_stability = 0.05
		add_political_power = -100
	}
}

# Rise of the radical socialists after monarchist win
country_event = {
	id = gre.119
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.119" }
	title = gre.119.t
	desc = gre.119.d
	picture = GFX_report_event_GRE_zachariadis

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		has_country_flag = GRE_monarchists_win_referendum
	}

	mean_time_to_happen = {
		days = 15
	}

	option = {
		name = gre.119.a #Rather worrying...
		ai_chance = {
			factor = 65
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_syndicalist_civil_war
					option = GRE_SYNDICALIST_CIVIL_WAR_YES_WAR
				}
			}
		}
		add_stability = -0.05
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.10
		}
		hidden_effect = {
			country_event = {
				id = gre.120
				days = 10
			}
		}
	}
	option = {
		name = gre.119.b #Ban them from the election
		ai_chance = {
			factor = 35
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_syndicalist_civil_war
					option = GRE_SYNDICALIST_CIVIL_WAR_NO_WAR
				}
			}
		}
		custom_effect_tooltip = GRE_socialists_banned_elections
		set_country_flag = GRE_socialists_banned
		add_stability = -0.10
	}
}

# Liberals and moderate socialists form coalition
country_event = {
	id = gre.120
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.120" }
	title = gre.120.t
	desc = gre.120.d
	picture = GFX_report_event_GRE_papandreou

	is_triggered_only = yes

	trigger = {
		tag = GRE
		has_elected_government = yes
	}

	option = {
		name = gre.120.a
		add_popularity = {
			ideology = social_liberal
			popularity = 0.03
		}
	}
}

# Left unites after republican win
country_event = {
	id = gre.121
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.121" }
	title = gre.121.t
	desc = gre.121.d
	picture = GFX_report_event_GRE_zachariadis

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		has_country_flag = GRE_republicans_win_referendum
	}

	mean_time_to_happen = {
		days = 15
	}

	option = {
		name = gre.121.a
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_syndicalist_civil_war
					option = GRE_SYNDICALIST_CIVIL_WAR_YES_WAR
				}
			}
		}
		add_stability = -0.05
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
	}
	option = {
		name = gre.121.b #Ban them from the election
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_syndicalist_civil_war
					option = GRE_SYNDICALIST_CIVIL_WAR_NO_WAR
				}
			}
		}
		custom_effect_tooltip = GRE_socialists_banned_elections
		set_country_flag = GRE_socialists_banned
		add_stability = -0.10
	}
}

# Civil war begins after socialists are banned from the elections
country_event = {
	id = gre.122
	title = gre.122.t
	desc = gre.122.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		tag = GRE
		is_subject = no
		has_country_flag = GRE_socialists_banned
		has_democratic_government = yes
		controls_all_owned_states = yes
		OR = {
			owns_state = 731 #Central Macedonia
			owns_state = 1076 #Southern Macedonia
			owns_state = 768 #Thessaly
		}
		NOT = {
			has_country_flag = GRE_had_civil_war
		}
	}

	mean_time_to_happen = {
		months = 1
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.122"
		set_country_flag = GRE_had_civil_war
		hidden_effect = {
			every_state = {
				limit = { is_core_of = GRE }
				add_core_of = GRR
			}
			random_owned_state = {
				prioritize = { 731 }
				limit = {
					OR = {
						state = 731
						state = 1076
						state = 768
						AND = {
							state = 989
							ROOT = { owns_state = 731 }
						}
					}
				}
				save_event_target_as = rebel_state
				GRR = { transfer_state = PREV }
			}
			every_unit_leader = {
				limit = {
					OR = {
						has_id = 571 #Velouchiotis
						has_id = 572 #Sarafis
					}
				}
				set_nationality = GRR
			}
			GRR = {
				transfer_technology = yes
				set_politics = {
					ruling_party = syndicalist
					elections_allowed = no
				}
				add_ideas = {
					GRE_legacy_of_alexander_idea
					GRR_Nikos_Zachariadis_hog_syn
					GRR_Konstantinos_Speras_for_syn
					GRR_Leonidas_Strigkos_eco_syn
					GRR_Georgios_Siantos_sec_tot
					GRR_Aris_Velouchiotis_carm_tot
				}
				add_political_power = 100
				add_manpower = 50000
				add_popularity = { ideology = syndicalist popularity = 0.35 }
				if = {
					limit = { NOT = { has_unit_leader = 571 } }
					create_field_marshal = {
						name = "阿里斯·韦卢希奥蒂斯"
						portrait_path = "gfx/leaders/GRE/Portrait_GRE_Athanasios_Klaras.png"
						traits = {
							trickster
							aggressive_assaulter
							brilliant_strategist
						}
						id = 571
						skill = 3
						attack_skill = 3
						defense_skill = 1
						planning_skill = 2
						logistics_skill = 3
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 572 } }
					create_corps_commander = {
						name = "斯特凡诺斯·萨拉菲斯"
						portrait_path = "gfx/leaders/GRE/Portrait_GRE_Stefanos_Sarafis.png"
						traits = {
							trait_reckless
							ranger
						}
						id = 572
						skill = 2
						attack_skill = 2
						defense_skill = 2
						planning_skill = 2
						logistics_skill = 2
					}
				}
				country_event = { id = gre.125 days = 1 }
			}
		}
	}

	option = {
		name = gre.122.a
		hidden_effect = {
			add_ideas = has_scripted_peace
			create_country_leader = {
				name = "尼科斯·扎哈里亚季斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Nikos_Zachariadis_kr.png"
				expire = "1.1.1"
				ideology = syndicalist_subtype
			}
			set_temp_variable = { temp = num_equipment@infantry_equipment }
			multiply_temp_variable = { temp = 0.5 }
			send_equipment = { target = GRR type = infantry_equipment amount = temp }

			set_temp_variable = { temp = num_equipment@artillery_equipment }
			multiply_temp_variable = { temp = 0.5 }
			send_equipment = { target = GRR type = artillery_equipment amount = temp }

			set_temp_variable = { temp = num_equipment@support_equipment }
			multiply_temp_variable = { temp = 0.5 }
			send_equipment = { target = GRR type = support_equipment amount = temp }
		}
		GRR = {
			country_event = gre.161
		}
	}
}

# Socialists win civil war
country_event = {
	id = gre.123
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.123" }
	title = gre.123.t
	desc = gre.123.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_war_with = GRR
		GRR = { has_capitulated = no }
		has_country_flag = GRE_had_civil_war
		has_democratic_government = yes
		OR = {
			surrender_progress > 0.75
			AND = {
				surrender_progress > 0.50
				47 = {
					is_owned_by = GRE
					is_controlled_by = GRR
				}
			}
		}
	}

	option = {
		name = gre.123.a
		if = {
			limit = {
				OR = {
					has_country_leader = { ruling_only = yes name = "亚历山德罗斯一世" }
					has_country_leader = { ruling_only = yes name = "乔治斯二世" }
					has_country_leader = { ruling_only = yes name = "帕夫洛斯一世" }
				}
			}
			GRE_restore_republic = yes
		}
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Aris_Velouchiotis_sec_tot
		}
		hidden_effect = {
			add_popularity = {
				ideology = syndicalist
				popularity = 0.20
			}
			random_other_country = {
				limit = { is_ai = yes }
				news_event = {
					id = worldnews.154
					days = 1
				}
			}
			every_state = {
				limit = { is_core_of = GRR }
				remove_core_of = GRR
			}
		}
		annex_country = { target = GRR }
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		GRE_become_syndicalist = yes
		hidden_effect = {
			remove_ideas = has_scripted_peace
		}
	}
}

# Turn the rebel into Greece if it's all that's left
country_event = {
	id = gre.124
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.124" }
	title = gre.124.t
	desc = gre.124.d
	picture = GFX_report_event_GRE_aris

	trigger = {
		tag = GRR
		has_government = syndicalist
		NOT = { country_exists = GRE }
		has_war = no
	}

	mean_time_to_happen = {
		days = 3
	}

	option = {
		name = gre.124.a
		if = {
			limit = { check_variable = { num_owned_states > 1 } }
			random_owned_state = {
				GRE = { transfer_state = PREV }
			}
		}
		add_to_temp_array = { core_removal_array = GRR }
		remove_all_cores_and_claims_of_tags = yes
		GRE = {
			if = {
				limit = {
					OR = {
						has_country_leader = { ruling_only = yes name = "亚历山德罗斯一世" }
						has_country_leader = { ruling_only = yes name = "乔治斯二世" }
						has_country_leader = { ruling_only = yes name = "帕夫洛斯一世" }
					}
				}
				GRE_restore_republic = yes
			}
			clr_country_flag = GRE_monarchists_win_referendum
			add_stability = -0.10
			remove_all_ministers = yes
			add_ideas = {
				GRE_Nikos_Zachariadis_hog_syn
				GRE_Konstantinos_Speras_for_syn
				GRE_Leonidas_Strigkos_eco_syn
				GRE_Aris_Velouchiotis_sec_tot
			}
			add_popularity = {
				ideology = syndicalist
				popularity = 0.20
			}
			set_politics = {
				ruling_party = syndicalist
				elections_allowed = no
			}
			GRE_become_syndicalist = yes
			remove_ideas = has_scripted_peace
			GRR = { transfer_navy = { target = GRE } }
			annex_country = {
				target = GRR
				transfer_troops = yes
			}
		}
	}
}

# Giving rebels their soldiers
country_event = {
	id = gre.125

	is_triggered_only = yes
	hidden = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.125"
		set_variable = { strength = GRE.num_divisions }
		multiply_variable = { var = strength value = 0.9 }
		clamp_variable = { var = strength max = 25 min = 3 }

		if = {
			limit = {
				GRE = {
					has_war = no
					is_in_faction = yes
					any_allied_country = {
						is_neighbor_of = GRE
					}
				}
			}
			add_to_variable = { var = strength value = 3 }
		}

		GRE_add_rebel_units = yes
	}
}

# Greece annexes the rebels if the war has somehow ended
country_event = {
	id = gre.126
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.126" }
	title = gre.126.t
	desc = gre.126.d
	picture = GFX_report_event_GRE_aris

	trigger = {
		tag = GRR
		country_exists = GRE
		has_war = no
	}

	mean_time_to_happen = {
		days = 3
	}

	option = {
		name = gre.126.a
		add_to_temp_array = { core_removal_array = GRR }
		remove_all_cores_and_claims_of_tags = yes
		GRE = {
			add_stability = -0.10
			annex_country = {
				target = GRR
				transfer_troops = no
			}
		}
	}
}

### SYNDICALIST EVENTS

# First Hellenic Congress (fired by focus)
country_event = {
	id = gre.150
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.150" }
	title = gre.150.t
	desc = gre.150.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		name = gre.150.a # Zachariadis remains in control
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
			}
		}
		set_country_flag = GRE_held_first_congress
		add_stability = 0.05
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		complete_national_focus = GRE_hardliners
		
	}
	option = {
		name = gre.150.b # Aris Velouchiotis commands the room, in the end
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDICALIST }
			}
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Aris_Velouchiotis_hog_tot
			GRE_Stephanos_Sarafis_for_tot
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Georgios_Siantos_sec_tot
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.10
		}
		complete_national_focus = GRE_giotopoulos_archiomarxists
	}
	option = {
		name = gre.150.c #Radical Socialists

		ai_chance = {
			factor = 30
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum
					option = GRE_REFERENDUM_ALEXANDER_DEM
				}
			}
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.20
		}
		remove_all_ministers = yes
		if = {
			limit = {
				has_country_flag = Kostas_Gavriilides_dead
			}
			add_ideas = GRE_Nikos_Ploumpidis_hog_rso
			else = {
				add_ideas = GRE_Kostas_Gavriilides_hog_rso
			}
		}
		if = {
			limit = {
				has_country_flag = Kostas_Gavriilides_dead
			}
			add_ideas = GRE_Andreas_Tsipas_for_rso
			else = {
				add_ideas = GRE_Nikos_Ploumpidis_for_rso
			}
		}
		add_ideas = {
			GRE_Georgios_Vorazanis_eco_rso
			GRE_Loukas_Karliaftis_sec_rso
		}
		complete_national_focus = GRE_liberal_socialism
		
		hidden_effect = {
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.150
					days = 1
				}
			}
		}
	}
	option = {
		name = gre.150.e #socdem

		ai_chance = {
			factor = 30
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum
					option = GRE_REFERENDUM_ALEXANDER_DEM
				}
			}
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		set_country_flag = soc_dems_are_socialists
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
		remove_all_ministers = yes
		create_country_leader = {
			name = "亚历山德罗斯·斯沃洛斯"
			picture = "gfx/leaders/GRE/Portrait_Alexandros_Svolos_Army.png"
			expire = "1.1.1"
			ideology = syndie_social_democrat_subtype
		}
		set_party_name = {
			ideology = social_democrat
			name =  "农民劳工党"
			long_name =  "农民劳工党"
		}
		add_ideas = {
			GRE_Alexandros_Papanastasiou_hog_sde
			GRE_Nikolaos_Plastiras_for_sde
			GRE_Alexandros_Svolos_eco_sde
			GRE_Loukas_Karliaftis_sec_rso
		}
		complete_national_focus = GRE_soc_dems
		
		hidden_effect = {
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.150
					days = 1
				}
			}
		}
	}
	option = {
		name = gre.156.b #Konstantinos Speras wins the most votes and becomes chairman
		add_political_power = 75
		create_country_leader = {
			name = "康斯坦丁诺斯·斯佩拉斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Speras.png"
			expire = "1.1.1"
			ideology = yellow_syndicalism_subtype
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		remove_all_ministers = yes
		set_party_name = {
			ideology = syndicalist
			name =  "金色黎明（左派）"
			long_name =  "希腊国家社会主义党—工团派"
		}
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Nikos_Beloyannis_eco_syn
			GRE_Loukas_Karliaftis_sec_rso
		}
		complete_national_focus = GRE_left_gold_down
	}
	option = {
		name = gre.150.f #jacobin

		ai_chance = {
			factor = 30
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum
					option = GRE_REFERENDUM_ALEXANDER_DEM
				}
			}
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		
		add_popularity = {
			ideology = totalist
			popularity = 0.20
		}
		remove_all_ministers = yes
		create_country_leader = {
			name = "尼古拉斯·卡拉斯"
			picture = "gfx/leaders/GRE/Portrait_Nicolas_Calas.png"
			expire = "1.1.1"
			ideology = jacobinism_subtype
		}
		set_party_name = {
			ideology = totalist
			name =  "未来超现实主义共产党"
			long_name =  "未来超现实主义共产党"
		}
		add_ideas = {
			GRE_Aris_Velouchiotis_hog_tot
			GRE_Stephanos_Sarafis_for_tot
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Georgios_Siantos_sec_tot
		}
		complete_national_focus = GRE_jacobinism
		set_cosmetic_tag = GRE_accelerationism
		hidden_effect = {
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.150
					days = 1
				}
			}
		}
	}
	option = {
		name = gre.150.g #hellnoturk

		ai_chance = {
			factor = 30
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum
					option = GRE_REFERENDUM_ALEXANDER_DEM
				}
			}
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		
		add_popularity = {
			ideology = totalist
			popularity = 0.20
		}
		remove_all_ministers = yes
		create_country_leader = {
			name = "贝娅塔·基西基斯"
			picture = "gfx/leaders/GRE/Portrait_Beata_Kitsikis.png"
			expire = "1.1.1"
			ideology = socialist_feminism_subtype
		}
		set_party_name = {
			ideology = totalist
			name =  "希腊共产党"
			long_name =  "希腊共产党"
		}
		add_ideas = {
			GRE_Nicolas_Kitsikis_hog_tot
			GRE_Angelos_Sikelianos_for_tot
			GRE_Patroklos_Karantinos_eco_tot
			GRE_Yanis_Kordatos_sec_tot
		}
		complete_national_focus = GRE_dream_of_hellnoturkism
		hidden_effect = {
			random_other_country = {
				limit = {
					is_ai = yes
				}
				news_event = {
					id = worldnews.150
					days = 1
				}
			}
		}
	}
}

# Establishing the Communes (fired by focus)
country_event = {
	id = gre.151
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.151" }
	title = gre.151.t
	desc = gre.151.d
	picture = GFX_report_event_GRE_demonstration

	is_triggered_only = yes

	option = {
		name = gre.151.a #Expand the industrial base, regardless of the cost
		add_stability = -0.10
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				arms_factory > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				arms_factory > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.151.b #Ease the country into this, with incentives
		add_stability = 0.10
		add_political_power = -50
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.151.c #The unions must drive this change - let them take charge
		add_stability = 0.05
		add_political_power = 50
		add_ideas = GRE_unions_in_charge
	}
}

# Rebuilding the Nation (fired by focus)
country_event = {
	id = gre.152
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.152" }
	title = gre.152.t
	desc = gre.152.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		name = gre.152.a #We must build our military power
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				arms_factory > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				arms_factory > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				arms_factory > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.152.b #A strong civilian industry will be our foundation
		add_ideas = GRE_totalist_industry
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.152.c #Unity is more important than the economy
		add_ideas = GRE_secret_police
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				arms_factory > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				is_controlled_by = GRE
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
}

# Syndicalists march after Black Friday
country_event = {
	id = gre.153
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.153" }
	title = gre.153.t
	desc = gre.153.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	option = {
		name = gre.153.a #Crack down on these rabble-rousers
		add_stability = -0.08
	}
	option = {
		name = gre.153.b #Keep them contained, but we want no violence
		add_political_power = -50
		add_popularity = {
			ideology = syndicalist
			popularity = 0.06
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.03
		}
	}
}

# Farmers march after Black Friday
country_event = {
	id = gre.154
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.154" }
	title = gre.154.t
	desc = gre.154.d
	picture = GFX_report_event_GRE_riot

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_idea = GRE_black_monday_1
		has_elected_government = yes
	}

	mean_time_to_happen = {
		days = 10
	}

	option = {
		name = gre.154.a
		add_stability = -0.03
		add_popularity = {
			ideology = social_democrat
			popularity = 0.02
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.03
		}
		hidden_effect = {
			country_event = {
				id = gre.153
				days = 15
			}
		}
	}
}

# Plot to replace Aris Velouchiatis
country_event = {
	id = gre.155
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.155" }
	title = gre.155.t
	desc = gre.155.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_government = totalist
		has_country_leader = {
			ruling_only = yes
			name = "阿里斯·韦卢希奥蒂斯"
		}
		date > 1941.1.1
	}

	mean_time_to_happen = {
		months = 10
	}

	option = {
		name = gre.155.a #Georgios Santos takes over party leadership
		ai_chance = {
			factor = 75
		}
		add_stability = -0.10
		create_country_leader = {
			name = "乔治斯·西安托斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_Santios.png"
			expire = "1.1.1"
			ideology = authcom_subtype
		}
		if = {
			limit = {
				has_idea = GRE_Aris_Velouchiotis_hog_tot
			}
			swap_ideas = {
				remove_idea = GRE_Aris_Velouchiotis_hog_tot
				add_idea = GRE_Georgios_Siantos_hog_tot
			}
		}
		if = {
			limit = {
				has_idea = GRE_Georgios_Siantos_sec_tot
			}
			swap_ideas = {
				remove_idea = GRE_Georgios_Siantos_sec_tot
				add_idea = GRE_Giannes_Ioannides_sec_tot
			}
		}
	}
	option = {
		name = gre.155.b #Santos is executed - Aris Velouchiatis rules
		ai_chance = {
			factor = 25
		}
		set_country_flag = Georgios_Siantos_dead
		add_political_power = -100
		if = {
			limit = {
				has_idea = GRE_Georgios_Siantos_sec_tot
			}
			swap_ideas = {
				remove_idea = GRE_Georgios_Siantos_sec_tot
				add_idea = GRE_Markos_Vaphiadis_sec_tot
			}
		}
	}
}

# Second Hellenic Congress
country_event = {
	id = gre.156
	title = gre.156.t
	desc = gre.156.d
	picture = GFX_report_event_AST_federationalist

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.156"
		remove_all_ministers = yes
	}

	option = {
		name = gre.156.a #Zachariadis ushers in a new cabinet and retains control
		add_stability = 0.05
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Stephanos_Sarafis_for_tot
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Ioannis_Passalidis_sec_syn
		}
		hidden_effect = {
			country_event = {
				id = gre.157
				days = 1460
				} #Third Congress
		}
	}
	option = {
		name = gre.156.b #Konstantinos Speras wins the most votes and becomes chairman
		add_political_power = 75
		create_country_leader = {
			name = "康斯坦丁诺斯·斯佩拉斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Speras.png"
			expire = "1.1.1"
			ideology = syndicalist_subtype
		}
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Nikos_Beloyannis_eco_syn
			GRE_Loukas_Karliaftis_sec_rso
		}
		hidden_effect = {
			country_event = {
				id = gre.157
				days = 1460
				} #Third Congress
		}
	}
}

# Third Hellenic Congress
country_event = {
	id = gre.157
	title = gre.157.t
	picture = GFX_report_event_AST_federationalist

	desc = {
		text = gre.157.d.zach
		trigger = {
			has_country_leader = {
				ruling_only = yes
				name = "尼科斯·扎哈里亚季斯"
			}
		}
	}
	desc = {
		text = gre.157.d.notzach
		trigger = {
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "尼科斯·扎哈里亚季斯"
				}
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.157"
		remove_all_ministers = yes
	}

	option = {
		name = gre.157.a #Konstantinos Speras maintains control
		trigger = {
			NOT = {
				has_country_leader = {
					ruling_only = yes
					name = "尼科斯·扎哈里亚季斯"
				}
			}
		}
		ai_chance = {
			factor = 40
		}
		add_stability = 0.05
		create_country_leader = {
			name = "康斯坦丁诺斯·斯佩拉斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Speras.png"
			expire = "1.1.1"
			ideology = syndicalist_subtype
		}
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Stamatios_Chatzimpeis_eco_tot
			GRE_Loukas_Karliaftis_sec_rso
		}
	}
	option = {
		name = gre.157.b #Konstantinos Speras wins the majority of the vote
		trigger = {
			has_country_leader = {
				ruling_only = yes
				name = "尼科斯·扎哈里亚季斯"
			}
		}
		ai_chance = {
			factor = 40
		}
		add_political_power = 50
		create_country_leader = {
			name = "康斯坦丁诺斯·斯佩拉斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Speras.png"
			expire = "1.1.1"
			ideology = syndicalist_subtype
		}
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Stamatios_Chatzimpeis_eco_tot
			GRE_Loukas_Karliaftis_sec_rso
		}
	}
	option = {
		name = gre.157.c #Upstart Nikos Beloyannis wins over the council
		ai_chance = {
			factor = 60
		}
		add_political_power = 75
		create_country_leader = {
			name = "尼科斯·贝洛扬尼斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Nikos_Beloyannis.png"
			expire = "1.1.1"
			ideology = syndicalist_subtype
		}
		add_ideas = {
			GRE_Nikos_Beloyannis_hog_syn
			GRE_Nikos_Ploumpidis_for_rso
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Evristheas_Magiakos_sec_syn
		}
	}
}

# Metaxas wins civil war
country_event = {
	id = gre.159
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.159" }
	title = gre.159.t
	desc = gre.159.d
	picture = GFX_report_event_GRE_metaxas

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_war_with = GRR
		has_country_flag = GRE_had_civil_war
		has_socialist_government = yes
		OR = {
			surrender_progress > 0.75
			AND = {
				surrender_progress > 0.50
				47 = {
					is_owned_by = GRE
					is_controlled_by = GRR
				}
			}
		}
	}

	option = {
		name = gre.159.a
		clr_country_flag = GRE_republicans_win_referendum
		add_stability = -0.10
		remove_all_ministers = yes
		GRE_stop_being_syndicalist = yes
		if = {
			limit = {
				is_subject = yes
			}
			overlord = {
				country_event = {
					id = gre.116
					days = 1
				}
				set_autonomy = {
					target = GRE
					autonomy_state = autonomy_free
				}
			}
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = { is_in_faction_with = SER }
			}
			leave_faction = yes
		}
		if = {
			limit = {
				has_war = yes
			}
			# first peace out with faction leaders
			every_country = {
				limit = {
					is_faction_leader = yes
					has_war_with = GRE
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				GRE = {
					white_peace = PREV
				}
			}
			# then all non-puppets who aren't in factions
			every_country = {
				limit = {
					is_in_faction = no
					is_subject = no
					has_war_with = GRE
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				GRE = {
					white_peace = PREV
				}
			}
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Ioannis_Metaxas_hog_pau
			GRE_Alexandros_Korizis_for_pau
			GRE_Anastasios_Michalakopoulos_eco_pau
			GRE_Konstantinos_Maniadakis_sec_pau
		}
		hidden_effect = {
			add_popularity = {
				ideology = paternal_autocrat
				popularity = 0.10
			}
			random_other_country = {
				limit = { is_ai = yes }
				news_event = {
					id = worldnews.155
					days = 1
				}
			}
			every_state = {
				limit = { is_core_of = GRR }
				remove_core_of = GRR
			}
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
		annex_country = { target = GRR }
		hidden_effect = {
			remove_ideas = has_scripted_peace
		}
	}
}

# Turn the rebel into Greece if it's all that's left
country_event = {
	id = gre.160
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.160" }
	title = gre.160.t
	desc = gre.160.d
	picture = GFX_report_event_GRE_metaxas

	trigger = {
		tag = GRR
		has_government = paternal_autocrat
		NOT = { country_exists = GRE }
		has_war = no
	}

	mean_time_to_happen = {
		days = 3
	}

	option = {
		name = gre.160.a
		if = {
			limit = { check_variable = { num_owned_states > 1 } }
			random_owned_state = {
				GRE = { transfer_state = PREV }
			}
		}
		add_to_temp_array = { core_removal_array = GRR }
		remove_all_cores_and_claims_of_tags = yes
		GRE = {
			clr_country_flag = GRE_republicans_win_referendum
			add_stability = -0.10
			remove_all_ministers = yes
			GRE_stop_being_syndicalist = yes
			add_ideas = {
				GRE_Ioannis_Metaxas_hog_pau
				GRE_Alexandros_Korizis_for_pau
				GRE_Anastasios_Michalakopoulos_eco_pau
				GRE_Konstantinos_Maniadakis_sec_pau
			}
			add_popularity = {
				ideology = paternal_autocrat
				popularity = 0.20
			}
			set_politics = {
				ruling_party = paternal_autocrat
				elections_allowed = no
			}
			remove_ideas = has_scripted_peace
			GRR = { transfer_navy = { target = GRE } }
			annex_country = {
				target = GRR
				transfer_troops = yes
			}
		}
	}
}

country_event = {
	id = gre.161
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.161" }
	title = gre.161.t
	desc = gre.161.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	option = {
		name = gre.161.a
		declare_war_on = {
			target = GRE
			type = annex_everything
		}
	}
}

### DIPLOMATIC PATH EVENTS

# Thawing relations with the Turks (fired by focus)
country_event = {
	id = gre.200
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.200" }
	title = gre.200.t
	desc = gre.200.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.200.a #We welcome better relations with the Greeks
		ai_chance = {
			factor = 70
			modifier = {
				factor = 0.5
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
		}
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_diplomatic_mission
		}
		GRE = {
			country_event = {
				id = gre.201
				days = 3
			}
		}
	}
	option = {
		name = gre.200.b #No, we've no need for this
		ai_chance = {
			factor = 30
			modifier = {
				factor = 2
				has_government = national_populist
			}
			modifier = {
				factor = 0
				has_elected_government = yes
				GRE = {
					has_elected_government = yes
				}
			}
		}
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_no_peace
		}
		GRE = {
			country_event = {
				id = gre.202
				days = 3
			}
		}
	}
}

# The Turks agree to diplomacy
country_event = {
	id = gre.201
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.201" }
	title = gre.201.t
	desc = gre.201.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = GRE
			}
		}
	}

	option = {
		name = gre.201.a
		set_country_flag = GRE_has_thaw_with_turks
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
	}
}

# The Turks reject diplomacy
country_event = {
	id = gre.202
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.202" }
	title = gre.202.t
	desc = gre.202.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = GRE
			}
		}
	}

	option = {
		name = gre.202.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# Greeks seek treaty of co-operation with the Turks
country_event = {
	id = gre.203
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.203" }
	title = gre.203.t
	desc = gre.203.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.203.a #We agree to their terms
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				GRE = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 0.1
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				tag = TUR
				OR = {
					has_war = no
					surrender_progress < 0.10
				}
			}
		}
		add_political_power = 100
		diplomatic_relation = {
			country = GRE
			relation = non_aggression_pact
		}
		if = {
			limit = {
				owns_state = 187
				} #Aegean Islands
			187 = {
				remove_core_of = ROOT
			}
			GRE = {
				transfer_state = 187
			}
		}
		if = {
			limit = {
				owns_state = 182
				} #Crete
			182 = {
				remove_core_of = ROOT
			}
			GRE = {
				transfer_state = 182
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		GRE = {
			country_event = {
				id = gre.208
				days = 3
			}
		}
	}
	option = {
		name = gre.203.b #We agree to everything but surrendering land
		trigger = {
			any_owned_state = {
				is_core_of = GRE
			}
		}
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 0.5
				tag = TUR
				OR = {
					has_war = no
					surrender_progress < 0.10
				}
			}
		}
		GRE = {
			country_event = {
				id = gre.204
				days = 3
			}
		}
	}
	option = {
		name = gre.203.c #No, they are asking for far too much
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 10
				tag = TUR
				OR = {
					has_war = no
					surrender_progress < 0.10
				}
			}
		}
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		GRE = {
			country_event = {
				id = gre.207
				days = 3
			}
		}
	}
}

# The Turks refuse to exchange cores
country_event = {
	id = gre.204
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.204" }
	title = gre.204.t
	desc = gre.204.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.204.a #Then there's no deal
		ai_chance = {
			factor = 75
		}
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		FROM = {
			country_event = {
				id = gre.205
				days = 3
			}
		}
	}
	option = {
		name = gre.204.b #Very well, we'll work with that
		ai_chance = {
			factor = 25
		}
		effect_tooltip = {
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		hidden_effect = {
			set_country_flag = GRE_no_surrender_claims
			FROM = {
				save_event_target_as = turks
			}
			country_event = {
				id = gre.209
				days = 30
			}
		}
		FROM = {
			country_event = {
				id = gre.206
				days = 3
			}
		}
	}
}

# The Greeks refuse to agree to the modified deal
country_event = {
	id = gre.205
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.205" }
	title = gre.205.t
	desc = gre.205.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.205.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# The Greeks agree to the modified deal
country_event = {
	id = gre.206
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.206" }
	title = gre.206.t
	desc = gre.206.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.206.a
		add_political_power = 100
		set_country_flag = GRE_no_surrender_claims
		diplomatic_relation = {
			country = GRE
			relation = non_aggression_pact
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
	}
}

# The Turks refuse the deal
country_event = {
	id = gre.207
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.207" }
	title = gre.207.t
	desc = gre.207.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.207.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# The Turks agree to the full deal
country_event = {
	id = gre.208
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.208" }
	title = gre.208.t
	desc = gre.208.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.208.a
		add_political_power = 100
		every_owned_state = {
			limit = {
				is_core_of = FROM
			}
			FROM = {
				transfer_state = PREV
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		hidden_effect = {
			FROM = {
				save_event_target_as = turks
			}
			country_event = {
				id = gre.209
				days = 30
			}
		}
	}
}

# Population Exchange
country_event = {
	id = gre.209

	hidden = yes
	is_triggered_only = yes

	trigger = {
		country_exists = event_target:turks
		NOT = {
			has_war_with = event_target:turks
		}
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event gre.209"
		set_variable = {
			var = popmove
			value = 0
		}
		event_target:turks = {
			set_variable = {
				var = popmove
				value = 0
			}
		}

		#Greek side
		if = {
			limit = {
				owns_state = 184
				} #Thrace
			set_temp_variable = {
				temp1 = 184.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.5
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			184 = {
				add_manpower = temp1
			}
		}
		if = {
			limit = {
				owns_state = 769
				} #Eastern Macedonia
			set_temp_variable = {
				temp1 = 769.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.5
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			769 = {
				add_manpower = temp1
			}
		}
		if = {
			limit = {
				owns_state = 187
				} #Aegean Islands
			set_temp_variable = {
				temp1 = 187.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.3
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			187 = {
				add_manpower = temp1
			}
		}
		if = {
			limit = {
				owns_state = 182
				} #Crete
			set_temp_variable = {
				temp1 = 182.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.2
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			182 = {
				add_manpower = temp1
			}
		}

		#Turkish side
		event_target:turks = {
			if = {
				limit = {
					owns_state = 773
					} #Constantinople
				773 = {
					add_manpower = -40000
				}
				add_to_variable = {
					ROOT.popmove = 40000
				}
			}
			if = {
				limit = {
					owns_state = 341
					} #Edirne
				set_temp_variable = {
					temp1 = 341.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.35
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				341 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 340
					} #Bursa
				set_temp_variable = {
					temp1 = 340.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.23
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				340 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 1225
					} #Bursa
				set_temp_variable = {
					temp1 = 1225.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.23
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				1225 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 339
					} #Izmir
				set_temp_variable = {
					temp1 = 339.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.23
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				339 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 356
					} #Sinop
				set_temp_variable = {
					temp1 = 356.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.13
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				356 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 355
					} #Samsun
				set_temp_variable = {
					temp1 = 355.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.13
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				355 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 187
					} #Aegean
				set_temp_variable = {
					temp1 = 187.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.40
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				187 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 182
					} #Crete
				set_temp_variable = {
					temp1 = 182.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.40
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				182 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = {
					owns_state = 184
					} #Eastern Macedonia
				set_temp_variable = {
					temp1 = 184.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.40
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				184 = {
					add_manpower = temp1
				}
			}
		}

		round_variable = ROOT.popmove
		round_variable = event_target:turks.popmove

		# Now fire follow-up events
		event_target:turks = {
			country_event = gre.210
		}
		country_event = gre.211
	}
}

# Turkish part of population exchange
country_event = {
	id = gre.210
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.210" }
	title = gre.210.t
	desc = gre.210.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		name = gre.210.a
		add_stability = -0.10
		set_country_flag = GRE_exchange_happened
		custom_effect_tooltip = GRE_total_pops_turkarrive
		custom_effect_tooltip = GRE_total_pops_turkleave
		if = {
			limit = {
				has_country_flag = GRE_no_surrender_claims
			}
			clr_country_flag = GRE_no_surrender_claims
			else = {
				every_owned_state = {
					limit = {
						is_claimed_by = GRE
					}
					remove_claim_by = GRE
				}
			}
		}

		hidden_effect = {
			country_event = {
				id = gre.212
				days = 365
			}
			set_temp_variable = {
				leftover = ROOT.popmove
			}
			if = {
				limit = {
					owns_state = 341
					} #Edirne
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.20
				}
				341 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 340
					} #Bursa
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.35
				}
				340 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 1225
					} #Bursa
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.35
				}
				1225 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 339
					} #Izmir
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.25
				}
				339 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 773
					} #Constantinople
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.08
				}
				773 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			capital_scope = {
				add_manpower = leftover
			}
		}
	}
}

# Greek part of population exchange
country_event = {
	id = gre.211
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.211" }
	title = gre.210.t
	desc = gre.211.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		name = gre.210.a
		add_stability = -0.15
		set_country_flag = GRE_exchange_happened
		custom_effect_tooltip = GRE_total_pops_greekarrive
		custom_effect_tooltip = GRE_total_pops_greekleave
		if = {
			limit = {
				has_country_flag = GRE_no_surrender_claims
			}
			clr_country_flag = GRE_no_surrender_claims
			else = {
				every_owned_state = {
					limit = {
						is_claimed_by = event_target:turks
					}
					remove_claim_by = event_target:turks
				}
			}
		}

		hidden_effect = {
			country_event = {
				id = gre.212
				days = 365
			}
			set_temp_variable = {
				leftover = ROOT.popmove
			}
			if = {
				limit = {
					owns_state = 184
					} #Thrace
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.20
				}
				184 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 769
					} #Eastern Macedonia
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.12
				}
				769 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 989
					} #Salonika
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.10
				}
				989 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 187
					} #Aegean Islands
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.03
				}
				187 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = {
					owns_state = 182
					} #Crete
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.03
				}
				182 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			capital_scope = {
				add_manpower = leftover
			}
		}
	}
}

# Stability restored
country_event = {
	id = gre.212
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.212" }
	title = gre.212.t
	desc = gre.212.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		name = gre.212.a
		add_stability = 0.10
		add_political_power = 100
	}
}

# Greece sends diplomatic mission to Balkans country (fired by focus)
country_event = {
	id = gre.213
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.213" }
	title = gre.213.t
	desc = gre.213.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.213.a #Yes, let's work more closely with the Greeks
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
		}
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_diplomatic_mission
		}
		if = {
			limit = {
				NOT = {
					is_in_faction_with = GRE
				}
			}
			effect_tooltip = {
				diplomatic_relation = {
					country = GRE
					relation = non_aggression_pact
				}
			}
		}
		GRE = {
			country_event = {
				id = gre.214
				days = 3
			}
		}
	}
	option = {
		name = gre.213.b #No, there's no need for this
		ai_chance = {
			factor = 20
			modifier = {
				factor = 4
				GRE = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
		}
		GRE = {
			country_event = {
				id = gre.215
				days = 3
			}
		}
	}
}

# The Balkans country agrees
country_event = {
	id = gre.214
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.214" }
	title = gre.214.t
	desc = gre.214.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.214.a
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
		if = {
			limit = {
				NOT = {
					is_in_faction_with = FROM
				}
			}
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_balkans_coop
				value = 1
			}
		}
	}
}

# The Balkans country refuses
country_event = {
	id = gre.215
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.215" }
	title = gre.215.t
	desc = gre.215.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.215.a
		add_political_power = -25
	}
}

# Greater stability from Balkans cooperation
country_event = {
	id = gre.216
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.216" }
	title = gre.216.t
	desc = gre.216.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_balkans_trade
		is_subject = no
		controls_all_owned_states = yes
		has_country_flag = {
			flag = gre_balkans_coop
			value > 1
		}
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = gre.216.a
		add_stability = 0.05
		add_political_power = 50
	}
}

# Greater investment from Balkans cooperation
country_event = {
	id = gre.217
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.217" }
	title = gre.216.t
	desc = gre.216.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_balkans_trade
		is_subject = no
		controls_all_owned_states = yes
		has_country_flag = {
			flag = gre_balkans_coop
			value > 3
		}
		any_owned_state = {
			is_core_of = GRE
			is_in_home_area = yes
			industrial_complex > 0
		}
	}

	mean_time_to_happen = {
		months = 3
	}

	option = {
		name = gre.216.a
		random_owned_state = {
			limit = {
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
}


### EXPANSIONISM EVENTS

# Faction leader warned of Megali (fired by focus)
country_event = {
	id = gre.250
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.250" }
	title = gre.250.t
	desc = gre.250.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.250.a #We support them, no matter what
		ai_chance = {
			factor = 70
			modifier = {
				factor = 1.5
				has_war = yes
			}
			modifier = {
				factor = 0
				any_country = {
					NOT = { tag = GRE }
					OR = {
						is_guaranteed_by = ROOT
						is_in_faction_with = ROOT
					}
					OR = {
						owns_state = 341 #Edirne
						owns_state = 773 #Constantinople
						owns_state = 340 #Bursa
						owns_state = 1225 #Bursa
						owns_state = 339 #Izmir
					}
				}
			}
			modifier = {
				factor = 0.5
				any_country = {
					NOT = {
						tag = GRE
						is_guaranteed_by = ROOT
						is_in_faction_with = ROOT
					}
					ROOT = {
						has_opinion = { target = PREV value > 100 }
					}
					OR = {
						owns_state = 341 #Edirne
						owns_state = 773 #Constantinople
						owns_state = 340 #Bursa
						owns_state = 1225 #Bursa
						owns_state = 339 #Izmir
					}
				}
			}
			modifier = {
				factor = 5
				any_country = {
					NOT = { tag = GRE }
					OR = {
						owns_state = 341 #Edirne
						owns_state = 773 #Constantinople
						owns_state = 340 #Bursa
						owns_state = 1225 #Bursa
						owns_state = 339 #Izmir
					}
					OR = {
						has_war_with = ROOT
						any_owned_state = { is_claim_or_core_of_ROOT = yes }
					}
				}
			}
		}
		GRE = {
			country_event = {
				id = gre.251
				days = 3
			}
		}
	}
	option = {
		name = gre.250.b #This is unacceptable - they either desist, or they go
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0.1
				has_war = yes
				surrender_progress > 0.10
			}
			modifier = {
				factor = 0.5
				NOT = {
					any_country = {
						NOT = { tag = GRE }
						ROOT = {
							has_opinion = { target = PREV value > 0 }
						}
						OR = {
							owns_state = 341 #Edirne
							owns_state = 773 #Constantinople
							owns_state = 340 #Bursa
							owns_state = 1225 #Bursa
							owns_state = 339 #Izmir
						}
					}
				}
			}
		}
		GRE = {
			add_opinion_modifier = { target = ROOT modifier = KR_outraged }
			country_event = {
				id = gre.252
				days = 3
			}
		}
	}
}

# Faction leader supports Greece
country_event = {
	id = gre.251
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.251" }
	title = gre.251.t
	desc = gre.251.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		is_in_faction_with = FROM
		FROM = {
			is_faction_leader = yes
		}
	}

	option = {
		name = gre.251.a
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
}

# Faction leader won't support Greece
country_event = {
	id = gre.252
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.252" }
	title = gre.252.t
	desc = gre.252.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		is_in_faction_with = FROM
		FROM = {
			is_faction_leader = yes
		}
	}

	option = {
		name = gre.252.a #Then Megali dies here
		trigger = { is_ai = no }
		clr_country_flag = GRE_chose_megali
		add_political_power = 100
		add_stability = 0.05
		every_state = {
			limit = {
				NOT = { is_owned_by = GRE }
				is_claimed_by = GRE
				OR = {
					state = 341 #Edirne
					state = 773 #Constantinople
					state = 340 #Bursa
					state = 1225 #Bursa
					state = 339 #Izmir
				}
			}
			remove_claim_by = GRE
		}
	}
	option = {
		name = gre.252.b #Then we are on our own
		leave_faction = yes
		FROM = { country_event = gre.253 }
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
}

# Greece withdrew from faction
country_event = {
	id = gre.253
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.253" }
	title = gre.253.t
	picture = GFX_report_event_GRE_athens

	desc = {
		text = gre.253.d.allies
		trigger = {
			any_allied_country = {
				any_owned_state = {
					OR = {
						is_core_of = GRE
						is_claimed_by = GRE
					}
				}
			}
		}
	}
	desc = {
		text = gre.253.d.noallies
		trigger = {
			NOT = {
				any_allied_country = {
					any_owned_state = {
						OR = {
							is_core_of = GRE
							is_claimed_by = GRE
						}
					}
				}
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.253.a
		add_political_power = -50
	}
}

# Greece offers peace to get claims (fired by decision)
country_event = {
	id = gre.254
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.254" }
	title = gre.254.t
	desc = gre.254.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.254.a #We must make peace while we can
		if = {
			limit = {
				FROM = { has_country_flag = GRE_chose_megali }
				OR = {
					tag = TUR
					tag = TUR
				}
			}
			add_political_power = -200
			add_stability = -0.20
		}
		else = {
			add_political_power = -100
			add_stability = -0.10
		}

		every_state = {
			limit = {
				OR = {
					is_owned_by = ROOT
					owner = { is_subject_of = ROOT }
					AND = {
						ROOT = { is_faction_leader = yes }
						owner = { is_in_faction_with = ROOT }
					}
				}
				OR = {
					is_core_of = GRE
					is_claimed_by = GRE
					state = 183 #Cyprus
					state = 164 #Dodecanese Islands
					AND = {
						state = 1089 #Momchilgrad
						OR = {
							TUR = { owns_state = 1089 }
							TUR = { owns_state = 1089 }
						}
					}
				}
			}
			GRE = {
				transfer_state = PREV
			}
		}
		GRE = {
			white_peace_with_ROOT = yes
		}
	}
	option = {
		name = gre.254.b #No - they will have to fight us to the last man
		trigger = {
			is_ai = no
		}
		GRE = {
			country_event = gre.255
		}
	}
}

# They refuse to make peace
country_event = {
	id = gre.255
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.255" }
	title = gre.255.t
	desc = gre.255.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.255.a
		add_war_support = 0.10
	}
}

# Move the capital to Constantinople?
country_event = {
	id = gre.256
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.256" }
	title = gre.256.t
	desc = gre.256.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_war = no
		owns_state = 773 #Constantinople
		capital_scope = {
			state = 47
			} #Attica
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		name = gre.256.a #Yes, this is the proper capital of our nation
		add_political_power = 50
		add_stability = -0.03
		set_capital = { state = 773 }
	}
	option = {
		name = gre.256.b #No, we remain in Athens as always
		add_stability = 0.05
	}
}

# We are given land w/ end of Bulgarian Empire
state_event = {
	id = gre.257
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.257" }
	title = gre.257.t
	desc = gre.257.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.257.a
	}
}

# Greek faction leader concerned about expansionism
country_event = {
	id = gre.259
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.259" }
	title = gre.259.t
	desc = gre.259.d
	picture = GFX_report_event_GRE_army

	fire_only_once = yes

	trigger = {
		OR = {
			tag = ENT
			tag = AUS
			tag = GER
		}
		is_faction_leader = yes
		is_in_faction_with = GRE
		GRE = {
			has_country_flag = GRE_chose_megali
			is_subject = no
		}
		has_war = no
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		name = gre.259.a #We don't want to be involved
		ai_chance = {
			factor = 70
			modifier = {
				factor = 0
				NOT = {
					any_state = {
						OR = {
							is_owned_by = TUR
							is_owned_by = TUR
						}
						OR = {
							is_core_of = GRE
							is_claimed_by = GRE
							state = 766
							state = 164
							state = 183
							state = 187
							state = 184
							state = 1089
							state = 341 #Edirne
							state = 773 #Constantinople
							state = 340 #Bursa
							state = 1225 #Bursa
							state = 339 #Izmir
						}
					}
				}
			}
		}
		set_country_flag = GRE_ejected_from_faction
		remove_from_faction = GRE
		GRE = {
			add_opinion_modifier = { target = ROOT modifier = KR_outraged }
			country_event = gre.260
		}
	}
	option = {
		name = gre.259.b #We are unconcerned
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0.1
				NOT = { tag = GER }
			}
			modifier = {
				factor = 0.1
				OR = {
					is_in_faction_with = TUR
					is_in_faction_with = TUR
				}
			}
		}
	}
}

# Greeks ejected from faction
country_event = {
	id = gre.260
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.260" }
	title = gre.260.t
	desc = gre.260.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.260.a
		effect_tooltip = {
			FROM = { remove_from_faction = GRE }
		}
	}
}

# Greece considers extent of claims
country_event = {
	id = gre.261
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.261" }
	title = gre.261.t
	picture = GFX_report_event_GRE_army

	desc = {
		text = gre.261.d.faction
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
		}
	}
	desc = {
		text = gre.261.d.nofaction
		trigger = {
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.261.a #We will keep our claims to traditional territory
		trigger = {
			OR = {
				NOT = { owns_state = 184 } #Western Thrace
				NOT = { owns_state = 1089 } #Western Thrace
				NOT = { owns_state = 164 } #Dodecanese Islands
				NOT = { owns_state = 183 } #Cyprus
				NOT = { owns_state = 187 } #Aegean Islands
				NOT = { owns_state = 766 } #Northern Epirus
			}
		}
		ai_chance = {
			factor = 50
		}
		add_political_power = -100
		add_stability = -0.05
		every_other_country = {
			limit = {
				any_owned_state = {
					NOT = { is_owned_by = GRE }
					OR = {
						state = 766 #Northern Epirus
						state = 164 #Dodecanese Islands
						state = 183 #Cyprus
						state = 187 #Aegean Islands
						state = 184 #Western Thrace
						state = 1089 #Western Thrace
					}
				}
			}
			add_opinion_modifier = { target = GRE modifier = GRE_claimed_my_state }
		}
		every_state = {
			limit = {
				NOT = { is_owned_by = GRE }
				is_not_claim_or_core_of_ROOT = yes
				OR = {
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Western Thrace
					state = 1089 #Western Thrace
				}
			}
			add_claim_by = GRE
		}
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
				any_allied_country = {
					any_owned_state = {
						OR = {
							is_claimed_by = GRE
							is_core_of = GRE
							state = 766 #Northern Epirus
							state = 164 #Dodecanese Islands
							state = 183 #Cyprus
							state = 187 #Aegean Islands
							state = 184 #Western Thrace
							state = 1089 #Western Thrace
						}
					}
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = GRE
					is_faction_leader = yes
				}
				country_event = gre.253
			}
			leave_faction = yes
		}
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
	option = {
		name = gre.261.b #Resurrect the Megali Idea!
		trigger = {
			OR = {
				NOT = { owns_state = 341 } #Edirne
				NOT = { owns_state = 773 } #Constantinople
				NOT = { owns_state = 340 } #Bursa
				NOT = { owns_state = 1225 } #Bursa
				NOT = { owns_state = 339 } #Izmir
			}
		}
		ai_chance = {
			factor = 50
		}
		add_political_power = -300
		add_stability = -0.15
		set_country_flag = GRE_chose_megali
		every_other_country = {
			limit = {
				any_owned_state = {
					NOT = { is_owned_by = GRE }
					is_not_claim_or_core_of_ROOT = yes
					OR = {
						state = 341 #Edirne
						state = 773 #Constantinople
						state = 340 #Bursa
						state = 1225 #Bursa
						state = 339 #Izmir
						state = 766 #Northern Epirus
						state = 164 #Dodecanese Islands
						state = 183 #Cyprus
						state = 187 #Aegean Islands
						state = 184 #Western Thrace
						state = 1089 #Western Thrace
					}
				}
			}
			add_opinion_modifier = { target = GRE modifier = GRE_claimed_my_state }
		}
		every_state = {
			limit = {
				NOT = { is_owned_by = GRE }
				is_not_claim_or_core_of_ROOT = yes
				OR = {
					state = 341 #Edirne
					state = 773 #Constantinople
					state = 340 #Bursa
					state = 1225 #Bursa
					state = 339 #Izmir
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Western Thrace
					state = 1089 #Western Thrace
				}
			}
			add_claim_by = GRE
		}
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
				any_allied_country = {
					any_owned_state = {
						OR = {
							is_claimed_by = GRE
							is_core_of = GRE
							state = 341 #Edirne
							state = 773 #Constantinople
							state = 340 #Bursa
							state = 1225 #Bursa
							state = 339 #Izmir
							state = 766 #Northern Epirus
							state = 164 #Dodecanese Islands
							state = 183 #Cyprus
							state = 187 #Aegean Islands
							state = 184 #Western Thrace
							state = 1089 #Western Thrace
						}
					}
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = GRE
					is_faction_leader = yes
				}
				country_event = gre.253
			}
			leave_faction = yes
			set_country_flag = GRE_may_start_megali
			unlock_decision_tooltip = GRE_megali_war
		}
		else_if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			random_country = {
				limit = {
					is_in_faction_with = GRE
					is_faction_leader = yes
				}
				country_event = gre.250
			}
		}
		else = {
			set_country_flag = GRE_may_start_megali
			unlock_decision_tooltip = GRE_megali_war
		}
	}
}

country_event = {
	id = gre.300
	title = gre.300.t
	desc = gre.300.d
	picture = GFX_news_event_GRE_regent_metaxas

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_purple_pheonix
		has_country_leader = {
			ruling_only = yes
			name = "扬尼斯·梅塔克萨斯"
		}
	}	
	
	option = {
		name = gre.300.a
		add_country_leader_trait = byz_regent
		if = {	
			limit = { has_country_leader = { name = "扬尼斯·梅塔克萨斯" ruling_only = yes } }
			set_country_leader_portrait = {
				portrait = "gfx/leaders/GRE/Portrait_GRE_Ioannis_Metaxasemporer.png"
			}
		}
	}
}

country_event = {
	id = gre.301
	title = gre.301.t
	desc = gre.301.d
	picture = GFX_news_event_GRE_rebirth
	is_triggered_only = yes
	option = {
		name = gre.301.a
		ai_chance = { factor = 1}
	}
}

country_event = {
	id = gre.302
	title = gre.302.t
	desc = gre.302.d
	picture = GFX_news_event_GRE_constantinople

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_national_rebirth
		owns_state = 773

	}	
	
	option = {
		name = gre.302.a
	}
}

country_event = {
	id = gre.303
	title = gre.303.t
	desc = gre.303.d
	picture = GFX_news_event_GRE_ottoman_war
	is_triggered_only = yes
	option = {
		name = gre.303.a
		ai_chance = { factor = 1}
	}
}

country_event = {
	id = gre.304
	title = gre.304.t
	desc = gre.304.d
	picture = GFX_news_event_GRE_warrior_culture
	is_triggered_only = yes
	option = {
		name = gre.304.a
		add_ideas = GRE_komnenian_army_idea
	}
	option = {
		name = gre.304.b
		add_ideas = GRE_neo_varangian_idea
	}
	option = {
		name = gre.304.c
		add_ideas = GRE_neo_varangian_idea
		add_ideas = GRE_komnenian_army_idea
	}
}

country_event = {
	id = gre.305
	title = gre.305.t
	desc = gre.305.d
	picture = GFX_news_event_GRE_byzantine_empire
	is_triggered_only = yes
	option = {
		name = gre.305.a
		ai_chance = { factor = 1}
	}
}

country_event = {
	id = gre.306
	title = gre.306.t
	desc = gre.306.d
	picture = GFX_news_event_GRE_regent_koryzis

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_purple_pheonix
		has_country_leader = {
			ruling_only = yes
			name = "亚历山德罗斯·科里齐斯"
		}
	}	
	
	option = {
		name = gre.306.a
		add_country_leader_trait = byz_regent
		if = {	
			limit = { has_country_leader = { name = "亚历山德罗斯·科里齐斯" ruling_only = yes } }
			set_country_leader_portrait = {
				portrait = "gfx/leaders/GRE/Portrait_GRE_Alexandros_Koryzis_emporer.png"
			}
		}
	}
}

country_event = {
	id = gre.307
	title = gre.307.t
	desc = gre.307.d
	picture = GFX_news_event_GRE_emporer

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_purple_pheonix
		has_country_leader = {
			ruling_only = yes
			name = "帕夫洛斯一世"
		}
	}	
	
	option = {
		name = gre.307.a
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = agrarian_socialism_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = social_democrat_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = centrist_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = market_liberal_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = oligarchy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = absolute_monarchy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "帕夫洛斯一世"
			desc = "POLITICS_KING_PAVLOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Paul_emporer.png"
			expire = "1962.1.1"
			ideology = national_populist_subtype
			traits = { byz_emporer }
		}
	}
}

country_event = {
	id = gre.308
	title = gre.308.t
	desc = gre.308.d
	picture = GFX_news_event_GRE_rome

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_byz_gommie
		owns_state = 2
	}	
	
	option = {
		name = gre.308.a
		set_capital = { state = 2 }
	}
}

country_event = {
	id = gre.309
	title = gre.309.t
	desc = gre.309.d
	picture = GFX_news_event_GRE_metaxas_youth
	is_triggered_only = yes
	option = {
		name = gre.309.a
		ai_chance = { factor = 1}
	}
}

country_event = {
	id = gre.310
	title = gre.310.t
	desc = gre.310.d
	picture = GFX_news_event_GRE_orthodox_church
	is_triggered_only = yes
	option = {
		name = gre.310.a
		ai_chance = { factor = 1}
	}
}

country_event = {
	id = gre.311
	title = gre.311.t
	desc = gre.311.d
	picture = GFX_news_event_GRE_emporer2

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_purple_pheonix
		has_country_leader = {
			ruling_only = yes
			name = "乔治斯二世"
		}
	}	
	
	option = {
		name = gre.311.a
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1962.1.1"
			ideology = agrarian_socialism_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1962.1.1"
			ideology = social_democrat_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1962.1.1"
			ideology = centrist_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1962.1.1"
			ideology = market_liberal_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1.1.1"
			ideology = absolute_monarchy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "乔治斯二世"
			desc = "POLITICS_KING_GEORGIOS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			expire = "1.1.1"
			ideology = national_populist_subtype
			traits = { byz_emporer }
		}
		add_country_leader_trait = byz_emporer
		if = {	
			limit = { has_country_leader = { name = "乔治斯二世" ruling_only = yes } }
			set_country_leader_portrait = {
				portrait = "gfx/leaders/GRE/Portrait_GRE_George_emporer.png"
			}
		}
	}
}

country_event = {
	id = gre.312
	title = gre.312.t
	desc = gre.312.d
	picture = GFX_news_event_GRE_emporer3

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_purple_pheonix
		has_country_leader = {
			ruling_only = yes
			name = "亚历山德罗斯一世"
		}
	}	
	
	option = {
		name = gre.312.a
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = agrarian_socialism_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = social_democrat_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = centrist_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = market_liberal_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = christian_democracy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = oligarchy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = absolute_monarchy_subtype
			traits = { byz_emporer }
		}
		create_country_leader = {
			name = "亚历山德罗斯三世"
			desc = "POLITICS_KING_ALEXANDROS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Alexander_emporer.png"
			expire = "1962.1.1"
			ideology = national_populist_subtype
			traits = { byz_emporer }
		}
	}
}


country_event = {
		id = gre.313
		###socialist syndie coalition
		immediate = {log = "[GetDateText]: [Root.GetName]: event gre.264"}
		title = gre.313.t
		desc = gre.313.d
		
		fire_only_once = yes
		
		is_triggered_only = yes
		
		option = {
			name = gre.313.a #What will happen now?
			add_stability = -0.10
		}
	}

country_event = {
			id = gre.314
			###elections and the process of prime ministership
			immediate = {log = "[GetDateText]: [Root.GetName]: event gre.264"}
			title = gre.314.t
			desc = gre.314.d
			
			fire_only_once = yes
			
		is_triggered_only = yes
			
			option = {
				name = gre.314.a #What will happen now?
				add_stability = -0.05
				add_popularity = {
					ideology = radical_socialist
					popularity = 0.1
				}
				country_event = {
					id = gre.316
					days = 10
				}
			}
}

country_event = {
	id = gre.315
	###elections and the process of prime ministership
	immediate = {log = "[GetDateText]: [Root.GetName]: event gre.264"}
	title = gre.315.t
	desc = gre.315.d
	
	fire_only_once = yes
	
	is_triggered_only = yes
	
	
	option = {
		name = gre.315.a #What will happen now?
		}
	}


country_event = {
	id = gre.316
	###anatolia riots
	immediate = {log = "[GetDateText]: [Root.GetName]: event gre.264"}
	title = gre.316.t
	desc = gre.316.d
	
	fire_only_once = yes
	
is_triggered_only = yes
	
	
	option = {
		name = gre.316.a #What will happen now?
		ai_chance = {
			factor = 90
		}
		set_country_flag = GRE_greeks_win
		}
	option = {
		name = gre.316.b #What will happen now?
		ai_chance = {
			factor = 10
		}
		hidden_effect = {
			country_event = {
				id = gre.317
				days = 5
				}
			}
		}
	}

country_event = {
		id = gre.317 
		###gommie!
		immediate = {log = "[GetDateText]: [Root.GetName]: event gre.264"}
		title = gre.317.t
		desc = gre.317.d
		
		fire_only_once = yes
		
	is_triggered_only = yes
		
		
		option = {
			name = gre.317.a #What will happen now?
			set_politics = {
				ruling_party = radical_socialist
		elections_allowed = no
			}
			remove_all_ministers = yes
			add_ideas = {
				GRE_Nikos_Ploumpidis_hog_rso
				GRE_Kostas_Gavriilides_for_rso
				GRE_Evristheas_Magiakos_sec_syn
				GRE_Alexandros_Svolos_eco_sde
			}
			set_country_flag = GRE_gommies_win
			}
		}
country_event = {
	id = gre.318
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.1" }
	title = gre.318.t
	desc = gre.318.d
	picture = GFX_report_event_GRE_hagia_sofia

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = gre.318.a
		add_political_power = 75
	}
}		
		
country_event = { #rome shit
	id = gre.319
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.319" }
	title = gre.319.t
	desc = gre.319.d
	picture = GFX_Latin_Empire

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = gre.319.a
		ai_chance = {
			factor = 100
		}
		add_political_power = 10
		add_stability = 0.01
	}
	option = {
		name = gre.319.b
		ai_chance = {
			factor = 0
		}
		add_state_claim = 460
		add_state_claim = 459
		add_state_claim = 805
		add_state_claim = 461
		add_state_claim = 290
		add_state_claim = 114
		add_state_claim = 1002
		add_state_claim = 1
		add_state_claim = 177
		add_state_claim = 179
		add_state_claim = 112
		add_state_claim = 181
		add_state_claim = 180
		add_state_claim = 171
		add_state_claim = 793
		add_state_claim = 174
		add_state_claim = 951
		add_state_claim = 170
		add_state_claim = 1316
		add_state_claim = 169
		add_state_claim = 118
		add_state_claim = 173
		add_state_claim = 795
		add_state_claim = 175
		add_state_claim = 41
		add_state_claim = 176
		add_state_claim = 172
		add_state_claim = 940
		add_state_claim = 166
		add_state_claim = 167
		add_state_claim = 168
		add_state_claim = 165
		add_state_claim = 1313
		add_state_claim = 942
		add_state_claim = 1235
		add_state_claim = 39
		add_state_claim = 759
		add_state_claim = 783
		add_state_claim = 160
		add_state_claim = 151
		add_state_claim = 761
		add_state_claim = 3
		add_state_claim = 760
		add_state_claim = 943
		add_state_claim = 764
		add_state_claim = 1005
		add_state_claim = 157
		add_state_claim = 1236
		add_state_claim = 162
		add_state_claim = 161
		add_state_claim = 1004
		add_state_claim = 159
		add_state_claim = 838
		add_state_claim = 158
		add_state_claim = 1003
		add_state_claim = 762
		add_state_claim = 21
		add_state_claim = 763
		add_state_claim = 735
		add_state_claim = 20
		add_state_claim = 32
		add_state_claim = 26
		add_state_claim = 25
		add_state_claim = 23
		add_state_claim = 19
		add_state_claim = 984
		add_state_claim = 31
		add_state_claim = 817
		add_state_claim = 22
		add_state_claim = 983
		add_state_claim = 14
		add_state_claim = 30
		add_state_claim = 33
		add_state_claim = 27
		add_state_claim = 785
		add_state_claim = 18
		add_state_claim = 16
		add_state_claim = 15
		add_state_claim = 24
		add_state_claim = 980
		add_state_claim = 17
		add_state_claim = 1315
		add_state_claim = 1317
		add_state_claim = 122
		add_state_claim = 32
		add_state_claim = 26
		add_state_claim = 25
		add_state_claim = 23
		add_state_claim = 19
		add_state_claim = 984
		add_state_claim = 31
		add_state_claim = 817
		add_state_claim = 22
		add_state_claim = 983
		add_state_claim = 14
		add_state_claim = 30
		add_state_claim = 33
		add_state_claim = 27
		add_state_claim = 785
		add_state_claim = 18
		add_state_claim = 16
		add_state_claim = 15
		add_state_claim = 24
		add_state_claim = 980
		add_state_claim = 17
		add_state_claim = 1315
		add_state_claim = 1317
		add_state_claim = 122
		add_state_claim = 123
		add_state_claim = 127
		add_state_claim = 338
		add_state_claim = 126
		add_state_claim = 125
		add_state_claim = 129
		add_state_claim = 128
		add_state_claim = 132
		add_state_claim = 130
		add_state_claim = 131
		add_state_claim = 462
		add_state_claim = 1318
	    add_state_claim = 513
		hidden_effect = { set_country_flag = BYZ_rome_larp_shit_full }
	}
}			
country_event = {
	id = gre.400 #greece demand serbia
	title = gre.400.t
	desc = gre.400.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.400.a
	
}
option = { #alright

	name = gre.400.b
	ai_chance = {
		factor = 100
	}
	GRE = {
		annex_country = {
			target = SER
			transfer_troops = yes
		}
	}
}
}
country_event = {
	id = gre.401 #greece demand bulgaria
	title = gre.400.t
	desc = gre.400.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.400.a
	
}
option = { #alright

	name = gre.400.b
	ai_chance = {
		factor = 100
	}
	GRE = {
		annex_country = {
			target = BUL
			transfer_troops = yes
		}
	}
}
}
country_event = {
	id = gre.402 #greece ask for help
	title = gre.402.t
	desc = gre.402.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.402.a
	
}
option = { #alright

	name = gre.402.b
	ai_chance = {
		factor = 100
	}
	GRE = {
		set_country_flag = GRE_ARM_JOINED_THIRD_GRETUR_WAR
	}
}
}
country_event = {
	id = gre.403 #greece ask for malta
	title = gre.403.t
	desc = gre.403.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.400.a
	
}
option = { #alright

	name = gre.400.b
	ai_chance = {
		factor = 100
	}
	GRE = {
		add_state_core = 116
		annex_country = {
			target = MLT
			transfer_troops = yes
		}
	}
}
}
country_event = {
	id = gre.404 #greece ask for malta
	title = gre.404.t
	desc = gre.404.d
	picture = GFX_report_event_generic_diplomacy1
	trigger = {
		tag = GRE
		49 = {
			is_owned_and_controlled_by = GRE
		}
		NOT = {
			has_completed_focus = GRE_glre
			has_completed_focus = GRE_dream_of_hellnoturkism
		}
	}
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.404.a
	add_ideas = GRE_turkish_resistence
	complete_national_focus = GRE_turkish_plot
}

}
country_event = {
	id = gre.407 #FREE GUNS
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.9 FROM = [From.GetName]" }
	title = gre.407.t
	desc = gre.407.d
	picture = GFX_report_event_generic_diplomacy3

	trigger = {
		tag = GRE
		date > 1936.6.10
	}

	mean_time_to_happen = {
		days = 0
	}

	fire_only_once = yes

	option = {
		name = gre.407.a
		add_to_variable = {
			var = golden_dawn_influence
			value = 5
		}
		custom_effect_tooltip = add_5_to_var_tt
		add_equipment_to_stockpile = {
			type = infantry_equipment
			amount = 200
			producer = TUR
		}
		add_political_power = -10
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_GOLDEN_DAWN_AI
			}
		}
	}
	option = {
		name = gre.407.b
		ai_chance = {
			factor = 1
		}
	}
}

country_event = {
	id = gre.408 #NATIONALIST BULLSHIT ON WALLS
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.9 FROM = [From.GetName]" }
	title = gre.408.t
	desc = gre.408.d
	picture = GFX_report_event_GRE_protest

	trigger = {
		tag = GRE
		date > 1936.3.15
	}

	mean_time_to_happen = {
		days = 0
	}

	fire_only_once = yes

	option = {
		name = gre.408.a
		add_political_power = -20
		ai_chance = {
			factor = 1
		}
	}
	option = {
		name = gre.408.b
		add_to_variable = {
			var = golden_dawn_influence
			value = 5
		}
		custom_effect_tooltip = add_5_to_var_tt
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_GOLDEN_DAWN_AI
			}
		}
		add_stability = -0.02
	}
}

country_event = {
	id = gre.412 #MILITIA QUESTION
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.11 FROM = [From.GetName]" }
	title = gre.412.t
	desc = gre.412.d
	picture = GFX_report_event_GRE_golden_dawn

	trigger = {
		tag = GRE
		date > 1936.5.2
	}

	fire_only_once = yes

	option = {
		name = gre.412.a #FULL INTEGRATION
		add_to_variable = {
			var = golden_dawn_influence
			value = 5
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_GOLDEN_DAWN_AI
			}
		}
		custom_effect_tooltip = add_5_to_var_tt
		add_manpower = 10000
		add_stability = -0.03
	}
	option = {
		name = gre.412.b #SUPPORT
		ai_chance = {
			factor = 10
		}
		
		add_political_power = -15
	
		
	}
}

country_event = {
	id = gre.413 #ANTI JEW MOMENT
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.13 FROM = [From.GetName]" }
	title = gre.413.t
	desc = gre.413.d
	picture = GFX_report_event_generic_big_city
	
	trigger = {
		tag = GRE
		date > 1936.7.23
	}

	fire_only_once = yes

	option = {
		name = gre.413.a
		add_to_variable = {
			var = golden_dawn_influence
			value = 7
		}
		custom_effect_tooltip = add_5_to_var_tt
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_GOLDEN_DAWN_AI
			}
		}
		
	}
	option = {
		name = gre.413.b
		
	}
}

country_event = {
	id = gre.414 #ZEUS Is BACC
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.14 FROM = [From.GetName]" }
	title = gre.414.t
	desc = gre.414.d
	picture = GFX_report_event_GRE_hellenism

	trigger = {
		tag = GRE
		date > 1936.8.29
	}

	mean_time_to_happen = {
		days = 0
	}

	fire_only_once = yes

	option = {
		name = gre.414.a
		add_to_variable = {
			var = golden_dawn_influence
			value = 7
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_GOLDEN_DAWN_AI
			}
		}
		custom_effect_tooltip = add_5_to_var_tt
		add_stability = -0.2
		add_political_power = 40
		
	}
	option = {
		name = gre.414.b
		add_stability = 0.2
		ai_chance = {
			factor = 1
		}
	}
}

country_event = {
	id = gre.415 #GOLDEN DAWN TAKEOWER
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" }
	title = gre.415.t
	desc = gre.415.d
	picture = GFX_report_event_GRE_golden_dawn
    trigger = {
		tag = GRE
		check_variable = {
			var = golden_dawn_influence
			value > 101
		}
		NOT = {
			has_completed_focus = GRE_left_gold_down
		}
	}
	fire_only_once = yes

	option = {
		name = gre.415.a
		
		set_country_flag = GRE_golden_dawn_off
		remove_ideas = GRE_golden_dawn
		remove_ideas = GRE_memories_of_king
		remove_ideas = GRE_anathema
		create_country_leader = {
			name = "乔治奥斯·斯皮里登·梅尔库里斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Georgios_Spyridon_Merkouris_fx.png"
			expire = "1.1.1"
			ideology = mercourism_subtype
		}
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = national_populist
					elections_allowed = no
					last_election = [GetCurrentDate]
					election_frequency = 48
				}
			}
			GetCurrentDate = "[GetDate]"
		}
		increase_ruling_party_popularity_by_10 = yes
		
		country_event = {
			id = gre.423
			days = 3
		}
		
	}
}

country_event = {
	id = gre.423 #SPARTA DED? IT WAS NUMBER 17 BUT IT ALWAYS CRASHED BECAUSE OF IT I DON'T KNOW WHY
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.23 FROM = [From.GetName]" }
	title = gre.423.t
	desc = gre.423.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes

	option = { #SPARTA
		name = gre.423.a
		complete_national_focus = GRE_golden_dawn_focus
		set_cosmetic_tag = GRE_kingdom_fake
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_GOLDEN_DAWN_AI
			}
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Georgios_Merkouris_hog_npo
			GRE_Ioannis_Rallis_for_npo
			GRE_Georgios_Simitis_eco_val
			GRE_Ioannis_Rallis_sec_npo
		}
		set_party_name = {
			ideology = national_populist
			name =  "金色黎明"
			long_name =  "希腊国家社会主义党——金色黎明"
		}
	}
	option = { #EGDY BS
		name = gre.423.b
		complete_national_focus = GRE_eee
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = national_populist
					elections_allowed = no
					last_election = [GetCurrentDate]
					election_frequency = 48
				}
			}
			GetCurrentDate = "[GetDate]"
		}
		create_country_leader = {
			name = "乔治·科斯米迪斯"
			desc = "POLITICS_GEORGIOS_KOSMIDIS_DESC"
			picture = "gfx/leaders/GRE/Portrait_GRE_Georgios_Kosmidis_KX.png"
			expire = "1.1.1"
			ideology = natpop_neo_feudalism_subtype
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Georgios_Poulos_hog_npo
			GRE_Dimitrios_Delivanis_for_val
			GRE_Hector_Tsironikos_eco_npo
			GRE_Anastasios_Tavoularis_sec_npo 
		}
		set_party_name = {
			ideology = national_populist
			name =  "希腊国民联盟"
			long_name =  "希腊国民联盟"
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				has_country_flag = GRE_EEE_AI
			}
		}

		increase_ruling_party_popularity_by_15 = yes
	}
	option = {
		name = gre.423.c #Konstantinos Speras wins the most votes and becomes chairman
		add_political_power = 75
		create_country_leader = {
			name = "康斯坦丁诺斯·斯佩拉斯"
			picture = "gfx/leaders/GRE/Portrait_GRE_Konstantinos_Speras.png"
			expire = "1.1.1"
			ideology = yellow_syndicalism_subtype
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		remove_all_ministers = yes
		set_party_name = {
			ideology = syndicalist
			name =  "金色黎明（左派）"
			long_name =  "希腊国家社会主义党—工团派"
		}
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Nikos_Beloyannis_eco_syn
			GRE_Loukas_Karliaftis_sec_rso
		}
		complete_national_focus = GRE_left_gold_down
	}
}

country_event = {
	id = gre.444 #turkey busted ask for peace
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.23 FROM = [From.GetName]" }
	title = gre.444.t
	desc = gre.444.d
	picture = GFX_report_event_generic_diplomacy1
	trigger = {
		tag = TUR
		has_global_flag = greco_turkey_war
		has_war_with = GRE
		NOT = { controls_state = 773 }
		GRE = {
			has_country_flag = GRE_republicans_win_referendum
			NOT = {
				has_socialist_government = yes
				has_government = market_liberal
			}
		}
	}
	fire_only_once = yes
	immediate = {
		clr_global_flag = greco_turkey_war
		remove_ideas = TUR_greco_turkey_war
		GRE = {
			remove_ideas = GRE_greco_turkey_war
		}
	}
	option = { #we are fucked
	ai_chance = {
		factor = 100
	}
		name = gre.444.a
		GRE = { transfer_state = 341 }
		GRE = { transfer_state = 773 }
		GRE = { transfer_state = 1225 }
		GRE = { transfer_state = 340 }
		GRE = { transfer_state = 187 }
		GRE = { transfer_state = 339 }
		GRE = { transfer_state = 164 }
		GRE = { transfer_state = 342 }
		GRE = { transfer_state = 183 }
		GRE = {
			add_state_claim = 341
			add_state_claim = 773
			add_state_claim = 1225
			add_state_claim = 340
			add_state_claim = 187
			add_state_claim = 339
			add_state_claim = 164
			add_state_claim = 342
			add_state_claim = 183
		}
		if = {
			limit = { owns_state = 1089 }
			GRE = { transfer_state = 1089 }
		}
		if = {
			limit = { owns_state = 184 }
			GRE = { transfer_state = 184 }
		}
		white_peace = GRE
		
			GRE = {
				set_country_flag = GRE_LIBCONFRE_victory
			}
		
		
	}
	option = { #screw it
		name = gre.423.b
		add_stability = -0.1
	}
}

country_event = {
	id = gre.445 #hidden event to trigger socialist and marlib victory
	
	hidden = yes
	trigger = {
		tag = GRE
		TUR = {
			is_subject_of = GRE
		}
	}
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	if = {
		limit = {
			OR = {
				has_government = market_liberal
				has_completed_focus = GRE_dream_of_hellnoturkism
			}
			
		}
		set_country_flag = GRE_EEK_victory
	}
	if = {
		limit = {
			NOT = {
				has_completed_focus = GRE_dream_of_hellnoturkism
			}
			has_socialist_government = yes
		}
		set_country_flag = GRE_SOC_victory
	}
}
	
}

country_event = {
	id = gre.446 #greece demand crete
	title = gre.446.t
	desc = gre.446.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.446.a
	
}
option = { #alright

	name = gre.446.b
	ai_chance = {
		factor = 100
	}
	GRE = {
		annex_country = {
			target = CRE
			transfer_troops = yes
		}
	}
}
}

country_event = {
	id = gre.500 #macidonian empire
	title = gre.500.t
	desc = gre.500.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.500.a
	
}
option = { #larp
	name = gre.500.b
	set_cosmetic_tag = GRE_MAC
	#舍迈尔山
	915 = { add_core_of = ROOT 
	  }
994 = { add_core_of = ROOT 
	  }
1035 = { add_core_of = ROOT 
	  }
#奥斯曼帝国
754 = { add_core_of = ROOT 
	  } #麦地那
355 = { add_core_of = ROOT 
	  }
1001 = { add_core_of = ROOT 
	  }
187 = { add_core_of = ROOT 
	  }
1225 = { add_core_of = ROOT 
	  }
341 = { add_core_of = ROOT 
	  }
773 = { add_core_of = ROOT 
	  }
340 = { add_core_of = ROOT 
	  }
339 = { add_core_of = ROOT 
	  }
343 = { add_core_of = ROOT 
	  }
342 = { add_core_of = ROOT 
	  }
164 = { add_core_of = ROOT 
	  }
346 = { add_core_of = ROOT 
	  }
49 = { add_core_of = ROOT 
	  }
356 = { add_core_of = ROOT 
	  }
345 = { add_core_of = ROOT 
	  }
354 = { add_core_of = ROOT 
	  }
352 = { add_core_of = ROOT 
	  }
350 = { add_core_of = ROOT 
	  }
344 = { add_core_of = ROOT 
	  }
677 = { add_core_of = ROOT 
	  }
680 = { add_core_of = ROOT 
	  }
995 = { add_core_of = ROOT 
	  }
183 = { add_core_of = ROOT 
	  }
554 = { add_core_of = ROOT 
	  }
553 = { add_core_of = ROOT 
	  }
455 = { add_core_of = ROOT 
	  }
992 = { add_core_of = ROOT 
	  }
454 = { add_core_of = ROOT 
	  }
453 = { add_core_of = ROOT 
	  }
753 = { add_core_of = ROOT 
	  }
676 = { add_core_of = ROOT 
	  }
819 = { add_core_of = ROOT 
	  }
349 = { add_core_of = ROOT 
	  }
291 = { add_core_of = ROOT 
	  }
812 = { add_core_of = ROOT 
	  }
450 = { add_core_of = ROOT 
	  }
#persia
417 = { add_core_of = ROOT 
	  }
419 = { add_core_of = ROOT 
	  }
421 = { add_core_of = ROOT 
	  }
413 = { add_core_of = ROOT 
	  }
266 = { add_core_of = ROOT 
	  }
420 = { add_core_of = ROOT 
	  }
411 = { add_core_of = ROOT 
	  }
412 = { add_core_of = ROOT 
	  }
414 = { add_core_of = ROOT 
	  }
410 = { add_core_of = ROOT 
	  }
416 = { add_core_of = ROOT 
	  }
804 = { add_core_of = ROOT 
	  }
418 = { add_core_of = ROOT 
	  }
#albania
766 = { add_core_of = ROOT 
	  }
#bulgaria
772 = { add_core_of = ROOT 
	  }
77 = { add_core_of = ROOT 
	  }
771 = { add_core_of = ROOT 
	  }
211 = { add_core_of = ROOT 
	  }
770 = { add_core_of = ROOT 
	  }
48 = { add_core_of = ROOT 
	  }
212 = { add_core_of = ROOT 
	  }
1089 = { add_core_of = ROOT 
	  }
184 = { add_core_of = ROOT 
	  }
769 = { add_core_of = ROOT 
	  }
106 = { add_core_of = ROOT 
	  }
731 = { add_core_of = ROOT 
	  }
#egypt
446 = { add_core_of = ROOT 
	  }
447 = { add_core_of = ROOT 
	  }
452 = { add_core_of = ROOT 
	  }
457 = { add_core_of = ROOT 
	  }
1008 = { add_core_of = ROOT 
	  }
456 = { add_core_of = ROOT 
	  }
552 = { add_core_of = ROOT 
	  }
#cyreniaca
451 = { add_core_of = ROOT 
	  }
663 = { add_core_of = ROOT 
	  }
1009 = { add_core_of = ROOT 
	  }
#afghanistan
1218 = { add_core_of = ROOT 
	  }
1219 = { add_core_of = ROOT 
	  }
415 = { add_core_of = ROOT 
	  }
267 = { add_core_of = ROOT 
	  }
1217 = { add_core_of = ROOT 
	  }
442 = { add_core_of = ROOT 
	  }
445 = { add_core_of = ROOT 
	  }
#希瓦
1275 = { add_core_of = ROOT 
	  }
584 = { add_core_of = ROOT 
	  }
#浩罕	   	
1209 = { add_core_of = ROOT 
	  }
1042 = { add_core_of = ROOT 
	  }
1211 = { add_core_of = ROOT 
	  }
1279 = { add_core_of = ROOT 
	  }			
#布哈拉
1276 = { add_core_of = ROOT 
	  }
405 = { add_core_of = ROOT 
	  }
1277 = { add_core_of = ROOT 
	  }
732 = { add_core_of = ROOT 
	  }
1210 = { add_core_of = ROOT 
	  }
#delhi
441 = { add_core_of = ROOT 
	  }
444 = { add_core_of = ROOT 
	  }
443 = { add_core_of = ROOT 
	  }
891 = { add_core_of = ROOT 
	  }


1271 = { add_core_of = ROOT 
	  }
	  


841 = { add_core_of = ROOT 
	  }
1090 = { add_core_of = ROOT 
	  }	
 					
}
}

country_event = {
	id = gre.501
	title = gre.307.t
	desc = gre.307.d

	fire_only_once = yes

	trigger = {
		tag = GRE
		has_completed_focus = GRE_purple_pheonix
		has_country_leader = {
			ruling_only = yes
			name = "卢卡斯四世"
		}
	}	
	
	option = {
		name = gre.307.a
		add_country_leader_trait = byz_emporer
		if = {	
			limit = { has_country_leader = { name = "卢卡斯四世" ruling_only = yes } }
			set_country_leader_name = {
				name = "阿夫托克拉托尔·卢卡斯四世·帕莱奥洛戈斯"
			}
		}
		
	}
}

country_event = {
	id = gre.502 #macidonian empire
	title = gre.500.t
	desc = gre.502.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes
	fire_only_once = yes
immediate = { 
	log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" 
	
}
option = { #screw it
	name = gre.500.a
	
}
option = { #larp
	name = gre.500.b
	set_cosmetic_tag = GRE_MAC_syndicalist
	#舍迈尔山
	915 = { add_core_of = ROOT 
	  }
994 = { add_core_of = ROOT 
	  }
1035 = { add_core_of = ROOT 
	  }
#奥斯曼帝国
754 = { add_core_of = ROOT 
	  } #麦地那
355 = { add_core_of = ROOT 
	  }
1001 = { add_core_of = ROOT 
	  }
187 = { add_core_of = ROOT 
	  }
1225 = { add_core_of = ROOT 
	  }
341 = { add_core_of = ROOT 
	  }
773 = { add_core_of = ROOT 
	  }
340 = { add_core_of = ROOT 
	  }
339 = { add_core_of = ROOT 
	  }
343 = { add_core_of = ROOT 
	  }
342 = { add_core_of = ROOT 
	  }
164 = { add_core_of = ROOT 
	  }
346 = { add_core_of = ROOT 
	  }
49 = { add_core_of = ROOT 
	  }
356 = { add_core_of = ROOT 
	  }
345 = { add_core_of = ROOT 
	  }
354 = { add_core_of = ROOT 
	  }
352 = { add_core_of = ROOT 
	  }
350 = { add_core_of = ROOT 
	  }
344 = { add_core_of = ROOT 
	  }
677 = { add_core_of = ROOT 
	  }
680 = { add_core_of = ROOT 
	  }
995 = { add_core_of = ROOT 
	  }
183 = { add_core_of = ROOT 
	  }
554 = { add_core_of = ROOT 
	  }
553 = { add_core_of = ROOT 
	  }
455 = { add_core_of = ROOT 
	  }
992 = { add_core_of = ROOT 
	  }
454 = { add_core_of = ROOT 
	  }
453 = { add_core_of = ROOT 
	  }
753 = { add_core_of = ROOT 
	  }
676 = { add_core_of = ROOT 
	  }
819 = { add_core_of = ROOT 
	  }
349 = { add_core_of = ROOT 
	  }
291 = { add_core_of = ROOT 
	  }
812 = { add_core_of = ROOT 
	  }
450 = { add_core_of = ROOT 
	  }
#persia
417 = { add_core_of = ROOT 
	  }
419 = { add_core_of = ROOT 
	  }
421 = { add_core_of = ROOT 
	  }
413 = { add_core_of = ROOT 
	  }
266 = { add_core_of = ROOT 
	  }
420 = { add_core_of = ROOT 
	  }
411 = { add_core_of = ROOT 
	  }
412 = { add_core_of = ROOT 
	  }
414 = { add_core_of = ROOT 
	  }
410 = { add_core_of = ROOT 
	  }
416 = { add_core_of = ROOT 
	  }
804 = { add_core_of = ROOT 
	  }
418 = { add_core_of = ROOT 
	  }
#albania
766 = { add_core_of = ROOT 
	  }
#bulgaria
772 = { add_core_of = ROOT 
	  }
77 = { add_core_of = ROOT 
	  }
771 = { add_core_of = ROOT 
	  }
211 = { add_core_of = ROOT 
	  }
770 = { add_core_of = ROOT 
	  }
48 = { add_core_of = ROOT 
	  }
212 = { add_core_of = ROOT 
	  }
1089 = { add_core_of = ROOT 
	  }
184 = { add_core_of = ROOT 
	  }
769 = { add_core_of = ROOT 
	  }
106 = { add_core_of = ROOT 
	  }
731 = { add_core_of = ROOT 
	  }
#egypt
446 = { add_core_of = ROOT 
	  }
447 = { add_core_of = ROOT 
	  }
452 = { add_core_of = ROOT 
	  }
457 = { add_core_of = ROOT 
	  }
1008 = { add_core_of = ROOT 
	  }
456 = { add_core_of = ROOT 
	  }
552 = { add_core_of = ROOT 
	  }
#cyreniaca
451 = { add_core_of = ROOT 
	  }
663 = { add_core_of = ROOT 
	  }
1009 = { add_core_of = ROOT 
	  }
#afghanistan
1218 = { add_core_of = ROOT 
	  }
1219 = { add_core_of = ROOT 
	  }
415 = { add_core_of = ROOT 
	  }
267 = { add_core_of = ROOT 
	  }
1217 = { add_core_of = ROOT 
	  }
442 = { add_core_of = ROOT 
	  }
445 = { add_core_of = ROOT 
	  }
#希瓦
1275 = { add_core_of = ROOT 
	  }
584 = { add_core_of = ROOT 
	  }
#浩罕	   	
1209 = { add_core_of = ROOT 
	  }
1042 = { add_core_of = ROOT 
	  }
1211 = { add_core_of = ROOT 
	  }
1279 = { add_core_of = ROOT 
	  }			
#布哈拉
1276 = { add_core_of = ROOT 
	  }
405 = { add_core_of = ROOT 
	  }
1277 = { add_core_of = ROOT 
	  }
732 = { add_core_of = ROOT 
	  }
1210 = { add_core_of = ROOT 
	  }
#delhi
441 = { add_core_of = ROOT 
	  }
444 = { add_core_of = ROOT 
	  }
443 = { add_core_of = ROOT 
	  }
891 = { add_core_of = ROOT 
	  }


1271 = { add_core_of = ROOT 
	  }
	  


841 = { add_core_of = ROOT 
	  }
1090 = { add_core_of = ROOT 
	  }	
 					
}
}
country_event = {
	id = gre.503 #average trots
	title = gre.503.t
	desc = gre.503.d

	fire_only_once = yes

	is_triggered_only = yes
	
	option = {
		name = gre.503.a
		ai_will_do = {
			factor = 0
		}
		every_state = {
			
			GRE = {
				add_state_core = PREV
			}
			
		}
		
	}
	option = {
		name = gre.503.b
		add_stability = 0.1
		
		
	}
}
country_event = {
	id = gre.504 #panslav
	title = gre.504.t
	desc = gre.504.d

	fire_only_once = yes

	is_triggered_only = yes
	
	option = {
		name = gre.504.a
		ai_will_do = {
			factor = 0
		}
		set_cosmetic_tag = FORM_SLV
			every_state = {
				limit = {
					OR = {
						is_core_of = RUS
						is_claimed_by = RUS
						is_core_of = TRM
						is_claimed_by = TRM
						is_core_of = UKR
						is_claimed_by = UKR
						is_core_of = WHR
						is_claimed_by = WHR
						is_core_of = SER
						is_claimed_by = SER
						is_core_of = BUL
						is_claimed_by = BUL
						is_core_of = CZE
						is_claimed_by = CZE
						is_core_of = SVK
						is_claimed_by = SVK
						is_core_of = POL
						is_claimed_by = POL
						is_core_of = GAL
						is_claimed_by = GAL
						is_core_of = SLO
						is_claimed_by = SLO
						is_core_of = CRO
						is_claimed_by = CRO
						is_core_of = BOS
						is_claimed_by = BOS
						is_core_of = MNT
						is_claimed_by = MNT
					    }
				    }
				add_core_of = ROOT
			    }			
               
			    #大顿河军团
				1231 = { add_core_of = ROOT }
				1263 = { add_core_of = ROOT }
				218 = { add_core_of = ROOT }
				1265 = { add_core_of = ROOT }
				1264 = { add_core_of = ROOT }
				1226 = { add_core_of = ROOT }
				237 = { add_core_of = ROOT }
				238 = { add_core_of = ROOT }
				245 = { add_core_of = ROOT }
				1266 = { add_core_of = ROOT }
                #库班
				234 = { add_core_of = ROOT }
				235 = { add_core_of = ROOT }
				1227 = { add_core_of = ROOT }
			    #北高加索   
				1186 = { add_core_of = ROOT }
				1187 = { add_core_of = ROOT }
				1189 = { add_core_of = ROOT }
				233 = { add_core_of = ROOT }
				787 = { add_core_of = ROOT }
				1191 = { add_core_of = ROOT }
				232 = { add_core_of = ROOT }
					
				#伏伊伏丁那
				45 = { add_core_of = ROOT }
				#西巴纳特
				875 = { add_core_of = ROOT }
				#卡林西亚（原奥地利领土）	   
				835 = { add_claim_by = ROOT }
				#波兹南
				86 = { add_core_of = ROOT }
				#西里西亚
				66 = { add_core_of = ROOT }
				67 = { add_core_of = ROOT }
				#波美拉尼亚
				63 = { add_core_of = ROOT }
				62 = { add_claim_by = ROOT }
				#但泽
				776 = { add_core_of = ROOT }
				#马祖里亚
				777 = { add_core_of = ROOT }
				#诺伊马尔克
				68 = { add_core_of = ROOT }
				#梅克伦堡
				61 = { add_claim_by = ROOT }
				#柏林
				64 = { add_claim_by = ROOT }
				#萨克森
				65 = { add_claim_by = ROOT }
				#萨哈林岛
				537 = { add_core_of = ROOT }
				#千岛群岛
				555 = { add_core_of = ROOT }
				1119 = { add_core_of = ROOT }
				73 = { add_core_of = ROOT }
	}
	option = {
		name = gre.504.b
		add_stability = 0.1
		
		
	}
}
country_event = {
	id = gre.505 #
	title = gre.505.t
	desc = gre.505.d

	fire_only_once = yes

	is_triggered_only = yes
	
	option = {
		name = gre.505.a
		set_country_leader_ideology = autdem_legionarism_subtype
		
	}
	option = {
		name = gre.505.b
		set_country_leader_ideology = authdem_paternal_socialism_subtype
		
		
	}
	option = {
		name = gre.505.c
		set_country_leader_ideology = social_nationalism_subtype
		
		
	}
	option = {
		name = gre.505.e
		set_country_leader_ideology = generic_national_democracy_subtype 
		
		
	}
	option = {
		name = gre.505.f

		
		
	}
}
country_event = {
	id = gre.506 #
	title = gre.506.t
	desc = gre.506.d

	fire_only_once = yes

	is_triggered_only = yes
	
	option = {
		name = gre.506.a
		create_country_leader = {
				name = "索蒂利奥斯·戈扎马尼斯"
				picture = "gfx/leaders/GRE/Portrait_GRE_Sotirios_Gotzamanis.png"
				expire = "1.1.1"
				ideology = authdem_national_conservative_subtype
		}
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = "国家改革党"
			name = "国家改革党"
		}
	}
	
}